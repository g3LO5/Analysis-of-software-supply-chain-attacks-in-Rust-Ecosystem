--[ Match #1 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\server.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     pub fn builder() -> Builder {
  |         let mut ctx = SslContext::builder(SslMethod::tls()).unwrap();
  |         ctx.set_certificate_chain_file("test/cert.pem").unwrap();
  |         ctx.set_private_key_file("test/key.pem", SslFiletype::PEM)
  |             .unwrap();
  | 
  |         Builder {
  | 

--[ Match #2 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let pkey = String::from_utf8(
  |             ssl.private_key()
  |                 .unwrap()
  |                 .private_key_to_pem_pkcs8()
  |                 .unwrap(),
  |         )
  |         .unwrap();
  | 

--[ Match #3 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     ssl.set_private_key(pkey.as_ref()).unwrap();
  |     {
  |         let pkey = String::from_utf8(
  |             ssl.private_key()
  |                 .unwrap()
  |                 .private_key_to_pem_pkcs8()
  |                 .unwrap(),
  | 

--[ Match #4 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         assert!(pkey.lines().eq(key_str.lines()));
  |     }
  |     let pkey = PKey::private_key_from_pem(KEY).unwrap();
  |     ssl.set_private_key(pkey.as_ref()).unwrap();
  |     {
  |         let pkey = String::from_utf8(
  |             ssl.private_key()
  | 

--[ Match #5 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         .unwrap();
  |         assert!(pkey.lines().eq(key_str.lines()));
  |     }
  |     let pkey = PKey::private_key_from_pem(KEY).unwrap();
  |     ssl.set_private_key(pkey.as_ref()).unwrap();
  |     {
  |         let pkey = String::from_utf8(
  | 

--[ Match #6 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let pkey = String::from_utf8(
  |             ssl.private_key()
  |                 .unwrap()
  |                 .private_key_to_pem_pkcs8()
  |                 .unwrap(),
  |         )
  |         .unwrap();
  | 

--[ Match #7 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         .unwrap();
  |     {
  |         let pkey = String::from_utf8(
  |             ssl.private_key()
  |                 .unwrap()
  |                 .private_key_to_pem_pkcs8()
  |                 .unwrap(),
  | 

--[ Match #8 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     let cert_x509 = X509::from_pem(CERT).unwrap();
  |     let mut ssl = Ssl::new(&ctx).unwrap();
  |     assert!(ssl.set_method(SslMethod::tls()).is_ok());
  |     ssl.set_private_key_file("test/key.pem", SslFiletype::PEM)
  |         .unwrap();
  |     {
  |         let pkey = String::from_utf8(
  | 

--[ Match #9 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         .set_certificate_file(Path::new("test/cert.pem"), SslFiletype::PEM)
  |         .unwrap();
  |     server_ctx
  |         .set_private_key_file(Path::new("test/key.pem"), SslFiletype::PEM)
  |         .unwrap();
  |     const COOKIE: &[u8] = b"chocolate chip";
  |     server_ctx.set_stateless_cookie_generate_cb(|_tls, buf| {
  | 

--[ Match #10 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let mut ctx = SslContext::builder(SslMethod::tls()).unwrap();
  |         ctx.set_certificate_file(Path::new("test/cert.pem"), SslFiletype::PEM)
  |             .unwrap();
  |         ctx.set_private_key_file(Path::new("test/key.pem"), SslFiletype::PEM)
  |             .unwrap();
  |         let ssl = Ssl::new(&ctx.build()).unwrap();
  |         let mut stream = ssl.accept(stream).unwrap();
  | 

--[ Match #11 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let key = PKey::private_key_from_pem(KEY).unwrap();
  |         let cert = X509::from_pem(CERT).unwrap();
  |         let mut acceptor = new(SslMethod::tls()).unwrap();
  |         acceptor.set_private_key(&key).unwrap();
  |         acceptor.set_certificate(&cert).unwrap();
  |         let acceptor = acceptor.build();
  |         let stream = listener.accept().unwrap().0;
  | 

--[ Match #12 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     let port = listener.local_addr().unwrap().port();
  | 
  |     let t = thread::spawn(move || {
  |         let key = PKey::private_key_from_pem(KEY).unwrap();
  |         let cert = X509::from_pem(CERT).unwrap();
  |         let mut acceptor = new(SslMethod::tls()).unwrap();
  |         acceptor.set_private_key(&key).unwrap();
  | 

--[ Match #13 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let mut ctx = SslContext::builder(SslMethod::dtls()).unwrap();
  |         ctx.set_certificate_file(Path::new("test/cert.pem"), SslFiletype::PEM)
  |             .unwrap();
  |         ctx.set_private_key_file(Path::new("test/key.pem"), SslFiletype::PEM)
  |             .unwrap();
  |         let mut ssl = Ssl::new(&ctx.build()).unwrap();
  |         ssl.set_tlsext_use_srtp("SRTP_AES128_CM_SHA1_80:SRTP_AES128_CM_SHA1_32")
  | 

--[ Match #14 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |             .unwrap();
  |         ctx.set_certificate_file(Path::new("test/cert.pem"), SslFiletype::PEM)
  |             .unwrap();
  |         ctx.set_private_key_file(Path::new("test/key.pem"), SslFiletype::PEM)
  |             .unwrap();
  |         let mut ssl = Ssl::new(&ctx.build()).unwrap();
  |         ssl.set_mtu(1500).unwrap();
  | 

--[ Match #15 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |             EcKey::from_private_components(&group, key.private_key(), key.public_key()).unwrap();
  |         dup_key.check_key().unwrap();
  | 
  |         assert!(key.private_key() == dup_key.private_key());
  |     }
  | 
  |     #[test]
  | 

--[ Match #16 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |             EcKey::from_private_components(&group, key.private_key(), key.public_key()).unwrap();
  |         dup_key.check_key().unwrap();
  | 
  |         assert!(key.private_key() == dup_key.private_key());
  |     }
  | 
  |     #[test]
  | 

--[ Match #17 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let key = EcKey::generate(&group).unwrap();
  | 
  |         let dup_key =
  |             EcKey::from_private_components(&group, key.private_key(), key.public_key()).unwrap();
  |         dup_key.check_key().unwrap();
  | 
  |         assert!(key.private_key() == dup_key.private_key());
  | 

--[ Match #18 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let mut ctx = BigNumContext::new().unwrap();
  |         let mut public_key = EcPoint::new(&group).unwrap();
  |         public_key
  |             .mul_generator(&group, key.private_key(), &ctx)
  |             .unwrap();
  |         assert!(public_key.eq(&group, key.public_key(), &mut ctx).unwrap());
  |     }
  | 

--[ Match #19 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         #[corresponds(d2i_ECPrivateKey)]
  |         private_key_from_der,
  |         EcKey<Private>,
  |         ffi::d2i_ECPrivateKey
  |     }
  | }
  | 
  | 

--[ Match #20 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     from_der! {
  |         /// Decodes a DER-encoded elliptic curve private key structure.
  |         #[corresponds(d2i_ECPrivateKey)]
  |         private_key_from_der,
  |         EcKey<Private>,
  |         ffi::d2i_ECPrivateKey
  |     }
  | 

--[ Match #21 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     from_der! {
  |         /// Decodes a DER-encoded elliptic curve private key structure.
  |         #[corresponds(d2i_ECPrivateKey)]
  |         private_key_from_der,
  |         EcKey<Private>,
  |         ffi::d2i_ECPrivateKey
  | 

--[ Match #22 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         #[corresponds(PEM_read_bio_ECPrivateKey)]
  |         private_key_from_pem_callback,
  |         EcKey<Private>,
  |         ffi::PEM_read_bio_ECPrivateKey
  |     }
  | 
  |     from_der! {
  | 

--[ Match #23 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         ///
  |         /// The input should have a header of `-----BEGIN EC PRIVATE KEY-----`.
  |         #[corresponds(PEM_read_bio_ECPrivateKey)]
  |         private_key_from_pem_callback,
  |         EcKey<Private>,
  |         ffi::PEM_read_bio_ECPrivateKey
  |     }
  | 

--[ Match #24 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// The callback should fill the password into the provided buffer and return its length.
  |         ///
  |         /// The input should have a header of `-----BEGIN EC PRIVATE KEY-----`.
  |         #[corresponds(PEM_read_bio_ECPrivateKey)]
  |         private_key_from_pem_callback,
  |         EcKey<Private>,
  |         ffi::PEM_read_bio_ECPrivateKey
  | 

--[ Match #25 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted ECPrivateKey structure.
  |         ///
  |         /// The callback should fill the password into the provided buffer and return its length.
  |         ///
  |         /// The input should have a header of `-----BEGIN EC PRIVATE KEY-----`.
  |         #[corresponds(PEM_read_bio_ECPrivateKey)]
  | 

--[ Match #26 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         #[corresponds(PEM_read_bio_ECPrivateKey)]
  |         private_key_from_pem_passphrase,
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted ECPrivateKey structure.
  |         ///
  |         /// The callback should fill the password into the provided buffer and return its length.
  |         ///
  | 

--[ Match #27 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         ///
  |         /// The input should have a header of `-----BEGIN EC PRIVATE KEY-----`.
  |         #[corresponds(PEM_read_bio_ECPrivateKey)]
  |         private_key_from_pem_passphrase,
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted ECPrivateKey structure.
  |         ///
  | 

--[ Match #28 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// Deserializes a private key from a PEM-encoded encrypted ECPrivateKey structure.
  |         ///
  |         /// The input should have a header of `-----BEGIN EC PRIVATE KEY-----`.
  |         #[corresponds(PEM_read_bio_ECPrivateKey)]
  |         private_key_from_pem_passphrase,
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted ECPrivateKey structure.
  | 

--[ Match #29 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         #[corresponds(PEM_read_bio_ECPrivateKey)]
  |         private_key_from_pem,
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted ECPrivateKey structure.
  |         ///
  |         /// The input should have a header of `-----BEGIN EC PRIVATE KEY-----`.
  |         #[corresponds(PEM_read_bio_ECPrivateKey)]
  | 

--[ Match #30 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         ///
  |         /// The input should have a header of `-----BEGIN EC PRIVATE KEY-----`.
  |         #[corresponds(PEM_read_bio_ECPrivateKey)]
  |         private_key_from_pem,
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted ECPrivateKey structure.
  |         ///
  | 

--[ Match #31 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// Deserializes a private key from a PEM-encoded ECPrivateKey structure.
  |         ///
  |         /// The input should have a header of `-----BEGIN EC PRIVATE KEY-----`.
  |         #[corresponds(PEM_read_bio_ECPrivateKey)]
  |         private_key_from_pem,
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted ECPrivateKey structure.
  | 

--[ Match #32 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     private_key_from_pem! {
  |         /// Deserializes a private key from a PEM-encoded ECPrivateKey structure.
  |         ///
  |         /// The input should have a header of `-----BEGIN EC PRIVATE KEY-----`.
  |         #[corresponds(PEM_read_bio_ECPrivateKey)]
  | 

--[ Match #33 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         }
  |     }
  | 
  |     private_key_from_pem! {
  |         /// Deserializes a private key from a PEM-encoded ECPrivateKey structure.
  |         ///
  |         /// The input should have a header of `-----BEGIN EC PRIVATE KEY-----`.
  | 

--[ Match #34 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |                     cvt(ffi::EC_KEY_set_group(key.as_ptr(), group.as_ptr())).map(|_| key)
  |                 })
  |                 .and_then(|key| {
  |                     cvt(ffi::EC_KEY_set_private_key(
  |                         key.as_ptr(),
  |                         private_number.as_ptr(),
  |                     ))
  | 

--[ Match #35 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     /// Constructs an public/private key pair given a curve, a private key and a public key point.
  |     #[corresponds(EC_KEY_set_private_key)]
  |     pub fn from_private_components(
  |         group: &EcGroupRef,
  |         private_number: &BigNumRef,
  | 

--[ Match #36 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// assert_ne!(public_key[0], 0x04);
  |     ///
  |     /// let private_key = key.private_key().to_vec();
  |     /// assert!(private_key.len() >= 31);
  |     /// # Ok(()) }
  |     /// ```
  |     #[corresponds(EC_KEY_generate_key)]
  | 

--[ Match #37 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// assert_eq!(public_key.len(), 33);
  |     /// assert_ne!(public_key[0], 0x04);
  |     ///
  |     /// let private_key = key.private_key().to_vec();
  |     /// assert!(private_key.len() >= 31);
  |     /// # Ok(()) }
  |     /// ```
  | 

--[ Match #38 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// assert_eq!(public_key.len(), 33);
  |     /// assert_ne!(public_key[0], 0x04);
  |     ///
  |     /// let private_key = key.private_key().to_vec();
  |     /// assert!(private_key.len() >= 31);
  |     /// # Ok(()) }
  |     /// ```
  | 

--[ Match #39 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[corresponds(EC_KEY_get0_private_key)]
  |     pub fn private_key(&self) -> &BigNumRef {
  |         unsafe {
  |             let ptr = ffi::EC_KEY_get0_private_key(self.as_ptr());
  |             BigNumRef::from_const_ptr(ptr)
  |         }
  |     }
  | 

--[ Match #40 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     /// Returns the private key value.
  |     #[corresponds(EC_KEY_get0_private_key)]
  |     pub fn private_key(&self) -> &BigNumRef {
  |         unsafe {
  |             let ptr = ffi::EC_KEY_get0_private_key(self.as_ptr());
  |             BigNumRef::from_const_ptr(ptr)
  | 

--[ Match #41 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     /// Returns the private key value.
  |     #[corresponds(EC_KEY_get0_private_key)]
  |     pub fn private_key(&self) -> &BigNumRef {
  |         unsafe {
  |             let ptr = ffi::EC_KEY_get0_private_key(self.as_ptr());
  | 

--[ Match #42 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// Serializes the private key into a DER-encoded ECPrivateKey structure.
  |         #[corresponds(i2d_ECPrivateKey)]
  |         private_key_to_der,
  |         ffi::i2d_ECPrivateKey
  |     }
  | 
  |     /// Returns the private key value.
  | 

--[ Match #43 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     to_der! {
  |         /// Serializes the private key into a DER-encoded ECPrivateKey structure.
  |         #[corresponds(i2d_ECPrivateKey)]
  |         private_key_to_der,
  |         ffi::i2d_ECPrivateKey
  |     }
  | 
  | 

--[ Match #44 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     to_der! {
  |         /// Serializes the private key into a DER-encoded ECPrivateKey structure.
  |         #[corresponds(i2d_ECPrivateKey)]
  |         private_key_to_der,
  |         ffi::i2d_ECPrivateKey
  |     }
  | 

--[ Match #45 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     to_der! {
  |         /// Serializes the private key into a DER-encoded ECPrivateKey structure.
  |         #[corresponds(i2d_ECPrivateKey)]
  |         private_key_to_der,
  |         ffi::i2d_ECPrivateKey
  | 

--[ Match #46 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// The output will have a header of `-----BEGIN EC PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_ECPrivateKey)]
  |         private_key_to_pem_passphrase,
  |         ffi::PEM_write_bio_ECPrivateKey
  |     }
  | 
  |     to_der! {
  | 

--[ Match #47 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         ///
  |         /// The output will have a header of `-----BEGIN EC PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_ECPrivateKey)]
  |         private_key_to_pem_passphrase,
  |         ffi::PEM_write_bio_ECPrivateKey
  |     }
  | 
  | 

--[ Match #48 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// Serializes the private key to a PEM-encoded encrypted ECPrivateKey structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN EC PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_ECPrivateKey)]
  |         private_key_to_pem_passphrase,
  |         ffi::PEM_write_bio_ECPrivateKey
  |     }
  | 

--[ Match #49 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// The output will have a header of `-----BEGIN EC PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_ECPrivateKey)]
  |         private_key_to_pem,
  |         /// Serializes the private key to a PEM-encoded encrypted ECPrivateKey structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN EC PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_ECPrivateKey)]
  | 

--[ Match #50 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         ///
  |         /// The output will have a header of `-----BEGIN EC PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_ECPrivateKey)]
  |         private_key_to_pem,
  |         /// Serializes the private key to a PEM-encoded encrypted ECPrivateKey structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN EC PRIVATE KEY-----`.
  | 

--[ Match #51 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// Serializes the private key to a PEM-encoded ECPrivateKey structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN EC PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_ECPrivateKey)]
  |         private_key_to_pem,
  |         /// Serializes the private key to a PEM-encoded encrypted ECPrivateKey structure.
  |         ///
  | 

--[ Match #52 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     T: HasPrivate,
  | {
  |     private_key_to_pem! {
  |         /// Serializes the private key to a PEM-encoded ECPrivateKey structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN EC PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_ECPrivateKey)]
  | 

--[ Match #53 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | where
  |     T: HasPrivate,
  | {
  |     private_key_to_pem! {
  |         /// Serializes the private key to a PEM-encoded ECPrivateKey structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN EC PRIVATE KEY-----`.
  | 

--[ Match #54 of 666 ]--
   Rule Id: BD000801
       Tag: Security.Backdoor.ExecuteObfuscatedCode
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\tests.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){5,}
  |                 .other("clientAuth")
  |                 .build()
  |                 .unwrap(),
  |             b"0\x22\x06\x03U\x1d%\x04\x1b0\x19\x06\x08+\x06\x01\x05\x05\x07\x03\x01\x06\x03\x887\x01
  |         ),
  |     ] {
  |         assert_eq!(&ext.to_der().unwrap(), expected);
  | 

--[ Match #55 of 666 ]--
   Rule Id: BD000801
       Tag: Security.Backdoor.ExecuteObfuscatedCode
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\tests.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){5,}
  |                 .other("clientAuth")
  |                 .build()
  |                 .unwrap(),
  |             b"0\x22\x06\x03U\x1d%\x04\x1b0\x19\x06\x08+\x06\x01\x05\x05\x07\x03\x01\x06\x03\x887\x01
  |         ),
  |     ] {
  |         assert_eq!(&ext.to_der().unwrap(), expected);
  | 

--[ Match #56 of 666 ]--
   Rule Id: BD000801
       Tag: Security.Backdoor.ExecuteObfuscatedCode
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\tests.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){5,}
  |     for (ext, expected) in [
  |         (
  |             BasicConstraints::new().critical().ca().build().unwrap(),
  |             b"0\x0f\x06\x03U\x1d\x13\x01\x01\xff\x04\x050\x03\x01\x01\xff" as &[u8],
  |         ),
  |         (
  |             SubjectAlternativeName::new()
  | 

--[ Match #57 of 666 ]--
   Rule Id: BD000801
       Tag: Security.Backdoor.ExecuteObfuscatedCode
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\tests.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){5,}
  |     .unwrap();
  |     assert_eq!(
  |         ext.to_der().unwrap(),
  |         b"0\x0f\x06\x03U\x1d\x13\x01\x01\xff\x04\x050\x03\x01\x01\xff"
  |     );
  | }
  | 
  | 

--[ Match #58 of 666 ]--
   Rule Id: BD000801
       Tag: Security.Backdoor.ExecuteObfuscatedCode
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\tests.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){5,}
  |     let ext = X509Extension::new_from_der(
  |         &Asn1Object::from_str("2.5.29.19").unwrap(),
  |         true,
  |         &Asn1OctetString::new_from_bytes(b"\x30\x03\x01\x01\xff").unwrap(),
  |     )
  |     .unwrap();
  |     assert_eq!(
  | 

--[ Match #59 of 666 ]--
   Rule Id: BD000801
       Tag: Security.Backdoor.ExecuteObfuscatedCode
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\tests.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){5,}
  |     let authority_key_id = cert.authority_key_id().unwrap();
  |     assert_eq!(
  |         authority_key_id.as_slice(),
  |         &b"\x6C\xD3\xA5\x03\xAB\x0D\x5F\x2C\xC9\x8D\x8A\x9C\x88\xA7\x88\x77\xB8\x37\xFD\x9A"[..]
  |     );
  | }
  | 
  | 

--[ Match #60 of 666 ]--
   Rule Id: BD000801
       Tag: Security.Backdoor.ExecuteObfuscatedCode
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\tests.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){5,}
  |     let subject_key_id = cert.subject_key_id().unwrap();
  |     assert_eq!(
  |         subject_key_id.as_slice(),
  |         &b"\xB6\x73\x2F\x61\xA5\x4B\xA1\xEF\x48\x2C\x15\xB1\x9F\xF3\xDC\x34\x2F\xBC\xAC\x30"[..]
  |     );
  | }
  | 
  | 

--[ Match #61 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         ctx.cipher_final_vec(&mut encrypted).unwrap();
  | 
  |         let mut decrypted = vec![];
  |         ctx.open_init(Some(cipher), &encrypted_key, Some(&iv), Some(&private_key))
  |             .unwrap();
  |         ctx.cipher_update_vec(&encrypted, &mut decrypted).unwrap();
  |         ctx.cipher_final_vec(&mut decrypted).unwrap();
  | 

--[ Match #62 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn seal_open() {
  |         let private_pem = include_bytes!("../test/rsa.pem");
  |         let public_pem = include_bytes!("../test/rsa.pem.pub");
  |         let private_key = PKey::private_key_from_pem(private_pem).unwrap();
  |         let public_key = PKey::public_key_from_pem(public_pem).unwrap();
  |         let cipher = Cipher::aes_256_cbc();
  |         let secret = b"My secret message";
  | 

--[ Match #63 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn seal_open() {
  |         let private_pem = include_bytes!("../test/rsa.pem");
  |         let public_pem = include_bytes!("../test/rsa.pem.pub");
  |         let private_key = PKey::private_key_from_pem(private_pem).unwrap();
  |         let public_key = PKey::public_key_from_pem(public_pem).unwrap();
  |         let cipher = Cipher::aes_256_cbc();
  |         let secret = b"My secret message";
  | 

--[ Match #64 of 666 ]--
   Rule Id: BD000702
       Tag: Security.Backdoor.DataExfiltration.Environment
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: (env|environment).{1,50}(get|post|curl|nc|invoke-restmethod)
  |         Ok(())
  |     }
  | 
  |     /// Initializes the context to perform envelope encryption.
  |     ///
  |     /// Normally this is called once to set both the cipher and public keys. However, this process m
  |     /// first providing the cipher with no public keys and then setting the public keys with no ciph
  | 

--[ Match #65 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | //!
  | //! // Load private and public key from string:
  | //! let pubkey = Rsa::public_key_from_pem_pkcs1(&pubkey_pem).unwrap();
  | //! let privkey = Rsa::private_key_from_pem_passphrase(&privkey_pem, b"Rust").unwrap();
  | //!
  | //! // Use the asymmetric keys to encrypt and decrypt a short message:
  | //! let msg = b"Foo bar";
  | 

--[ Match #66 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | //! let keypair = Rsa::generate(2048).unwrap();
  | //! let cipher = Cipher::aes_256_cbc();
  | //! let pubkey_pem = keypair.public_key_to_pem_pkcs1().unwrap();
  | //! let privkey_pem = keypair.private_key_to_pem_passphrase(cipher, b"Rust").unwrap();
  | //! // pubkey_pem and privkey_pem could be written to file here.
  | //!
  | //! // Load private and public key from string:
  | 

--[ Match #67 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkcs12.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[corresponds(PKCS12_create)]
  |     pub fn build2(&self, password: &str) -> Result<Pkcs12, ErrorStack> {
  |         unsafe {
  |             let pass = CString::new(password).unwrap();
  |             let pass = pass.as_ptr();
  |             let friendly_name = self.name.as_ref().map_or(ptr::null(), |p| p.as_ptr());
  |             let pkey = self.pkey.as_ref().map_or(ptr::null(), |p| p.as_ptr());
  | 

--[ Match #68 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkcs12.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     /// Builds the PKCS#12 object.
  |     #[corresponds(PKCS12_create)]
  |     pub fn build2(&self, password: &str) -> Result<Pkcs12, ErrorStack> {
  |         unsafe {
  |             let pass = CString::new(password).unwrap();
  |             let pass = pass.as_ptr();
  | 

--[ Match #69 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkcs12.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         self.name(friendly_name)
  |             .pkey(pkey)
  |             .cert(cert)
  |             .build2(password)
  |     }
  | 
  |     /// Builds the PKCS#12 object.
  | 

--[ Match #70 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkcs12.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     )]
  |     pub fn build<T>(
  |         mut self,
  |         password: &str,
  |         friendly_name: &str,
  |         pkey: &PKeyRef<T>,
  |         cert: &X509Ref,
  | 

--[ Match #71 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey_ctx.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn rsa_sign_pss() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let rsa = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(rsa).unwrap();
  | 
  |         let mut ctx = PkeyCtx::new(&pkey).unwrap();
  | 

--[ Match #72 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey_ctx.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn rsa_sign() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let rsa = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(rsa).unwrap();
  | 
  |         let mut ctx = PkeyCtx::new(&pkey).unwrap();
  | 

--[ Match #73 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey_ctx.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[cfg(any(ossl102, libressl310, boringssl))]
  |     fn rsa_oaep() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let rsa = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(rsa).unwrap();
  | 
  |         let mut ctx = PkeyCtx::new(&pkey).unwrap();
  | 

--[ Match #74 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey_ctx.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn rsa() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let rsa = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(rsa).unwrap();
  | 
  |         let mut ctx = PkeyCtx::new(&pkey).unwrap();
  | 

--[ Match #75 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// Serializes the private_key to a DER-encoded `DSAPrivateKey` structure.
  |         #[corresponds(i2d_DSAPrivateKey)]
  |         private_key_to_der,
  |         ffi::i2d_DSAPrivateKey
  |     }
  | 
  |     /// Returns a reference to the private key component of `self`.
  | 

--[ Match #76 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     to_der! {
  |         /// Serializes the private_key to a DER-encoded `DSAPrivateKey` structure.
  |         #[corresponds(i2d_DSAPrivateKey)]
  |         private_key_to_der,
  |         ffi::i2d_DSAPrivateKey
  |     }
  | 
  | 

--[ Match #77 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     to_der! {
  |         /// Serializes the private_key to a DER-encoded `DSAPrivateKey` structure.
  |         #[corresponds(i2d_DSAPrivateKey)]
  |         private_key_to_der,
  |         ffi::i2d_DSAPrivateKey
  |     }
  | 

--[ Match #78 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     to_der! {
  |         /// Serializes the private_key to a DER-encoded `DSAPrivateKey` structure.
  |         #[corresponds(i2d_DSAPrivateKey)]
  |         private_key_to_der,
  |         ffi::i2d_DSAPrivateKey
  | 

--[ Match #79 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     to_der! {
  |         /// Serializes the private_key to a DER-encoded `DSAPrivateKey` structure.
  |         #[corresponds(i2d_DSAPrivateKey)]
  |         private_key_to_der,
  |         ffi::i2d_DSAPrivateKey
  | 

--[ Match #80 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// The output will have a header of `-----BEGIN DSA PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_DSAPrivateKey)]
  |         private_key_to_pem_passphrase,
  |         ffi::PEM_write_bio_DSAPrivateKey
  |     }
  | 
  |     to_der! {
  | 

--[ Match #81 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         ///
  |         /// The output will have a header of `-----BEGIN DSA PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_DSAPrivateKey)]
  |         private_key_to_pem_passphrase,
  |         ffi::PEM_write_bio_DSAPrivateKey
  |     }
  | 
  | 

--[ Match #82 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// Serializes the private key to a PEM-encoded encrypted DSAPrivateKey structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN DSA PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_DSAPrivateKey)]
  |         private_key_to_pem_passphrase,
  |         ffi::PEM_write_bio_DSAPrivateKey
  |     }
  | 

--[ Match #83 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// The output will have a header of `-----BEGIN DSA PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_DSAPrivateKey)]
  |         private_key_to_pem,
  |         /// Serializes the private key to a PEM-encoded encrypted DSAPrivateKey structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN DSA PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_DSAPrivateKey)]
  | 

--[ Match #84 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         ///
  |         /// The output will have a header of `-----BEGIN DSA PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_DSAPrivateKey)]
  |         private_key_to_pem,
  |         /// Serializes the private key to a PEM-encoded encrypted DSAPrivateKey structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN DSA PRIVATE KEY-----`.
  | 

--[ Match #85 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// Serializes the private key to a PEM-encoded DSAPrivateKey structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN DSA PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_DSAPrivateKey)]
  |         private_key_to_pem,
  |         /// Serializes the private key to a PEM-encoded encrypted DSAPrivateKey structure.
  |         ///
  | 

--[ Match #86 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     T: HasPrivate,
  | {
  |     private_key_to_pem! {
  |         /// Serializes the private key to a PEM-encoded DSAPrivateKey structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN DSA PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_DSAPrivateKey)]
  | 

--[ Match #87 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | where
  |     T: HasPrivate,
  | {
  |     private_key_to_pem! {
  |         /// Serializes the private key to a PEM-encoded DSAPrivateKey structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN DSA PRIVATE KEY-----`.
  | 

--[ Match #88 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[corresponds(SSL_use_PrivateKey)]
  |     pub fn set_private_key(&mut self, pkey: &PKeyRef<Private>) -> Result<(), ErrorStack> {
  |         unsafe {
  |             cvt(ffi::SSL_use_PrivateKey(self.as_ptr(), pkey.as_ptr()))?;
  |         };
  |         Ok(())
  |     }
  | 

--[ Match #89 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     /// Sets the private key.
  |     #[corresponds(SSL_use_PrivateKey)]
  |     pub fn set_private_key(&mut self, pkey: &PKeyRef<Private>) -> Result<(), ErrorStack> {
  |         unsafe {
  |             cvt(ffi::SSL_use_PrivateKey(self.as_ptr(), pkey.as_ptr()))?;
  |         };
  | 

--[ Match #90 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     /// Sets the private key.
  |     #[corresponds(SSL_use_PrivateKey)]
  |     pub fn set_private_key(&mut self, pkey: &PKeyRef<Private>) -> Result<(), ErrorStack> {
  |         unsafe {
  |             cvt(ffi::SSL_use_PrivateKey(self.as_ptr(), pkey.as_ptr()))?;
  | 

--[ Match #91 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let p = path.as_ref().as_os_str().to_str().unwrap();
  |         let key_file = CString::new(p).unwrap();
  |         unsafe {
  |             cvt(ffi::SSL_use_PrivateKey_file(
  |                 self.as_ptr(),
  |                 key_file.as_ptr(),
  |                 ssl_file_type.as_raw(),
  | 

--[ Match #92 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     /// Loads the private key from a file.
  |     #[corresponds(SSL_use_Private_Key_file)]
  |     pub fn set_private_key_file<P: AsRef<Path>>(
  |         &mut self,
  |         path: P,
  |         ssl_file_type: SslFiletype,
  | 

--[ Match #93 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     /// Loads the private key from a file.
  |     #[corresponds(SSL_use_Private_Key_file)]
  |     pub fn set_private_key_file<P: AsRef<Path>>(
  |         &mut self,
  |         path: P,
  | 

--[ Match #94 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[corresponds(SSL_get_privatekey)]
  |     pub fn private_key(&self) -> Option<&PKeyRef<Private>> {
  |         unsafe {
  |             let ptr = ffi::SSL_get_privatekey(self.as_ptr());
  |             PKeyRef::from_const_ptr_opt(ptr)
  |         }
  |     }
  | 

--[ Match #95 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     ///
  |     /// [`SslContext::private_key`]: struct.SslContext.html#method.private_key
  |     #[corresponds(SSL_get_privatekey)]
  |     pub fn private_key(&self) -> Option<&PKeyRef<Private>> {
  |         unsafe {
  |             let ptr = ffi::SSL_get_privatekey(self.as_ptr());
  |             PKeyRef::from_const_ptr_opt(ptr)
  | 

--[ Match #96 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// Like [`SslContext::private_key`].
  |     ///
  |     /// [`SslContext::private_key`]: struct.SslContext.html#method.private_key
  |     #[corresponds(SSL_get_privatekey)]
  |     pub fn private_key(&self) -> Option<&PKeyRef<Private>> {
  |         unsafe {
  |             let ptr = ffi::SSL_get_privatekey(self.as_ptr());
  | 

--[ Match #97 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     /// Like [`SslContext::private_key`].
  |     ///
  |     /// [`SslContext::private_key`]: struct.SslContext.html#method.private_key
  |     #[corresponds(SSL_get_privatekey)]
  |     pub fn private_key(&self) -> Option<&PKeyRef<Private>> {
  |         unsafe {
  | 

--[ Match #98 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     /// Like [`SslContext::private_key`].
  |     ///
  |     /// [`SslContext::private_key`]: struct.SslContext.html#method.private_key
  |     #[corresponds(SSL_get_privatekey)]
  |     pub fn private_key(&self) -> Option<&PKeyRef<Private>> {
  |         unsafe {
  | 

--[ Match #99 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         }
  |     }
  | 
  |     /// Like [`SslContext::private_key`].
  |     ///
  |     /// [`SslContext::private_key`]: struct.SslContext.html#method.private_key
  |     #[corresponds(SSL_get_privatekey)]
  | 

--[ Match #100 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[cfg(any(ossl102, libressl340))]
  |     pub fn private_key(&self) -> Option<&PKeyRef<Private>> {
  |         unsafe {
  |             let ptr = ffi::SSL_CTX_get0_privatekey(self.as_ptr());
  |             PKeyRef::from_const_ptr_opt(ptr)
  |         }
  |     }
  | 

--[ Match #101 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// Requires OpenSSL 1.0.2 or LibreSSL 3.4.0 or newer.
  |     #[corresponds(SSL_CTX_get0_privatekey)]
  |     #[cfg(any(ossl102, libressl340))]
  |     pub fn private_key(&self) -> Option<&PKeyRef<Private>> {
  |         unsafe {
  |             let ptr = ffi::SSL_CTX_get0_privatekey(self.as_ptr());
  |             PKeyRef::from_const_ptr_opt(ptr)
  | 

--[ Match #102 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// Returns the private key associated with this `SslContext`, if present.
  |     ///
  |     /// Requires OpenSSL 1.0.2 or LibreSSL 3.4.0 or newer.
  |     #[corresponds(SSL_CTX_get0_privatekey)]
  |     #[cfg(any(ossl102, libressl340))]
  |     pub fn private_key(&self) -> Option<&PKeyRef<Private>> {
  |         unsafe {
  | 

--[ Match #103 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// Checks for consistency between the private key and certificate.
  |     #[corresponds(SSL_CTX_check_private_key)]
  |     pub fn check_private_key(&self) -> Result<(), ErrorStack> {
  |         unsafe { cvt(ffi::SSL_CTX_check_private_key(self.as_ptr())).map(|_| ()) }
  |     }
  | 
  |     /// Returns a shared reference to the context's certificate store.
  | 

--[ Match #104 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     /// Checks for consistency between the private key and certificate.
  |     #[corresponds(SSL_CTX_check_private_key)]
  |     pub fn check_private_key(&self) -> Result<(), ErrorStack> {
  |         unsafe { cvt(ffi::SSL_CTX_check_private_key(self.as_ptr())).map(|_| ()) }
  |     }
  | 
  | 

--[ Match #105 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     /// Checks for consistency between the private key and certificate.
  |     #[corresponds(SSL_CTX_check_private_key)]
  |     pub fn check_private_key(&self) -> Result<(), ErrorStack> {
  |         unsafe { cvt(ffi::SSL_CTX_check_private_key(self.as_ptr())).map(|_| ()) }
  |     }
  | 

--[ Match #106 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     where
  |         T: HasPrivate,
  |     {
  |         unsafe { cvt(ffi::SSL_CTX_use_PrivateKey(self.as_ptr(), key.as_ptr())).map(|_| ()) }
  |     }
  | 
  |     /// Sets the list of supported ciphers for protocols before TLSv1.3.
  | 

--[ Match #107 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     /// Sets the private key.
  |     #[corresponds(SSL_CTX_use_PrivateKey)]
  |     pub fn set_private_key<T>(&mut self, key: &PKeyRef<T>) -> Result<(), ErrorStack>
  |     where
  |         T: HasPrivate,
  |     {
  | 

--[ Match #108 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     /// Sets the private key.
  |     #[corresponds(SSL_CTX_use_PrivateKey)]
  |     pub fn set_private_key<T>(&mut self, key: &PKeyRef<T>) -> Result<(), ErrorStack>
  |     where
  |         T: HasPrivate,
  | 

--[ Match #109 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     ) -> Result<(), ErrorStack> {
  |         let file = CString::new(file.as_ref().as_os_str().to_str().unwrap()).unwrap();
  |         unsafe {
  |             cvt(ffi::SSL_CTX_use_PrivateKey_file(
  |                 self.as_ptr(),
  |                 file.as_ptr() as *const _,
  |                 file_type.as_raw(),
  | 

--[ Match #110 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     /// Loads the private key from a file.
  |     #[corresponds(SSL_CTX_use_PrivateKey_file)]
  |     pub fn set_private_key_file<P: AsRef<Path>>(
  |         &mut self,
  |         file: P,
  |         file_type: SslFiletype,
  | 

--[ Match #111 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     /// Loads the private key from a file.
  |     #[corresponds(SSL_CTX_use_PrivateKey_file)]
  |     pub fn set_private_key_file<P: AsRef<Path>>(
  |         &mut self,
  |         file: P,
  | 

--[ Match #112 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | //! let mut acceptor = SslAcceptor::mozilla_intermediate(SslMethod::tls()).unwrap();
  | //! acceptor.set_private_key_file("key.pem", SslFiletype::PEM).unwrap();
  | //! acceptor.set_certificate_chain_file("certs.pem").unwrap();
  | //! acceptor.check_private_key().unwrap();
  | //! let acceptor = Arc::new(acceptor.build());
  | //!
  | //! let listener = TcpListener::bind("0.0.0.0:8443").unwrap();
  | 

--[ Match #113 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | //!
  | //!
  | //! let mut acceptor = SslAcceptor::mozilla_intermediate(SslMethod::tls()).unwrap();
  | //! acceptor.set_private_key_file("key.pem", SslFiletype::PEM).unwrap();
  | //! acceptor.set_certificate_chain_file("certs.pem").unwrap();
  | //! acceptor.check_private_key().unwrap();
  | //! let acceptor = Arc::new(acceptor.build());
  | 

--[ Match #114 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\util.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | }
  | 
  | /// Password callback function, passed to private key loading functions.
  | ///
  | /// `cb_state` is expected to be a pointer to a `CallbackState`.
  | pub unsafe extern "C" fn invoke_passwd_cb<F>(
  | 

--[ Match #115 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkcs5.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         );
  | 
  |         super::pbkdf2_hmac(
  |             b"passwordPASSWORDpassword",
  |             b"salt\0\0\0",
  |             50,
  |             MessageDigest::sha512(),
  | 

--[ Match #116 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkcs5.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         );
  | 
  |         super::pbkdf2_hmac(
  |             b"passwordPASSWORDpassword",
  |             b"salt\0\0\0",
  |             50,
  |             MessageDigest::sha512(),
  | 

--[ Match #117 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkcs5.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         );
  | 
  |         super::pbkdf2_hmac(
  |             b"passwordPASSWORDpassword",
  |             b"salt\0\0\0",
  |             50,
  |             MessageDigest::sha512(),
  | 

--[ Match #118 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkcs5.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn pbkdf2_hmac_sha512() {
  |         let mut buf = [0; 64];
  | 
  |         super::pbkdf2_hmac(b"password", b"NaCL", 1, MessageDigest::sha512(), &mut buf).unwrap();
  |         assert_eq!(
  |             &buf[..],
  |             &[
  | 

--[ Match #119 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkcs5.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         );
  | 
  |         super::pbkdf2_hmac(
  |             b"Password",
  |             b"NaCl",
  |             80000,
  |             MessageDigest::sha256(),
  | 

--[ Match #120 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkcs5.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | }
  | 
  | /// Derives a key from a password and salt using the scrypt algorithm.
  | ///
  | /// Requires OpenSSL 1.1.0 or newer.
  | #[corresponds(EVP_PBE_scrypt)]
  | 

--[ Match #121 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkcs5.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | }
  | 
  | /// Derives a key from a password and salt using the PBKDF2-HMAC algorithm with a digest function.
  | #[corresponds(PKCS5_PBKDF2_HMAC)]
  | pub fn pbkdf2_hmac(
  |     pass: &[u8],
  | 

--[ Match #122 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let group = crate::ec::EcGroup::from_curve_name(Nid::SECP256K1).unwrap();
  |         let ec_key = EcKey::generate(&group).unwrap();
  |         let pkey = PKey::from_ec_key(ec_key).unwrap();
  |         assert!(pkey.raw_private_key().is_err());
  |         assert!(pkey.raw_public_key().is_err());
  |     }
  | 
  | 

--[ Match #123 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let hmac_key = PKey::hmac(&test_bytes).unwrap();
  |         assert!(hmac_key.raw_public_key().is_err());
  | 
  |         let key_bytes = hmac_key.raw_private_key().unwrap();
  |         assert_eq!(key_bytes, test_bytes);
  |     }
  | 
  | 

--[ Match #124 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         #[cfg(all(not(boringssl), not(libressl370)))]
  |         test_raw_private_key(PKey::generate_x448, Id::X448);
  |         #[cfg(all(not(boringssl), not(libressl370)))]
  |         test_raw_private_key(PKey::generate_ed448, Id::ED448);
  |     }
  | 
  |     #[cfg(ossl111)]
  | 

--[ Match #125 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         test_raw_private_key(PKey::generate_x25519, Id::X25519);
  |         test_raw_private_key(PKey::generate_ed25519, Id::ED25519);
  |         #[cfg(all(not(boringssl), not(libressl370)))]
  |         test_raw_private_key(PKey::generate_x448, Id::X448);
  |         #[cfg(all(not(boringssl), not(libressl370)))]
  |         test_raw_private_key(PKey::generate_ed448, Id::ED448);
  |     }
  | 

--[ Match #126 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn test_raw_private_key_bytes() {
  |         test_raw_private_key(PKey::generate_x25519, Id::X25519);
  |         test_raw_private_key(PKey::generate_ed25519, Id::ED25519);
  |         #[cfg(all(not(boringssl), not(libressl370)))]
  |         test_raw_private_key(PKey::generate_x448, Id::X448);
  |         #[cfg(all(not(boringssl), not(libressl370)))]
  | 

--[ Match #127 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[cfg(any(ossl111, boringssl, libressl370))]
  |     #[test]
  |     fn test_raw_private_key_bytes() {
  |         test_raw_private_key(PKey::generate_x25519, Id::X25519);
  |         test_raw_private_key(PKey::generate_ed25519, Id::ED25519);
  |         #[cfg(all(not(boringssl), not(libressl370)))]
  |         test_raw_private_key(PKey::generate_x448, Id::X448);
  | 

--[ Match #128 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     #[cfg(any(ossl111, boringssl, libressl370))]
  |     #[test]
  |     fn test_raw_private_key_bytes() {
  |         test_raw_private_key(PKey::generate_x25519, Id::X25519);
  |         test_raw_private_key(PKey::generate_ed25519, Id::ED25519);
  |         #[cfg(all(not(boringssl), not(libressl370)))]
  | 

--[ Match #129 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         // Compare the der encoding of the original and raw / restored public key
  |         assert_eq!(
  |             key.private_key_to_pkcs8().unwrap(),
  |             from_raw.private_key_to_pkcs8().unwrap()
  |         );
  |     }
  | 
  | 

--[ Match #130 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |         // Compare the der encoding of the original and raw / restored public key
  |         assert_eq!(
  |             key.private_key_to_pkcs8().unwrap(),
  |             from_raw.private_key_to_pkcs8().unwrap()
  |         );
  |     }
  | 

--[ Match #131 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |         // Get the raw bytes, and create a new key from the raw bytes
  |         let raw = key.raw_private_key().unwrap();
  |         let from_raw = PKey::private_key_from_raw_bytes(&raw, key_type).unwrap();
  | 
  |         // Compare the der encoding of the original and raw / restored public key
  |         assert_eq!(
  | 

--[ Match #132 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let key = gen().unwrap();
  | 
  |         // Get the raw bytes, and create a new key from the raw bytes
  |         let raw = key.raw_private_key().unwrap();
  |         let from_raw = PKey::private_key_from_raw_bytes(&raw, key_type).unwrap();
  | 
  |         // Compare the der encoding of the original and raw / restored public key
  | 

--[ Match #133 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     #[cfg(any(ossl111, boringssl, libressl370))]
  |     fn test_raw_private_key(gen: fn() -> Result<PKey<Private>, ErrorStack>, key_type: Id) {
  |         // Generate a new key
  |         let key = gen().unwrap();
  | 
  | 

--[ Match #134 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let pkey: PKey<Private> = ec_key.clone().try_into().unwrap();
  |         let ec_key_: EcKey<Private> = pkey.try_into().unwrap();
  |         // Eq is missing
  |         assert_eq!(ec_key.private_key(), ec_key_.private_key());
  |     }
  | 
  |     #[test]
  | 

--[ Match #135 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let pkey: PKey<Private> = ec_key.clone().try_into().unwrap();
  |         let ec_key_: EcKey<Private> = pkey.try_into().unwrap();
  |         // Eq is missing
  |         assert_eq!(ec_key.private_key(), ec_key_.private_key());
  |     }
  | 
  |     #[test]
  | 

--[ Match #136 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let key = include_bytes!("../test/key.pem");
  |         let key = PKey::private_key_from_pem(key).unwrap();
  | 
  |         let priv_key = key.private_key_to_pem_pkcs8().unwrap();
  |         let pub_key = key.public_key_to_pem().unwrap();
  | 
  |         // As a super-simple verification, just check that the buffers contain
  | 

--[ Match #137 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn test_pem() {
  |         let key = include_bytes!("../test/key.pem");
  |         let key = PKey::private_key_from_pem(key).unwrap();
  | 
  |         let priv_key = key.private_key_to_pem_pkcs8().unwrap();
  |         let pub_key = key.public_key_to_pem().unwrap();
  | 

--[ Match #138 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn test_private_key_from_der() {
  |         let key = include_bytes!("../test/key.der");
  |         PKey::private_key_from_der(key).unwrap();
  |     }
  | 
  |     #[test]
  | 

--[ Match #139 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     #[test]
  |     fn test_private_key_from_der() {
  |         let key = include_bytes!("../test/key.der");
  |         PKey::private_key_from_der(key).unwrap();
  |     }
  | 

--[ Match #140 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn test_private_key_from_pem() {
  |         let key = include_bytes!("../test/key.pem");
  |         PKey::private_key_from_pem(key).unwrap();
  |     }
  | 
  |     #[test]
  | 

--[ Match #141 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     #[test]
  |     fn test_private_key_from_pem() {
  |         let key = include_bytes!("../test/key.pem");
  |         PKey::private_key_from_pem(key).unwrap();
  |     }
  | 

--[ Match #142 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |             Ok(6)
  |         })
  |         .unwrap();
  |         assert!(password_queried);
  |     }
  | 
  |     #[test]
  | 

--[ Match #143 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let key = include_bytes!("../test/pkcs8.der");
  |         PKey::private_key_from_pkcs8_callback(key, |password| {
  |             password_queried = true;
  |             password[..6].copy_from_slice(b"mypass");
  |             Ok(6)
  |         })
  |         .unwrap();
  | 

--[ Match #144 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let mut password_queried = false;
  |         let key = include_bytes!("../test/pkcs8.der");
  |         PKey::private_key_from_pkcs8_callback(key, |password| {
  |             password_queried = true;
  |             password[..6].copy_from_slice(b"mypass");
  |             Ok(6)
  |         })
  | 

--[ Match #145 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn test_encrypted_pkcs8_callback() {
  |         let mut password_queried = false;
  |         let key = include_bytes!("../test/pkcs8.der");
  |         PKey::private_key_from_pkcs8_callback(key, |password| {
  |             password_queried = true;
  |             password[..6].copy_from_slice(b"mypass");
  |             Ok(6)
  | 

--[ Match #146 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn test_encrypted_pkcs8_callback() {
  |         let mut password_queried = false;
  |         let key = include_bytes!("../test/pkcs8.der");
  |         PKey::private_key_from_pkcs8_callback(key, |password| {
  |             password_queried = true;
  |             password[..6].copy_from_slice(b"mypass");
  |             Ok(6)
  | 

--[ Match #147 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     #[test]
  |     fn test_encrypted_pkcs8_callback() {
  |         let mut password_queried = false;
  |         let key = include_bytes!("../test/pkcs8.der");
  |         PKey::private_key_from_pkcs8_callback(key, |password| {
  |             password_queried = true;
  | 

--[ Match #148 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let pkey2 = PKey::private_key_from_pkcs8_passphrase(&der, b"mypass").unwrap();
  |         assert_eq!(
  |             pkey.private_key_to_der().unwrap(),
  |             pkey2.private_key_to_der().unwrap()
  |         );
  |     }
  | 
  | 

--[ Match #149 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |             .unwrap();
  |         let pkey2 = PKey::private_key_from_pkcs8_passphrase(&der, b"mypass").unwrap();
  |         assert_eq!(
  |             pkey.private_key_to_der().unwrap(),
  |             pkey2.private_key_to_der().unwrap()
  |         );
  |     }
  | 

--[ Match #150 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let der = pkey
  |             .private_key_to_pkcs8_passphrase(Cipher::aes_128_cbc(), b"mypass")
  |             .unwrap();
  |         let pkey2 = PKey::private_key_from_pkcs8_passphrase(&der, b"mypass").unwrap();
  |         assert_eq!(
  |             pkey.private_key_to_der().unwrap(),
  |             pkey2.private_key_to_der().unwrap()
  | 

--[ Match #151 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let rsa = Rsa::generate(2048).unwrap();
  |         let pkey = PKey::from_rsa(rsa).unwrap();
  |         let der = pkey
  |             .private_key_to_pkcs8_passphrase(Cipher::aes_128_cbc(), b"mypass")
  |             .unwrap();
  |         let pkey2 = PKey::private_key_from_pkcs8_passphrase(&der, b"mypass").unwrap();
  |         assert_eq!(
  | 

--[ Match #152 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn test_encrypted_pkcs8_passphrase() {
  |         let key = include_bytes!("../test/pkcs8.der");
  |         PKey::private_key_from_pkcs8_passphrase(key, b"mypass").unwrap();
  | 
  |         let rsa = Rsa::generate(2048).unwrap();
  |         let pkey = PKey::from_rsa(rsa).unwrap();
  | 

--[ Match #153 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |         assert_eq!(
  |             pkey2.private_key_to_der().unwrap(),
  |             pkey.private_key_to_der().unwrap()
  |         );
  |     }
  | 
  | 

--[ Match #154 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let pkey2 = PKey::private_key_from_pkcs8(&serialized).unwrap();
  | 
  |         assert_eq!(
  |             pkey2.private_key_to_der().unwrap(),
  |             pkey.private_key_to_der().unwrap()
  |         );
  |     }
  | 

--[ Match #155 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let key = include_bytes!("../test/pkcs8-nocrypt.der");
  |         let pkey = PKey::private_key_from_pkcs8(key).unwrap();
  |         let serialized = pkey.private_key_to_pkcs8().unwrap();
  |         let pkey2 = PKey::private_key_from_pkcs8(&serialized).unwrap();
  | 
  |         assert_eq!(
  |             pkey2.private_key_to_der().unwrap(),
  | 

--[ Match #156 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn test_unencrypted_pkcs8() {
  |         let key = include_bytes!("../test/pkcs8-nocrypt.der");
  |         let pkey = PKey::private_key_from_pkcs8(key).unwrap();
  |         let serialized = pkey.private_key_to_pkcs8().unwrap();
  |         let pkey2 = PKey::private_key_from_pkcs8(&serialized).unwrap();
  | 
  |         assert_eq!(
  | 

--[ Match #157 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn test_unencrypted_pkcs8() {
  |         let key = include_bytes!("../test/pkcs8-nocrypt.der");
  |         let pkey = PKey::private_key_from_pkcs8(key).unwrap();
  |         let serialized = pkey.private_key_to_pkcs8().unwrap();
  |         let pkey2 = PKey::private_key_from_pkcs8(&serialized).unwrap();
  | 
  | 

--[ Match #158 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |             .private_key_to_pem_pkcs8_passphrase(Cipher::aes_128_cbc(), b"foobar")
  |             .unwrap();
  |         PKey::private_key_from_pem_passphrase(&pem, b"foobar").unwrap();
  |         assert!(PKey::private_key_from_pem_passphrase(&pem, b"fizzbuzz").is_err());
  |     }
  | 
  |     #[test]
  | 

--[ Match #159 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let pem = pkey
  |             .private_key_to_pem_pkcs8_passphrase(Cipher::aes_128_cbc(), b"foobar")
  |             .unwrap();
  |         PKey::private_key_from_pem_passphrase(&pem, b"foobar").unwrap();
  |         assert!(PKey::private_key_from_pem_passphrase(&pem, b"fizzbuzz").is_err());
  |     }
  | 
  | 

--[ Match #160 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let rsa = Rsa::generate(2048).unwrap();
  |         let pkey = PKey::from_rsa(rsa).unwrap();
  |         let pem = pkey
  |             .private_key_to_pem_pkcs8_passphrase(Cipher::aes_128_cbc(), b"foobar")
  |             .unwrap();
  |         PKey::private_key_from_pem_passphrase(&pem, b"foobar").unwrap();
  |         assert!(PKey::private_key_from_pem_passphrase(&pem, b"fizzbuzz").is_err());
  | 

--[ Match #161 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     use crate::rand::rand_bytes;
  | 
  |     #[test]
  |     fn test_to_password() {
  |         let rsa = Rsa::generate(2048).unwrap();
  |         let pkey = PKey::from_rsa(rsa).unwrap();
  |         let pem = pkey
  | 

--[ Match #162 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     ) -> Result<PKey<Private>, ErrorStack> {
  |         unsafe {
  |             ffi::init();
  |             cvt_p(ffi::EVP_PKEY_new_raw_private_key(
  |                 key_type.as_raw(),
  |                 ptr::null_mut(),
  |                 bytes.as_ptr(),
  | 

--[ Match #163 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// Algorithm types that support raw private keys are HMAC, X25519, ED25519, X448 or ED448
  |     #[corresponds(EVP_PKEY_new_raw_private_key)]
  |     #[cfg(any(ossl111, boringssl, libressl370))]
  |     pub fn private_key_from_raw_bytes(
  |         bytes: &[u8],
  |         key_type: Id,
  |     ) -> Result<PKey<Private>, ErrorStack> {
  | 

--[ Match #164 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// Creates a private key from its raw byte representation
  |     ///
  |     /// Algorithm types that support raw private keys are HMAC, X25519, ED25519, X448 or ED448
  |     #[corresponds(EVP_PKEY_new_raw_private_key)]
  |     #[cfg(any(ossl111, boringssl, libressl370))]
  |     pub fn private_key_from_raw_bytes(
  |         bytes: &[u8],
  | 

--[ Match #165 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |             ffi::init();
  |             let bio = MemBioSlice::new(der)?;
  |             let passphrase = CString::new(passphrase).unwrap();
  |             cvt_p(ffi::d2i_PKCS8PrivateKey_bio(
  |                 bio.as_ptr(),
  |                 ptr::null_mut(),
  |                 None,
  | 

--[ Match #166 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     ///
  |     /// Panics if `passphrase` contains an embedded null.
  |     #[corresponds(d2i_PKCS8PrivateKey_bio)]
  |     pub fn private_key_from_pkcs8_passphrase(
  |         der: &[u8],
  |         passphrase: &[u8],
  |     ) -> Result<PKey<Private>, ErrorStack> {
  | 

--[ Match #167 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// # Panics
  |     ///
  |     /// Panics if `passphrase` contains an embedded null.
  |     #[corresponds(d2i_PKCS8PrivateKey_bio)]
  |     pub fn private_key_from_pkcs8_passphrase(
  |         der: &[u8],
  |         passphrase: &[u8],
  | 

--[ Match #168 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         }
  |     }
  | 
  |     /// Deserializes a DER-formatted PKCS#8 private key, using the supplied password if the key is
  |     /// encrypted.
  |     ///
  |     /// # Panics
  | 

--[ Match #169 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |             ffi::init();
  |             let mut cb = CallbackState::new(callback);
  |             let bio = MemBioSlice::new(der)?;
  |             cvt_p(ffi::d2i_PKCS8PrivateKey_bio(
  |                 bio.as_ptr(),
  |                 ptr::null_mut(),
  |                 Some(invoke_passwd_cb::<F>),
  | 

--[ Match #170 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// The callback should copy the password into the provided buffer and return the number of
  |     /// bytes written.
  |     #[corresponds(d2i_PKCS8PrivateKey_bio)]
  |     pub fn private_key_from_pkcs8_callback<F>(
  |         der: &[u8],
  |         callback: F,
  |     ) -> Result<PKey<Private>, ErrorStack>
  | 

--[ Match #171 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     ///
  |     /// The callback should copy the password into the provided buffer and return the number of
  |     /// bytes written.
  |     #[corresponds(d2i_PKCS8PrivateKey_bio)]
  |     pub fn private_key_from_pkcs8_callback<F>(
  |         der: &[u8],
  |         callback: F,
  | 

--[ Match #172 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// Deserializes a DER-formatted PKCS#8 private key, using a callback to retrieve the password
  |     /// if the key is encrypted.
  |     ///
  |     /// The callback should copy the password into the provided buffer and return the number of
  |     /// bytes written.
  |     #[corresponds(d2i_PKCS8PrivateKey_bio)]
  |     pub fn private_key_from_pkcs8_callback<F>(
  | 

--[ Match #173 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         }
  |     }
  | 
  |     /// Deserializes a DER-formatted PKCS#8 private key, using a callback to retrieve the password
  |     /// if the key is encrypted.
  |     ///
  |     /// The callback should copy the password into the provided buffer and return the number of
  | 

--[ Match #174 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// Deserializes a DER-formatted PKCS#8 unencrypted private key.
  |     ///
  |     /// This method is mainly for interoperability reasons. Encrypted keyfiles should be preferred.
  |     pub fn private_key_from_pkcs8(der: &[u8]) -> Result<PKey<Private>, ErrorStack> {
  |         unsafe {
  |             ffi::init();
  |             let len = der.len().min(c_long::max_value() as usize) as c_long;
  | 

--[ Match #175 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         #[corresponds(d2i_AutoPrivateKey)]
  |         private_key_from_der,
  |         PKey<Private>,
  |         ffi::d2i_AutoPrivateKey
  |     }
  | 
  |     /// Deserializes a DER-formatted PKCS#8 unencrypted private key.
  | 

--[ Match #176 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// supports the unencrypted PKCS#8 PrivateKeyInfo structures as well as key type specific
  |         /// formats.
  |         #[corresponds(d2i_AutoPrivateKey)]
  |         private_key_from_der,
  |         PKey<Private>,
  |         ffi::d2i_AutoPrivateKey
  |     }
  | 

--[ Match #177 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// This function will attempt to automatically detect the underlying key format, and
  |         /// supports the unencrypted PKCS#8 PrivateKeyInfo structures as well as key type specific
  |         /// formats.
  |         #[corresponds(d2i_AutoPrivateKey)]
  |         private_key_from_der,
  |         PKey<Private>,
  |         ffi::d2i_AutoPrivateKey
  | 

--[ Match #178 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// Decodes a DER-encoded private key.
  |         ///
  |         /// This function will attempt to automatically detect the underlying key format, and
  |         /// supports the unencrypted PKCS#8 PrivateKeyInfo structures as well as key type specific
  |         /// formats.
  |         #[corresponds(d2i_AutoPrivateKey)]
  |         private_key_from_der,
  | 

--[ Match #179 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         #[corresponds(PEM_read_bio_PrivateKey)]
  |         private_key_from_pem_callback,
  |         PKey<Private>,
  |         ffi::PEM_read_bio_PrivateKey
  |     }
  | 
  |     from_der! {
  | 

--[ Match #180 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         ///
  |         /// The callback should fill the password into the provided buffer and return its length.
  |         #[corresponds(PEM_read_bio_PrivateKey)]
  |         private_key_from_pem_callback,
  |         PKey<Private>,
  |         ffi::PEM_read_bio_PrivateKey
  |     }
  | 

--[ Match #181 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// Deserializes a private key from a PEM-encoded encrypted key type specific format.
  |         ///
  |         /// The callback should fill the password into the provided buffer and return its length.
  |         #[corresponds(PEM_read_bio_PrivateKey)]
  |         private_key_from_pem_callback,
  |         PKey<Private>,
  |         ffi::PEM_read_bio_PrivateKey
  | 

--[ Match #182 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted key type specific format.
  |         ///
  |         /// The callback should fill the password into the provided buffer and return its length.
  |         #[corresponds(PEM_read_bio_PrivateKey)]
  |         private_key_from_pem_callback,
  |         PKey<Private>,
  | 

--[ Match #183 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted key type specific format.
  |         #[corresponds(PEM_read_bio_PrivateKey)]
  |         private_key_from_pem_passphrase,
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted key type specific format.
  |         ///
  | 

--[ Match #184 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         private_key_from_pem,
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted key type specific format.
  |         #[corresponds(PEM_read_bio_PrivateKey)]
  |         private_key_from_pem_passphrase,
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted key type specific format.
  | 

--[ Match #185 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     private_key_from_pem! {
  |         /// Deserializes a private key from a PEM-encoded key type specific format.
  |         #[corresponds(PEM_read_bio_PrivateKey)]
  |         private_key_from_pem,
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted key type specific format.
  |         #[corresponds(PEM_read_bio_PrivateKey)]
  | 

--[ Match #186 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     private_key_from_pem! {
  |         /// Deserializes a private key from a PEM-encoded key type specific format.
  |         #[corresponds(PEM_read_bio_PrivateKey)]
  |         private_key_from_pem,
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted key type specific format.
  | 

--[ Match #187 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         }
  |     }
  | 
  |     private_key_from_pem! {
  |         /// Deserializes a private key from a PEM-encoded key type specific format.
  |         #[corresponds(PEM_read_bio_PrivateKey)]
  |         private_key_from_pem,
  | 

--[ Match #188 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     /// Generates a new private Ed448 key.
  |     ///
  |     /// To import a private key from raw bytes see [`PKey::private_key_from_raw_bytes`].
  |     ///
  |     /// # Examples
  |     ///
  | 

--[ Match #189 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     /// Generates a new private Ed25519 key.
  |     ///
  |     /// To import a private key from raw bytes see [`PKey::private_key_from_raw_bytes`].
  |     ///
  |     /// # Examples
  |     ///
  | 

--[ Match #190 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     /// Generates a new private X448 key.
  |     ///
  |     /// To import a private key from raw bytes see [`PKey::private_key_from_raw_bytes`].
  |     ///
  |     /// # Examples
  |     ///
  | 

--[ Match #191 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     /// Generates a new private X25519 key.
  |     ///
  |     /// To import a private key from raw bytes see [`PKey::private_key_from_raw_bytes`].
  |     ///
  |     /// # Examples
  |     ///
  | 

--[ Match #192 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     ) -> Result<Vec<u8>, ErrorStack> {
  |         unsafe {
  |             let bio = MemBio::new()?;
  |             cvt(ffi::i2d_PKCS8PrivateKey_bio(
  |                 bio.as_ptr(),
  |                 self.as_ptr(),
  |                 cipher.as_ptr(),
  | 

--[ Match #193 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// Serializes a private key into a DER-formatted PKCS#8, using the supplied password to
  |     /// encrypt the key.
  |     #[corresponds(i2d_PKCS8PrivateKey_bio)]
  |     pub fn private_key_to_pkcs8_passphrase(
  |         &self,
  |         cipher: Cipher,
  |         passphrase: &[u8],
  | 

--[ Match #194 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     /// Serializes a private key into a DER-formatted PKCS#8, using the supplied password to
  |     /// encrypt the key.
  |     #[corresponds(i2d_PKCS8PrivateKey_bio)]
  |     pub fn private_key_to_pkcs8_passphrase(
  |         &self,
  |         cipher: Cipher,
  | 

--[ Match #195 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         }
  |     }
  | 
  |     /// Serializes a private key into a DER-formatted PKCS#8, using the supplied password to
  |     /// encrypt the key.
  |     #[corresponds(i2d_PKCS8PrivateKey_bio)]
  |     pub fn private_key_to_pkcs8_passphrase(
  | 

--[ Match #196 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     pub fn private_key_to_pkcs8(&self) -> Result<Vec<u8>, ErrorStack> {
  |         unsafe {
  |             let bio = MemBio::new()?;
  |             cvt(ffi::i2d_PKCS8PrivateKey_bio(
  |                 bio.as_ptr(),
  |                 self.as_ptr(),
  |                 ptr::null(),
  | 

--[ Match #197 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     /// Serializes a private key into an unencrypted DER-formatted PKCS#8
  |     #[corresponds(i2d_PKCS8PrivateKey_bio)]
  |     pub fn private_key_to_pkcs8(&self) -> Result<Vec<u8>, ErrorStack> {
  |         unsafe {
  |             let bio = MemBio::new()?;
  |             cvt(ffi::i2d_PKCS8PrivateKey_bio(
  | 

--[ Match #198 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     /// Serializes a private key into an unencrypted DER-formatted PKCS#8
  |     #[corresponds(i2d_PKCS8PrivateKey_bio)]
  |     pub fn private_key_to_pkcs8(&self) -> Result<Vec<u8>, ErrorStack> {
  |         unsafe {
  |             let bio = MemBio::new()?;
  | 

--[ Match #199 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |                 &mut len,
  |             ))?;
  |             let mut buf = vec![0u8; len];
  |             cvt(ffi::EVP_PKEY_get_raw_private_key(
  |                 self.as_ptr(),
  |                 buf.as_mut_ptr(),
  |                 &mut len,
  | 

--[ Match #200 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     pub fn raw_private_key(&self) -> Result<Vec<u8>, ErrorStack> {
  |         unsafe {
  |             let mut len = 0;
  |             cvt(ffi::EVP_PKEY_get_raw_private_key(
  |                 self.as_ptr(),
  |                 ptr::null_mut(),
  |                 &mut len,
  | 

--[ Match #201 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// Currently this is: [`Id::HMAC`], [`Id::X25519`], [`Id::ED25519`], [`Id::X448`] or [`Id::ED44
  |     #[corresponds(EVP_PKEY_get_raw_private_key)]
  |     #[cfg(any(ossl111, boringssl, libressl370))]
  |     pub fn raw_private_key(&self) -> Result<Vec<u8>, ErrorStack> {
  |         unsafe {
  |             let mut len = 0;
  |             cvt(ffi::EVP_PKEY_get_raw_private_key(
  | 

--[ Match #202 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     ///
  |     /// This function only works for algorithms that support raw private keys.
  |     /// Currently this is: [`Id::HMAC`], [`Id::X25519`], [`Id::ED25519`], [`Id::X448`] or [`Id::ED44
  |     #[corresponds(EVP_PKEY_get_raw_private_key)]
  |     #[cfg(any(ossl111, boringssl, libressl370))]
  |     pub fn raw_private_key(&self) -> Result<Vec<u8>, ErrorStack> {
  |         unsafe {
  | 

--[ Match #203 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// Serializes the private key to a DER-encoded key type specific format.
  |         #[corresponds(i2d_PrivateKey)]
  |         private_key_to_der,
  |         ffi::i2d_PrivateKey
  |     }
  | 
  |     /// Raw byte representation of a private key.
  | 

--[ Match #204 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     to_der! {
  |         /// Serializes the private key to a DER-encoded key type specific format.
  |         #[corresponds(i2d_PrivateKey)]
  |         private_key_to_der,
  |         ffi::i2d_PrivateKey
  |     }
  | 
  | 

--[ Match #205 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     to_der! {
  |         /// Serializes the private key to a DER-encoded key type specific format.
  |         #[corresponds(i2d_PrivateKey)]
  |         private_key_to_der,
  |         ffi::i2d_PrivateKey
  |     }
  | 

--[ Match #206 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// The output will have a header of `-----BEGIN ENCRYPTED PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_PKCS8PrivateKey)]
  |         private_key_to_pem_pkcs8_passphrase,
  |         ffi::PEM_write_bio_PKCS8PrivateKey
  |     }
  | 
  |     to_der! {
  | 

--[ Match #207 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         ///
  |         /// The output will have a header of `-----BEGIN ENCRYPTED PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_PKCS8PrivateKey)]
  |         private_key_to_pem_pkcs8_passphrase,
  |         ffi::PEM_write_bio_PKCS8PrivateKey
  |     }
  | 
  | 

--[ Match #208 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// Serializes the private key to a PEM-encoded PKCS#8 EncryptedPrivateKeyInfo structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN ENCRYPTED PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_PKCS8PrivateKey)]
  |         private_key_to_pem_pkcs8_passphrase,
  |         ffi::PEM_write_bio_PKCS8PrivateKey
  |     }
  | 

--[ Match #209 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// The output will have a header of `-----BEGIN PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_PKCS8PrivateKey)]
  |         private_key_to_pem_pkcs8,
  |         /// Serializes the private key to a PEM-encoded PKCS#8 EncryptedPrivateKeyInfo structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN ENCRYPTED PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_PKCS8PrivateKey)]
  | 

--[ Match #210 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         ///
  |         /// The output will have a header of `-----BEGIN PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_PKCS8PrivateKey)]
  |         private_key_to_pem_pkcs8,
  |         /// Serializes the private key to a PEM-encoded PKCS#8 EncryptedPrivateKeyInfo structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN ENCRYPTED PRIVATE KEY-----`.
  | 

--[ Match #211 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// Serializes the private key to a PEM-encoded PKCS#8 PrivateKeyInfo structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_PKCS8PrivateKey)]
  |         private_key_to_pem_pkcs8,
  |         /// Serializes the private key to a PEM-encoded PKCS#8 EncryptedPrivateKeyInfo structure.
  |         ///
  | 

--[ Match #212 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     T: HasPrivate,
  | {
  |     private_key_to_pem! {
  |         /// Serializes the private key to a PEM-encoded PKCS#8 PrivateKeyInfo structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_PKCS8PrivateKey)]
  | 

--[ Match #213 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | where
  |     T: HasPrivate,
  | {
  |     private_key_to_pem! {
  |         /// Serializes the private key to a PEM-encoded PKCS#8 PrivateKeyInfo structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN PRIVATE KEY-----`.
  | 

--[ Match #214 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkcs7.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let message = "foo";
  |         let flags = Pkcs7Flags::STREAM;
  |         let pkey = include_bytes!("../test/key.pem");
  |         let pkey = PKey::private_key_from_pem(pkey).unwrap();
  |         let mut store_builder = X509StoreBuilder::new().expect("should succeed");
  | 
  |         let root_ca = include_bytes!("../test/root-ca.pem");
  | 

--[ Match #215 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkcs7.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let message = "foo";
  |         let flags = Pkcs7Flags::STREAM;
  |         let pkey = include_bytes!("../test/key.pem");
  |         let pkey = PKey::private_key_from_pem(pkey).unwrap();
  |         let mut store_builder = X509StoreBuilder::new().expect("should succeed");
  | 
  |         let root_ca = include_bytes!("../test/root-ca.pem");
  | 

--[ Match #216 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkcs7.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let message = "foo";
  |         let flags = Pkcs7Flags::STREAM | Pkcs7Flags::DETACHED;
  |         let pkey = include_bytes!("../test/key.pem");
  |         let pkey = PKey::private_key_from_pem(pkey).unwrap();
  |         let mut store_builder = X509StoreBuilder::new().expect("should succeed");
  | 
  |         let root_ca = include_bytes!("../test/root-ca.pem");
  | 

--[ Match #217 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkcs7.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let cipher = Cipher::des_ede3_cbc();
  |         let flags = Pkcs7Flags::STREAM;
  |         let pkey = include_bytes!("../test/key.pem");
  |         let pkey = PKey::private_key_from_pem(pkey).unwrap();
  | 
  |         let pkcs7 =
  |             Pkcs7::encrypt(&certs, message.as_bytes(), cipher, flags).expect("should succeed");
  | 

--[ Match #218 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dh.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |             )
  |             .unwrap();
  |         assert_eq!(key1.public_key(), key3.public_key());
  |         assert_eq!(key1.private_key(), key3.private_key());
  |     }
  | 
  |     #[test]
  | 

--[ Match #219 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dh.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |             )
  |             .unwrap();
  |         assert_eq!(key1.public_key(), key3.public_key());
  |         assert_eq!(key1.private_key(), key3.private_key());
  |     }
  | 
  |     #[test]
  | 

--[ Match #220 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dh.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let key3 = dh3
  |             .set_key(
  |                 key1.public_key().to_owned().unwrap(),
  |                 key1.private_key().to_owned().unwrap(),
  |             )
  |             .unwrap();
  |         assert_eq!(key1.public_key(), key3.public_key());
  | 

--[ Match #221 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dh.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |             .unwrap();
  | 
  |         assert_eq!(key1.public_key(), key2.public_key());
  |         assert_eq!(key1.private_key(), key2.private_key());
  |     }
  | 
  |     #[test]
  | 

--[ Match #222 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dh.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |             .unwrap();
  | 
  |         assert_eq!(key1.public_key(), key2.public_key());
  |         assert_eq!(key1.private_key(), key2.private_key());
  |     }
  | 
  |     #[test]
  | 

--[ Match #223 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dh.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |         let dh2 = Dh::get_2048_256().unwrap();
  |         let key2 = dh2
  |             .set_private_key(key1.private_key().to_owned().unwrap())
  |             .unwrap();
  | 
  |         assert_eq!(key1.public_key(), key2.public_key());
  | 

--[ Match #224 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dh.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |         let dh2 = Dh::get_2048_256().unwrap();
  |         let key2 = dh2
  |             .set_private_key(key1.private_key().to_owned().unwrap())
  |             .unwrap();
  | 
  |         assert_eq!(key1.public_key(), key2.public_key());
  | 

--[ Match #225 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dh.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     /// Returns the private key from the DH instance.
  |     #[corresponds(DH_get0_key)]
  |     pub fn private_key(&self) -> &BigNumRef {
  |         let mut priv_key = ptr::null();
  |         unsafe {
  |             DH_get0_key(self.as_ptr(), ptr::null_mut(), &mut priv_key);
  | 

--[ Match #226 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dh.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     /// Sets the private key on the DH object and recomputes the public key.
  |     pub fn set_private_key(self, priv_key: BigNum) -> Result<Dh<Private>, ErrorStack> {
  |         unsafe {
  |             let dh_ptr = self.0;
  |             cvt(DH_set0_key(dh_ptr, ptr::null_mut(), priv_key.as_ptr()))?;
  | 

--[ Match #227 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\macros.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | }
  | 
  | macro_rules! private_key_to_pem {
  |     ($(#[$m:meta])* $n:ident, $(#[$m2:meta])* $n2:ident, $f:path) => {
  |         $(#[$m])*
  |         pub fn $n(&self) -> Result<Vec<u8>, crate::error::ErrorStack> {
  | 

--[ Match #228 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\macros.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | macro_rules! private_key_from_pem {
  |     ($(#[$m:meta])* $n:ident, $(#[$m2:meta])* $n2:ident, $(#[$m3:meta])* $n3:ident, $t:ty, $f:path) 
  |         from_pem!($(#[$m])* $n, $t, $f);
  | 
  | 

--[ Match #229 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | * The Cargo features previously used to gate access to version-specific OpenSSL APIs have been
  |     removed. Those APIs will be available automatically when building against an appropriate OpenSSL
  |     version.
  | * Fixed `PKey::private_key_from_der` to return a `PKey<Private>` rather than a `PKey<Public>`. This
  |     is technically a breaking change but the function was pretty useless previously.
  | 
  | ### Deprecated
  | 

--[ Match #230 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | ### Added
  | 
  | * Added `X509Req::public_key` and `X509Req::extensions`.
  | * Added `RsaPrivateKeyBuilder` to allow control over initialization of optional components of an RSA
  |     private key.
  | * Added DER encode/decode support to `SslSession`.
  | * openssl-sys now provides the `DEP_OPENSSL_VERSION_NUMBER` and
  | 

--[ Match #231 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  | * Added `aes::{wrap_key, unwrap_key}`.
  | * Added `CmsContentInfoRef::to_pem` and `CmsContentInfo::from_pem`.
  | * Added `DsaRef::private_key_to_pem`.
  | * Added `EcGroupRef::{cofactor, generator}`.
  | * Added `EcPointRef::to_owned`.
  | * Added a `Debug` implementation for `EcKey`.
  | 

--[ Match #232 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | ### Added
  | 
  | * Added `MessageDigest::null`.
  | * Added `PKey::private_key_from_pkcs8`.
  | * Added `SslOptions::NO_RENEGOTIATION`.
  | * Added `SslStreamBuilder::set_dtls_mtu_size`.
  | 
  | 

--[ Match #233 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  | ### Fixed
  | 
  | * `DsaRef::private_key_to_pem` can no longer be called without a private key.
  | 
  | ### Changed
  | 
  | 

--[ Match #234 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  | ### Added
  | 
  | * Added `Dh::set_private_key` and `DhRef::private_key`.
  | * Added `EcPointRef::affine_coordinates`.
  | * Added `TryFrom` implementations to convert between `PKey` and specific key types.
  | * Added `X509StoreBuilderRef::set_flags`.
  | 

--[ Match #235 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  | ### Added
  | 
  | * Added `Dh::set_private_key` and `DhRef::private_key`.
  | * Added `EcPointRef::affine_coordinates`.
  | * Added `TryFrom` implementations to convert between `PKey` and specific key types.
  | * Added `X509StoreBuilderRef::set_flags`.
  | 

--[ Match #236 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  | * Added `Asn1Object::as_slice`.
  | * Added `PKeyRef::{raw_public_key, raw_private_key, private_key_to_pkcs8_passphrase}` and
  |     `PKey::{private_key_from_raw_bytes, public_key_from_raw_bytes}`.
  | * Added `Cipher::{seed_cbc, seed_cfb128, seed_ecb, seed_ofb}`.
  | 
  | ## [v0.10.35] - 2021-06-18
  | 

--[ Match #237 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | ### Added
  | 
  | * Added `Asn1Object::as_slice`.
  | * Added `PKeyRef::{raw_public_key, raw_private_key, private_key_to_pkcs8_passphrase}` and
  |     `PKey::{private_key_from_raw_bytes, public_key_from_raw_bytes}`.
  | * Added `Cipher::{seed_cbc, seed_cfb128, seed_ecb, seed_ofb}`.
  | 
  | 

--[ Match #238 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | ### Added
  | 
  | * Added `Asn1Object::as_slice`.
  | * Added `PKeyRef::{raw_public_key, raw_private_key, private_key_to_pkcs8_passphrase}` and
  |     `PKey::{private_key_from_raw_bytes, public_key_from_raw_bytes}`.
  | * Added `Cipher::{seed_cbc, seed_cfb128, seed_ecb, seed_ofb}`.
  | 
  | 

--[ Match #239 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | * Added `PKeyRef::private_key_to_pkcs8`.
  | * Added `X509LookupRef::load_crl_file`.
  | * Added `Pkcs12Builder::name`, `Pkcs12Builder::pkey`, and `Pkcs12Builder::cert`.
  | * Added `SslRef::set_method`, `SslRef::set_private_key_file`, `SslRef::set_private_key`, `SslRef::se
  | * Added `X509NameRef::to_owned`.
  | * Added `SslContextBuilder::set_num_tickets`, `SslContextRef::num_tickets`, `SslRef::set_num_tickets
  | * Added `CmsContentInfo::verify`.
  | 

--[ Match #240 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | * Added `PKeyRef::private_key_to_pkcs8`.
  | * Added `X509LookupRef::load_crl_file`.
  | * Added `Pkcs12Builder::name`, `Pkcs12Builder::pkey`, and `Pkcs12Builder::cert`.
  | * Added `SslRef::set_method`, `SslRef::set_private_key_file`, `SslRef::set_private_key`, `SslRef::se
  | * Added `X509NameRef::to_owned`.
  | * Added `SslContextBuilder::set_num_tickets`, `SslContextRef::num_tickets`, `SslRef::set_num_tickets
  | * Added `CmsContentInfo::verify`.
  | 

--[ Match #241 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | * Added `X509VerifyParamRef::set_auth_level`, `X509VerifyParamRef::auth_level`, and `X509VerifyParam
  | * Added `X509PurposeId` and `X509Purpose`.
  | * Added `X509NameBuilder::append_entry`.
  | * Added `PKeyRef::private_key_to_pkcs8`.
  | * Added `X509LookupRef::load_crl_file`.
  | * Added `Pkcs12Builder::name`, `Pkcs12Builder::pkey`, and `Pkcs12Builder::cert`.
  | * Added `SslRef::set_method`, `SslRef::set_private_key_file`, `SslRef::set_private_key`, `SslRef::se
  | * Added `X509NameRef::to_owned`.
  | * Added `SslContextBuilder::set_num_tickets`, `SslContextRef::num_tickets`, `SslRef::set_num_tickets
  | * Added `CmsContentInfo::verify`.
  | 
  | ## [v0.10.45] - 2022-12-20
  | 
  | ### Fixed
  | 
  | * Removed the newly added `CipherCtxRef::minimal_output_size` m

--[ Match #242 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  | ### Fixed
  | 
  | * `PKey::private_key_to_pkcs8_passphrase` no longer panics if a `passphrase` contains a NUL byte.
  | 
  | ## [v0.10.53] - 2023-05-30
  | 
  | 

--[ Match #243 of 666 ]--
   Rule Id: BD000702
       Tag: Security.Backdoor.DataExfiltration.Environment
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: (env|environment).{1,50}(get|post|curl|nc|invoke-restmethod)
  | 
  | ### Added
  | 
  | * Added bindings to envelope encryption APIs.
  | * Added `PkeyRef::size`.
  | 
  | ## [v0.10.20] - 2019-03-20
  | 

--[ Match #244 of 666 ]--
   Rule Id: BD000800
       Tag: Security.Backdoor.Obfuscation
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: base64|encodedcommand|obfuscate
  | * Added `Asn1TimeRef::{diff, compare}`.
  | * Added `Asn1Time::from_unix`.
  | * Added `PartialEq` and `PartialOrd` implementations for `Asn1Time` and `Asn1TimeRef`.
  | * Added `base64::{encode_block, decode_block}`.
  | * Added `EcGroupRef::order_bits`.
  | * Added `Clone` implementations for `Sha1`, `Sha224`, `Sha256`, `Sha384`, and `Sha512`.
  | * Added `SslContextBuilder::{set_sigalgs_list, set_groups_list}`.
  | 

--[ Match #245 of 666 ]--
   Rule Id: BD000800
       Tag: Security.Backdoor.Obfuscation
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\lib.rs
   Pattern: base64|encodedcommand|obfuscate
  | mod util;
  | pub mod aes;
  | pub mod asn1;
  | pub mod base64;
  | pub mod bn;
  | pub mod cipher;
  | pub mod cipher_ctx;
  | 

--[ Match #246 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\envelope.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let iv = seal.iv();
  |         let encrypted_key = &seal.encrypted_keys()[0];
  | 
  |         let mut open = Open::new(cipher, &private_key, iv, encrypted_key).unwrap();
  |         let mut decrypted = vec![0; enc_len + cipher.block_size()];
  |         let mut dec_len = open.update(&encrypted[..enc_len], &mut decrypted).unwrap();
  |         dec_len += open.finalize(&mut decrypted[dec_len..]).unwrap();
  | 

--[ Match #247 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\envelope.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn public_encrypt_private_decrypt() {
  |         let private_pem = include_bytes!("../test/rsa.pem");
  |         let public_pem = include_bytes!("../test/rsa.pem.pub");
  |         let private_key = PKey::private_key_from_pem(private_pem).unwrap();
  |         let public_key = PKey::public_key_from_pem(public_pem).unwrap();
  |         let cipher = Cipher::aes_256_cbc();
  |         let secret = b"My secret message";
  | 

--[ Match #248 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\envelope.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn public_encrypt_private_decrypt() {
  |         let private_pem = include_bytes!("../test/rsa.pem");
  |         let public_pem = include_bytes!("../test/rsa.pem.pub");
  |         let private_key = PKey::private_key_from_pem(private_pem).unwrap();
  |         let public_key = PKey::public_key_from_pem(public_pem).unwrap();
  |         let cipher = Cipher::aes_256_cbc();
  |         let secret = b"My secret message";
  | 

--[ Match #249 of 666 ]--
   Rule Id: BD000702
       Tag: Security.Backdoor.DataExfiltration.Environment
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\envelope.rs
   Pattern: (env|environment).{1,50}(get|post|curl|nc|invoke-restmethod)
  | //! Envelope encryption.
  | //!
  | //! # Example
  | //!
  | 

--[ Match #250 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn rsa_sign_verify() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let mut signer = Signer::new(MessageDigest::sha256(), &pkey).unwrap();
  |         signer.set_rsa_padding(Padding::PKCS1_PSS).unwrap();
  | 

--[ Match #251 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[cfg(ossl111)]
  |     fn rsa_sign_verify() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let mut signer = Signer::new(MessageDigest::sha256(), &pkey).unwrap();
  | 

--[ Match #252 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[cfg(ossl111)]
  |     fn rsa_sign_verify() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let mut signer = Signer::new(MessageDigest::sha256(), &pkey).unwrap();
  | 

--[ Match #253 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn rsa_verify_invalid() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let mut verifier = Verifier::new(MessageDigest::sha256(), &pkey).unwrap();
  |         verifier.update(&Vec::from_hex(INPUT).unwrap()).unwrap();
  | 

--[ Match #254 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn rsa_verify_invalid() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let mut verifier = Verifier::new(MessageDigest::sha256(), &pkey).unwrap();
  | 

--[ Match #255 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn rsa_verify_invalid() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let mut verifier = Verifier::new(MessageDigest::sha256(), &pkey).unwrap();
  | 

--[ Match #256 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn rsa_verify_ok() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let mut verifier = Verifier::new(MessageDigest::sha256(), &pkey).unwrap();
  |         assert_eq!(verifier.rsa_padding().unwrap(), Padding::PKCS1);
  | 

--[ Match #257 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn rsa_verify_ok() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let mut verifier = Verifier::new(MessageDigest::sha256(), &pkey).unwrap();
  | 

--[ Match #258 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn rsa_verify_ok() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let mut verifier = Verifier::new(MessageDigest::sha256(), &pkey).unwrap();
  | 

--[ Match #259 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn rsa_sign() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let mut signer = Signer::new(MessageDigest::sha256(), &pkey).unwrap();
  |         assert_eq!(signer.rsa_padding().unwrap(), Padding::PKCS1);
  | 

--[ Match #260 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn rsa_sign() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let mut signer = Signer::new(MessageDigest::sha256(), &pkey).unwrap();
  | 

--[ Match #261 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn rsa_sign() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let mut signer = Signer::new(MessageDigest::sha256(), &pkey).unwrap();
  | 

--[ Match #262 of 666 ]--
   Rule Id: BD000801
       Tag: Security.Backdoor.ExecuteObfuscatedCode
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\aes.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){5,}
  |  let key = AesKey::new_encrypt(key).unwrap();
  |  let mut output = [0u8; 16];
  |  aes_ige(plaintext, &mut output, &key, &mut iv, Mode::Encrypt);
  |  assert_eq!(output, *b"\xa6\xad\x97\x4d\x5c\xea\x1d\x36\xd2\xf3\x67\x98\x09\x07\xed\x32");
  | ```"#
  | )]
  | 
  | 

--[ Match #263 of 666 ]--
   Rule Id: BD000801
       Tag: Security.Backdoor.ExecuteObfuscatedCode
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\aes.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){5,}
  | let key = b"\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F";
  | let plaintext = b"\x12\x34\x56\x78\x90\x12\x34\x56\x12\x34\x56\x78\x90\x12\x34\x56";
  | let mut iv = *b"\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F\
  |                 \x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F";
  | 
  |  let key = AesKey::new_encrypt(key).unwrap();
  |  let mut output = [0u8; 16];
  | 

--[ Match #264 of 666 ]--
   Rule Id: BD000801
       Tag: Security.Backdoor.ExecuteObfuscatedCode
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\aes.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){5,}
  | 
  | let key = b"\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F";
  | let plaintext = b"\x12\x34\x56\x78\x90\x12\x34\x56\x12\x34\x56\x78\x90\x12\x34\x56";
  | let mut iv = *b"\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F\
  |                 \x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F";
  | 
  |  let key = AesKey::new_encrypt(key).unwrap();
  | 

--[ Match #265 of 666 ]--
   Rule Id: BD000801
       Tag: Security.Backdoor.ExecuteObfuscatedCode
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\aes.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){5,}
  | use openssl::symm::Mode;
  | 
  | let key = b"\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F";
  | let plaintext = b"\x12\x34\x56\x78\x90\x12\x34\x56\x12\x34\x56\x78\x90\x12\x34\x56";
  | let mut iv = *b"\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F\
  |                 \x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F";
  | 
  | 

--[ Match #266 of 666 ]--
   Rule Id: BD000801
       Tag: Security.Backdoor.ExecuteObfuscatedCode
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\aes.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){5,}
  | use openssl::aes::{AesKey, aes_ige};
  | use openssl::symm::Mode;
  | 
  | let key = b"\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F";
  | let plaintext = b"\x12\x34\x56\x78\x90\x12\x34\x56\x12\x34\x56\x78\x90\x12\x34\x56";
  | let mut iv = *b"\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F\
  |                 \x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F";
  | 

--[ Match #267 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\hash.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | ///
  | /// Don't actually use MD5 and SHA-1 hashes, they're not secure anymore.
  | ///
  | /// Don't ever hash passwords, use the functions in the `pkcs5` module or bcrypt/scrypt instead.
  | ///
  | /// For extendable output functions (XOFs, i.e. SHAKE128/SHAKE256),
  | /// you must use [`Hasher::finish_xof`] instead of [`Hasher::finish`]
  | 

--[ Match #268 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ecdsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let public_key = get_public_key(&group, &private_key).unwrap();
  | 
  |         let data = String::from("hello");
  |         let res = EcdsaSig::sign(data.as_bytes(), &private_key).unwrap();
  | 
  |         let der = res.to_der().unwrap();
  |         let sig = EcdsaSig::from_der(&der).unwrap();
  | 

--[ Match #269 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ecdsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn serialize_deserialize() {
  |         let group = EcGroup::from_curve_name(Nid::X9_62_PRIME256V1).unwrap();
  |         let private_key = EcKey::generate(&group).unwrap();
  |         let public_key = get_public_key(&group, &private_key).unwrap();
  | 
  |         let data = String::from("hello");
  |         let res = EcdsaSig::sign(data.as_bytes(), &private_key).unwrap();
  | 

--[ Match #270 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ecdsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[cfg_attr(osslconf = "OPENSSL_NO_EC", ignore)]
  |     fn serialize_deserialize() {
  |         let group = EcGroup::from_curve_name(Nid::X9_62_PRIME256V1).unwrap();
  |         let private_key = EcKey::generate(&group).unwrap();
  |         let public_key = get_public_key(&group, &private_key).unwrap();
  | 
  |         let data = String::from("hello");
  | 

--[ Match #271 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ecdsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let private_key = EcKey::generate(&group).unwrap();
  |         let public_key = get_public_key(&group, &private_key).unwrap();
  |         let data = String::from("hello");
  |         let res = EcdsaSig::sign(data.as_bytes(), &private_key).unwrap();
  | 
  |         let verification = res.verify(data.as_bytes(), &public_key).unwrap();
  |         assert!(verification);
  | 

--[ Match #272 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ecdsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn check_private_components() {
  |         let group = EcGroup::from_curve_name(Nid::X9_62_PRIME256V1).unwrap();
  |         let private_key = EcKey::generate(&group).unwrap();
  |         let public_key = get_public_key(&group, &private_key).unwrap();
  |         let data = String::from("hello");
  |         let res = EcdsaSig::sign(data.as_bytes(), &private_key).unwrap();
  | 
  | 

--[ Match #273 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ecdsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[cfg_attr(osslconf = "OPENSSL_NO_EC", ignore)]
  |     fn check_private_components() {
  |         let group = EcGroup::from_curve_name(Nid::X9_62_PRIME256V1).unwrap();
  |         let private_key = EcKey::generate(&group).unwrap();
  |         let public_key = get_public_key(&group, &private_key).unwrap();
  |         let data = String::from("hello");
  |         let res = EcdsaSig::sign(data.as_bytes(), &private_key).unwrap();
  | 

--[ Match #274 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ecdsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let public_key2 = get_public_key(&group, &private_key2).unwrap();
  | 
  |         let data = String::from("hello");
  |         let res = EcdsaSig::sign(data.as_bytes(), &private_key).unwrap();
  | 
  |         // Signature can be verified using the correct data & correct public key
  |         let verification = res.verify(data.as_bytes(), &public_key).unwrap();
  | 

--[ Match #275 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ecdsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let public_key = get_public_key(&group, &private_key).unwrap();
  | 
  |         let private_key2 = EcKey::generate(&group).unwrap();
  |         let public_key2 = get_public_key(&group, &private_key2).unwrap();
  | 
  |         let data = String::from("hello");
  |         let res = EcdsaSig::sign(data.as_bytes(), &private_key).unwrap();
  | 

--[ Match #276 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ecdsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let private_key = EcKey::generate(&group).unwrap();
  |         let public_key = get_public_key(&group, &private_key).unwrap();
  | 
  |         let private_key2 = EcKey::generate(&group).unwrap();
  |         let public_key2 = get_public_key(&group, &private_key2).unwrap();
  | 
  |         let data = String::from("hello");
  | 

--[ Match #277 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ecdsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn sign_and_verify() {
  |         let group = EcGroup::from_curve_name(Nid::X9_62_PRIME256V1).unwrap();
  |         let private_key = EcKey::generate(&group).unwrap();
  |         let public_key = get_public_key(&group, &private_key).unwrap();
  | 
  |         let private_key2 = EcKey::generate(&group).unwrap();
  |         let public_key2 = get_public_key(&group, &private_key2).unwrap();
  | 

--[ Match #278 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ecdsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[cfg_attr(osslconf = "OPENSSL_NO_EC", ignore)]
  |     fn sign_and_verify() {
  |         let group = EcGroup::from_curve_name(Nid::X9_62_PRIME256V1).unwrap();
  |         let private_key = EcKey::generate(&group).unwrap();
  |         let public_key = get_public_key(&group, &private_key).unwrap();
  | 
  |         let private_key2 = EcKey::generate(&group).unwrap();
  | 

--[ Match #279 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\nid.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     pub const SETCT_AUTHREQTBE: Nid = Nid(ffi::NID_setct_AuthReqTBE);
  |     pub const SETCT_AUTHRESTBE: Nid = Nid(ffi::NID_setct_AuthResTBE);
  |     pub const SETCT_AUTHRESTBEX: Nid = Nid(ffi::NID_setct_AuthResTBEX);
  |     pub const SETCT_AUTHTOKENTBE: Nid = Nid(ffi::NID_setct_AuthTokenTBE);
  |     pub const SETCT_CAPTOKENTBE: Nid = Nid(ffi::NID_setct_CapTokenTBE);
  |     pub const SETCT_CAPTOKENTBEX: Nid = Nid(ffi::NID_setct_CapTokenTBEX);
  |     pub const SETCT_ACQCARDCODEMSGTBE: Nid = Nid(ffi::NID_setct_AcqCardCodeMsgTBE);
  | 

--[ Match #280 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\nid.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     pub const SETCT_AUTHREQTBE: Nid = Nid(ffi::NID_setct_AuthReqTBE);
  |     pub const SETCT_AUTHRESTBE: Nid = Nid(ffi::NID_setct_AuthResTBE);
  |     pub const SETCT_AUTHRESTBEX: Nid = Nid(ffi::NID_setct_AuthResTBEX);
  |     pub const SETCT_AUTHTOKENTBE: Nid = Nid(ffi::NID_setct_AuthTokenTBE);
  |     pub const SETCT_CAPTOKENTBE: Nid = Nid(ffi::NID_setct_CapTokenTBE);
  |     pub const SETCT_CAPTOKENTBEX: Nid = Nid(ffi::NID_setct_CapTokenTBEX);
  |     pub const SETCT_ACQCARDCODEMSGTBE: Nid = Nid(ffi::NID_setct_AcqCardCodeMsgTBE);
  | 

--[ Match #281 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\nid.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     pub const SETCT_AUTHREQTBS: Nid = Nid(ffi::NID_setct_AuthReqTBS);
  |     pub const SETCT_AUTHRESTBS: Nid = Nid(ffi::NID_setct_AuthResTBS);
  |     pub const SETCT_AUTHRESTBSX: Nid = Nid(ffi::NID_setct_AuthResTBSX);
  |     pub const SETCT_AUTHTOKENTBS: Nid = Nid(ffi::NID_setct_AuthTokenTBS);
  |     pub const SETCT_CAPTOKENDATA: Nid = Nid(ffi::NID_setct_CapTokenData);
  |     pub const SETCT_CAPTOKENTBS: Nid = Nid(ffi::NID_setct_CapTokenTBS);
  |     pub const SETCT_ACQCARDCODEMSG: Nid = Nid(ffi::NID_setct_AcqCardCodeMsg);
  | 

--[ Match #282 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\nid.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     pub const SETCT_AUTHREQTBS: Nid = Nid(ffi::NID_setct_AuthReqTBS);
  |     pub const SETCT_AUTHRESTBS: Nid = Nid(ffi::NID_setct_AuthResTBS);
  |     pub const SETCT_AUTHRESTBSX: Nid = Nid(ffi::NID_setct_AuthResTBSX);
  |     pub const SETCT_AUTHTOKENTBS: Nid = Nid(ffi::NID_setct_AuthTokenTBS);
  |     pub const SETCT_CAPTOKENDATA: Nid = Nid(ffi::NID_setct_CapTokenData);
  |     pub const SETCT_CAPTOKENTBS: Nid = Nid(ffi::NID_setct_CapTokenTBS);
  |     pub const SETCT_ACQCARDCODEMSG: Nid = Nid(ffi::NID_setct_AcqCardCodeMsg);
  | 

--[ Match #283 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\nid.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     pub const SUBJECT_DIRECTORY_ATTRIBUTES: Nid = Nid(ffi::NID_subject_directory_attributes);
  |     pub const SUBJECT_KEY_IDENTIFIER: Nid = Nid(ffi::NID_subject_key_identifier);
  |     pub const KEY_USAGE: Nid = Nid(ffi::NID_key_usage);
  |     pub const PRIVATE_KEY_USAGE_PERIOD: Nid = Nid(ffi::NID_private_key_usage_period);
  |     pub const SUBJECT_ALT_NAME: Nid = Nid(ffi::NID_subject_alt_name);
  |     pub const ISSUER_ALT_NAME: Nid = Nid(ffi::NID_issuer_alt_name);
  |     pub const BASIC_CONSTRAINTS: Nid = Nid(ffi::NID_basic_constraints);
  | 

--[ Match #284 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\nid.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     pub const SUBJECT_DIRECTORY_ATTRIBUTES: Nid = Nid(ffi::NID_subject_directory_attributes);
  |     pub const SUBJECT_KEY_IDENTIFIER: Nid = Nid(ffi::NID_subject_key_identifier);
  |     pub const KEY_USAGE: Nid = Nid(ffi::NID_key_usage);
  |     pub const PRIVATE_KEY_USAGE_PERIOD: Nid = Nid(ffi::NID_private_key_usage_period);
  |     pub const SUBJECT_ALT_NAME: Nid = Nid(ffi::NID_subject_alt_name);
  |     pub const ISSUER_ALT_NAME: Nid = Nid(ffi::NID_issuer_alt_name);
  |     pub const BASIC_CONSTRAINTS: Nid = Nid(ffi::NID_basic_constraints);
  | 

--[ Match #285 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\nid.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     pub const OWNER: Nid = Nid(ffi::NID_owner);
  |     pub const ROLEOCCUPANT: Nid = Nid(ffi::NID_roleOccupant);
  |     pub const SEEALSO: Nid = Nid(ffi::NID_seeAlso);
  |     pub const USERPASSWORD: Nid = Nid(ffi::NID_userPassword);
  |     pub const USERCERTIFICATE: Nid = Nid(ffi::NID_userCertificate);
  |     pub const CACERTIFICATE: Nid = Nid(ffi::NID_cACertificate);
  |     pub const AUTHORITYREVOCATIONLIST: Nid = Nid(ffi::NID_authorityRevocationList);
  | 

--[ Match #286 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\nid.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     pub const OWNER: Nid = Nid(ffi::NID_owner);
  |     pub const ROLEOCCUPANT: Nid = Nid(ffi::NID_roleOccupant);
  |     pub const SEEALSO: Nid = Nid(ffi::NID_seeAlso);
  |     pub const USERPASSWORD: Nid = Nid(ffi::NID_userPassword);
  |     pub const USERCERTIFICATE: Nid = Nid(ffi::NID_userCertificate);
  |     pub const CACERTIFICATE: Nid = Nid(ffi::NID_cACertificate);
  |     pub const AUTHORITYREVOCATIONLIST: Nid = Nid(ffi::NID_authorityRevocationList);
  | 

--[ Match #287 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\nid.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     pub const PKCS9_MESSAGEDIGEST: Nid = Nid(ffi::NID_pkcs9_messageDigest);
  |     pub const PKCS9_SIGNINGTIME: Nid = Nid(ffi::NID_pkcs9_signingTime);
  |     pub const PKCS9_COUNTERSIGNATURE: Nid = Nid(ffi::NID_pkcs9_countersignature);
  |     pub const PKCS9_CHALLENGEPASSWORD: Nid = Nid(ffi::NID_pkcs9_challengePassword);
  |     pub const PKCS9_UNSTRUCTUREDADDRESS: Nid = Nid(ffi::NID_pkcs9_unstructuredAddress);
  |     pub const PKCS9_EXTCERTATTRIBUTES: Nid = Nid(ffi::NID_pkcs9_extCertAttributes);
  |     pub const EXT_REQ: Nid = Nid(ffi::NID_ext_req);
  | 

--[ Match #288 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\nid.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     pub const PKCS9_MESSAGEDIGEST: Nid = Nid(ffi::NID_pkcs9_messageDigest);
  |     pub const PKCS9_SIGNINGTIME: Nid = Nid(ffi::NID_pkcs9_signingTime);
  |     pub const PKCS9_COUNTERSIGNATURE: Nid = Nid(ffi::NID_pkcs9_countersignature);
  |     pub const PKCS9_CHALLENGEPASSWORD: Nid = Nid(ffi::NID_pkcs9_challengePassword);
  |     pub const PKCS9_UNSTRUCTUREDADDRESS: Nid = Nid(ffi::NID_pkcs9_unstructuredAddress);
  |     pub const PKCS9_EXTCERTATTRIBUTES: Nid = Nid(ffi::NID_pkcs9_extCertAttributes);
  |     pub const EXT_REQ: Nid = Nid(ffi::NID_ext_req);
  | 

--[ Match #289 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\nid.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     pub const CAST5_CFB64: Nid = Nid(ffi::NID_cast5_cfb64);
  |     pub const CAST5_OFB64: Nid = Nid(ffi::NID_cast5_ofb64);
  |     pub const PBEWITHMD5ANDCAST5_CBC: Nid = Nid(ffi::NID_pbeWithMD5AndCast5_CBC);
  |     pub const ID_PASSWORDBASEDMAC: Nid = Nid(ffi::NID_id_PasswordBasedMAC);
  |     pub const ID_DHBASEDMAC: Nid = Nid(ffi::NID_id_DHBasedMac);
  |     pub const RSADSI: Nid = Nid(ffi::NID_rsadsi);
  |     pub const PKCS: Nid = Nid(ffi::NID_pkcs);
  | 

--[ Match #290 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\nid.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     pub const CAST5_CFB64: Nid = Nid(ffi::NID_cast5_cfb64);
  |     pub const CAST5_OFB64: Nid = Nid(ffi::NID_cast5_ofb64);
  |     pub const PBEWITHMD5ANDCAST5_CBC: Nid = Nid(ffi::NID_pbeWithMD5AndCast5_CBC);
  |     pub const ID_PASSWORDBASEDMAC: Nid = Nid(ffi::NID_id_PasswordBasedMAC);
  |     pub const ID_DHBASEDMAC: Nid = Nid(ffi::NID_id_DHBasedMac);
  |     pub const RSADSI: Nid = Nid(ffi::NID_rsadsi);
  |     pub const PKCS: Nid = Nid(ffi::NID_pkcs);
  | 

--[ Match #291 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\encrypt.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn rsa_encrypt_decrypt_oaep_label() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let mut encrypter = Encrypter::new(&pkey).unwrap();
  |         encrypter.set_rsa_padding(Padding::PKCS1_OAEP).unwrap();
  | 

--[ Match #292 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\encrypt.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[cfg(any(ossl102, libressl310))]
  |     fn rsa_encrypt_decrypt_oaep_label() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let mut encrypter = Encrypter::new(&pkey).unwrap();
  | 

--[ Match #293 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\encrypt.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[cfg(any(ossl102, libressl310))]
  |     fn rsa_encrypt_decrypt_oaep_label() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let mut encrypter = Encrypter::new(&pkey).unwrap();
  | 

--[ Match #294 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\encrypt.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn rsa_encrypt_decrypt_with_sha256() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let md = MessageDigest::sha256();
  | 
  | 

--[ Match #295 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\encrypt.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[cfg(any(ossl102, libressl310))]
  |     fn rsa_encrypt_decrypt_with_sha256() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let md = MessageDigest::sha256();
  | 

--[ Match #296 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\encrypt.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[cfg(any(ossl102, libressl310))]
  |     fn rsa_encrypt_decrypt_with_sha256() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let md = MessageDigest::sha256();
  | 

--[ Match #297 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\encrypt.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn rsa_encrypt_decrypt() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let mut encrypter = Encrypter::new(&pkey).unwrap();
  |         encrypter.set_rsa_padding(Padding::PKCS1).unwrap();
  | 

--[ Match #298 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\encrypt.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn rsa_encrypt_decrypt() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let mut encrypter = Encrypter::new(&pkey).unwrap();
  | 

--[ Match #299 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\encrypt.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn rsa_encrypt_decrypt() {
  |         let key = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(key).unwrap();
  |         let pkey = PKey::from_rsa(private_key).unwrap();
  | 
  |         let mut encrypter = Encrypter::new(&pkey).unwrap();
  | 

--[ Match #300 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\encrypt.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// #
  |     /// # let key = include_bytes!("../test/rsa.pem");
  |     /// # let private_key = Rsa::private_key_from_pem(key).unwrap();
  |     /// # let pkey = PKey::from_rsa(private_key).unwrap();
  |     /// # let input = INPUT.to_vec();
  |     /// #
  |     /// let mut decrypter = Decrypter::new(&pkey).unwrap();
  | 

--[ Match #301 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\encrypt.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// #     \xf4\x62\x78\x64";
  |     /// #
  |     /// # let key = include_bytes!("../test/rsa.pem");
  |     /// # let private_key = Rsa::private_key_from_pem(key).unwrap();
  |     /// # let pkey = PKey::from_rsa(private_key).unwrap();
  |     /// # let input = INPUT.to_vec();
  |     /// #
  | 

--[ Match #302 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\encrypt.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// #     \xf4\x62\x78\x64";
  |     /// #
  |     /// # let key = include_bytes!("../test/rsa.pem");
  |     /// # let private_key = Rsa::private_key_from_pem(key).unwrap();
  |     /// # let pkey = PKey::from_rsa(private_key).unwrap();
  |     /// # let input = INPUT.to_vec();
  |     /// #
  | 

--[ Match #303 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\encrypt.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// #
  |     /// # let key = include_bytes!("../test/rsa.pem");
  |     /// # let private_key = Rsa::private_key_from_pem(key).unwrap();
  |     /// # let pkey = PKey::from_rsa(private_key).unwrap();
  |     /// # let input = b"hello world".to_vec();
  |     /// #
  |     /// let mut encrypter = Encrypter::new(&pkey).unwrap();
  | 

--[ Match #304 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\encrypt.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// # };
  |     /// #
  |     /// # let key = include_bytes!("../test/rsa.pem");
  |     /// # let private_key = Rsa::private_key_from_pem(key).unwrap();
  |     /// # let pkey = PKey::from_rsa(private_key).unwrap();
  |     /// # let input = b"hello world".to_vec();
  |     /// #
  | 

--[ Match #305 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\encrypt.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// # };
  |     /// #
  |     /// # let key = include_bytes!("../test/rsa.pem");
  |     /// # let private_key = Rsa::private_key_from_pem(key).unwrap();
  |     /// # let pkey = PKey::from_rsa(private_key).unwrap();
  |     /// # let input = b"hello world".to_vec();
  |     /// #
  | 

--[ Match #306 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn test_public_encrypt() {
  |         let k0 = super::Rsa::generate(512).unwrap();
  |         let k0pkey = k0.private_key_to_pem().unwrap();
  |         let k1 = super::Rsa::private_key_from_pem(&k0pkey).unwrap();
  | 
  |         let msg = vec![0xdeu8, 0xadu8, 0xd0u8, 0x0du8];
  | 
  | 

--[ Match #307 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn test_public_encrypt() {
  |         let k0 = super::Rsa::generate(512).unwrap();
  |         let k0pkey = k0.private_key_to_pem().unwrap();
  |         let k1 = super::Rsa::private_key_from_pem(&k0pkey).unwrap();
  | 
  |         let msg = vec![0xdeu8, 0xadu8, 0xd0u8, 0x0du8];
  | 

--[ Match #308 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let pkey = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(pkey).unwrap();
  |         let mut dec_result = vec![0; private_key.size() as usize];
  |         let len = private_key
  |             .private_decrypt(&result, &mut dec_result, Padding::PKCS1)
  |             .unwrap();
  | 
  | 

--[ Match #309 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |         let pkey = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(pkey).unwrap();
  |         let mut dec_result = vec![0; private_key.size() as usize];
  |         let len = private_key
  |             .private_decrypt(&result, &mut dec_result, Padding::PKCS1)
  |             .unwrap();
  | 

--[ Match #310 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         assert_eq!(len, 256);
  | 
  |         let pkey = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(pkey).unwrap();
  |         let mut dec_result = vec![0; private_key.size() as usize];
  |         let len = private_key
  |             .private_decrypt(&result, &mut dec_result, Padding::PKCS1)
  | 

--[ Match #311 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         assert_eq!(len, 256);
  | 
  |         let pkey = include_bytes!("../test/rsa.pem");
  |         let private_key = Rsa::private_key_from_pem(pkey).unwrap();
  |         let mut dec_result = vec![0; private_key.size() as usize];
  |         let len = private_key
  |             .private_decrypt(&result, &mut dec_result, Padding::PKCS1)
  | 

--[ Match #312 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |             .private_key_to_pem_passphrase(Cipher::aes_128_cbc(), b"foobar")
  |             .unwrap();
  |         Rsa::private_key_from_pem_passphrase(&pem, b"foobar").unwrap();
  |         assert!(Rsa::private_key_from_pem_passphrase(&pem, b"fizzbuzz").is_err());
  |     }
  | 
  |     #[test]
  | 

--[ Match #313 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let pem = key
  |             .private_key_to_pem_passphrase(Cipher::aes_128_cbc(), b"foobar")
  |             .unwrap();
  |         Rsa::private_key_from_pem_passphrase(&pem, b"foobar").unwrap();
  |         assert!(Rsa::private_key_from_pem_passphrase(&pem, b"fizzbuzz").is_err());
  |     }
  | 
  | 

--[ Match #314 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn test_to_password() {
  |         let key = Rsa::generate(2048).unwrap();
  |         let pem = key
  |             .private_key_to_pem_passphrase(Cipher::aes_128_cbc(), b"foobar")
  |             .unwrap();
  |         Rsa::private_key_from_pem_passphrase(&pem, b"foobar").unwrap();
  |         assert!(Rsa::private_key_from_pem_passphrase(&pem, b"fizzbuzz").is_err());
  | 

--[ Match #315 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     #[test]
  |     fn test_to_password() {
  |         let key = Rsa::generate(2048).unwrap();
  |         let pem = key
  |             .private_key_to_pem_passphrase(Cipher::aes_128_cbc(), b"foobar")
  | 

--[ Match #316 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         })
  |         .unwrap();
  | 
  |         assert!(password_queried);
  |     }
  | 
  |     #[test]
  | 

--[ Match #317 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let key = include_bytes!("../test/rsa-encrypted.pem");
  |         Rsa::private_key_from_pem_callback(key, |password| {
  |             password_queried = true;
  |             password[..6].copy_from_slice(b"mypass");
  |             Ok(6)
  |         })
  |         .unwrap();
  | 

--[ Match #318 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let mut password_queried = false;
  |         let key = include_bytes!("../test/rsa-encrypted.pem");
  |         Rsa::private_key_from_pem_callback(key, |password| {
  |             password_queried = true;
  |             password[..6].copy_from_slice(b"mypass");
  |             Ok(6)
  |         })
  | 

--[ Match #319 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn test_from_password_callback() {
  |         let mut password_queried = false;
  |         let key = include_bytes!("../test/rsa-encrypted.pem");
  |         Rsa::private_key_from_pem_callback(key, |password| {
  |             password_queried = true;
  |             password[..6].copy_from_slice(b"mypass");
  |             Ok(6)
  | 

--[ Match #320 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     fn test_from_password_callback() {
  |         let mut password_queried = false;
  |         let key = include_bytes!("../test/rsa-encrypted.pem");
  |         Rsa::private_key_from_pem_callback(key, |password| {
  |             password_queried = true;
  |             password[..6].copy_from_slice(b"mypass");
  |             Ok(6)
  | 

--[ Match #321 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     #[test]
  |     fn test_from_password_callback() {
  |         let mut password_queried = false;
  |         let key = include_bytes!("../test/rsa-encrypted.pem");
  |         Rsa::private_key_from_pem_callback(key, |password| {
  |             password_queried = true;
  | 

--[ Match #322 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     #[test]
  |     fn test_from_password_callback() {
  |         let mut password_queried = false;
  |         let key = include_bytes!("../test/rsa-encrypted.pem");
  |         Rsa::private_key_from_pem_callback(key, |password| {
  | 

--[ Match #323 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     #[test]
  |     fn test_from_password() {
  |         let key = include_bytes!("../test/rsa-encrypted.pem");
  |         Rsa::private_key_from_pem_passphrase(key, b"mypass").unwrap();
  |     }
  | 
  |     #[test]
  | 

--[ Match #324 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     use super::*;
  | 
  |     #[test]
  |     fn test_from_password() {
  |         let key = include_bytes!("../test/rsa-encrypted.pem");
  |         Rsa::private_key_from_pem_passphrase(key, b"mypass").unwrap();
  |     }
  | 

--[ Match #325 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         #[corresponds(d2i_RSAPrivateKey)]
  |         private_key_from_der,
  |         Rsa<Private>,
  |         ffi::d2i_RSAPrivateKey
  |     }
  | }
  | 
  | 

--[ Match #326 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     from_der! {
  |         /// Decodes a DER-encoded PKCS#1 RSAPrivateKey structure.
  |         #[corresponds(d2i_RSAPrivateKey)]
  |         private_key_from_der,
  |         Rsa<Private>,
  |         ffi::d2i_RSAPrivateKey
  |     }
  | 

--[ Match #327 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     from_der! {
  |         /// Decodes a DER-encoded PKCS#1 RSAPrivateKey structure.
  |         #[corresponds(d2i_RSAPrivateKey)]
  |         private_key_from_der,
  |         Rsa<Private>,
  |         ffi::d2i_RSAPrivateKey
  | 

--[ Match #328 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     from_der! {
  |         /// Decodes a DER-encoded PKCS#1 RSAPrivateKey structure.
  |         #[corresponds(d2i_RSAPrivateKey)]
  |         private_key_from_der,
  |         Rsa<Private>,
  | 

--[ Match #329 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         #[corresponds(PEM_read_bio_RSAPrivateKey)]
  |         private_key_from_pem_callback,
  |         Rsa<Private>,
  |         ffi::PEM_read_bio_RSAPrivateKey
  |     }
  | 
  |     from_der! {
  | 

--[ Match #330 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         ///
  |         /// The callback should fill the password into the provided buffer and return its length.
  |         #[corresponds(PEM_read_bio_RSAPrivateKey)]
  |         private_key_from_pem_callback,
  |         Rsa<Private>,
  |         ffi::PEM_read_bio_RSAPrivateKey
  |     }
  | 

--[ Match #331 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// Deserializes a private key from a PEM-encoded encrypted PKCS#1 RSAPrivateKey structure.
  |         ///
  |         /// The callback should fill the password into the provided buffer and return its length.
  |         #[corresponds(PEM_read_bio_RSAPrivateKey)]
  |         private_key_from_pem_callback,
  |         Rsa<Private>,
  |         ffi::PEM_read_bio_RSAPrivateKey
  | 

--[ Match #332 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted PKCS#1 RSAPrivateKey structure.
  |         ///
  |         /// The callback should fill the password into the provided buffer and return its length.
  |         #[corresponds(PEM_read_bio_RSAPrivateKey)]
  |         private_key_from_pem_callback,
  |         Rsa<Private>,
  | 

--[ Match #333 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         #[corresponds(PEM_read_bio_RSAPrivateKey)]
  |         private_key_from_pem_passphrase,
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted PKCS#1 RSAPrivateKey structure.
  |         ///
  |         /// The callback should fill the password into the provided buffer and return its length.
  |         #[corresponds(PEM_read_bio_RSAPrivateKey)]
  | 

--[ Match #334 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted PKCS#1 RSAPrivateKey structure.
  |         #[corresponds(PEM_read_bio_RSAPrivateKey)]
  |         private_key_from_pem_passphrase,
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted PKCS#1 RSAPrivateKey structure.
  |         ///
  | 

--[ Match #335 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         private_key_from_pem,
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted PKCS#1 RSAPrivateKey structure.
  |         #[corresponds(PEM_read_bio_RSAPrivateKey)]
  |         private_key_from_pem_passphrase,
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted PKCS#1 RSAPrivateKey structure.
  | 

--[ Match #336 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         #[corresponds(PEM_read_bio_RSAPrivateKey)]
  |         private_key_from_pem,
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted PKCS#1 RSAPrivateKey structure.
  |         #[corresponds(PEM_read_bio_RSAPrivateKey)]
  |         private_key_from_pem_passphrase,
  | 
  | 

--[ Match #337 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     private_key_from_pem! {
  |         /// Deserializes a private key from a PEM-encoded PKCS#1 RSAPrivateKey structure.
  |         #[corresponds(PEM_read_bio_RSAPrivateKey)]
  |         private_key_from_pem,
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted PKCS#1 RSAPrivateKey structure.
  |         #[corresponds(PEM_read_bio_RSAPrivateKey)]
  | 

--[ Match #338 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     // FIXME these need to identify input formats
  |     private_key_from_pem! {
  |         /// Deserializes a private key from a PEM-encoded PKCS#1 RSAPrivateKey structure.
  |         #[corresponds(PEM_read_bio_RSAPrivateKey)]
  |         private_key_from_pem,
  | 
  |         /// Deserializes a private key from a PEM-encoded encrypted PKCS#1 RSAPrivateKey structure.
  | 

--[ Match #339 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     // FIXME these need to identify input formats
  |     private_key_from_pem! {
  |         /// Deserializes a private key from a PEM-encoded PKCS#1 RSAPrivateKey structure.
  |         #[corresponds(PEM_read_bio_RSAPrivateKey)]
  |         private_key_from_pem,
  | 
  | 

--[ Match #340 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     // FIXME these need to identify input formats
  |     private_key_from_pem! {
  |         /// Deserializes a private key from a PEM-encoded PKCS#1 RSAPrivateKey structure.
  |         #[corresponds(PEM_read_bio_RSAPrivateKey)]
  |         private_key_from_pem,
  | 

--[ Match #341 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         dmq1: BigNum,
  |         iqmp: BigNum,
  |     ) -> Result<Rsa<Private>, ErrorStack> {
  |         Ok(RsaPrivateKeyBuilder::new(n, e, d)?
  |             .set_factors(p, q)?
  |             .set_crt_params(dmp1, dmq1, iqmp)?
  |             .build())
  | 

--[ Match #342 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// # fn main() -> Result<(), Box<dyn std::error::Error>> {
  |     /// # let bn = || openssl::bn::BigNum::new().unwrap();
  |     /// # let (n, e, d, p, q, dmp1, dmq1, iqmp) = (bn(), bn(), bn(), bn(), bn(), bn(), bn(), bn());
  |     /// RsaPrivateKeyBuilder::new(n, e, d)?
  |     ///     .set_factors(p, q)?
  |     ///     .set_crt_params(dmp1, dmq1, iqmp)?
  |     ///     .build();
  | 

--[ Match #343 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     ///
  |     /// This a convenience method over:
  |     /// ```
  |     /// # use openssl::rsa::RsaPrivateKeyBuilder;
  |     /// # fn main() -> Result<(), Box<dyn std::error::Error>> {
  |     /// # let bn = || openssl::bn::BigNum::new().unwrap();
  |     /// # let (n, e, d, p, q, dmp1, dmq1, iqmp) = (bn(), bn(), bn(), bn(), bn(), bn(), bn(), bn());
  | 

--[ Match #344 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         dmp1: BigNum,
  |         dmq1: BigNum,
  |         iqmp: BigNum,
  |     ) -> Result<RsaPrivateKeyBuilder, ErrorStack> {
  |         unsafe {
  |             RSA_set0_crt_params(
  |                 self.rsa.as_ptr(),
  | 

--[ Match #345 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     /// `p` and `q` are the first and second factors of `n`.
  |     #[corresponds(RSA_set0_factors)]
  |     // FIXME should be infallible
  |     pub fn set_factors(self, p: BigNum, q: BigNum) -> Result<RsaPrivateKeyBuilder, ErrorStack> {
  |         unsafe {
  |             RSA_set0_factors(self.rsa.as_ptr(), p.as_ptr(), q.as_ptr());
  |             mem::forget((p, q));
  | 

--[ Match #346 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |             let rsa = cvt_p(ffi::RSA_new())?;
  |             RSA_set0_key(rsa, n.as_ptr(), e.as_ptr(), d.as_ptr());
  |             mem::forget((n, e, d));
  |             Ok(RsaPrivateKeyBuilder {
  |                 rsa: Rsa::from_ptr(rsa),
  |             })
  |         }
  | 

--[ Match #347 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     ///
  |     /// [`RSA_new`]: https://www.openssl.org/docs/manmaster/crypto/RSA_new.html
  |     /// [`RSA_set0_key`]: https://www.openssl.org/docs/manmaster/crypto/RSA_set0_key.html
  |     pub fn new(n: BigNum, e: BigNum, d: BigNum) -> Result<RsaPrivateKeyBuilder, ErrorStack> {
  |         unsafe {
  |             let rsa = cvt_p(ffi::RSA_new())?;
  |             RSA_set0_key(rsa, n.as_ptr(), e.as_ptr(), d.as_ptr());
  | 

--[ Match #348 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | }
  | 
  | impl RsaPrivateKeyBuilder {
  |     /// Creates a new `RsaPrivateKeyBuilder`.
  |     ///
  |     /// `n` is the modulus common to both public and private key.
  |     /// `e` is the public exponent and `d` is the private exponent.
  | 

--[ Match #349 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     rsa: Rsa<Private>,
  | }
  | 
  | impl RsaPrivateKeyBuilder {
  |     /// Creates a new `RsaPrivateKeyBuilder`.
  |     ///
  |     /// `n` is the modulus common to both public and private key.
  | 

--[ Match #350 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | }
  | 
  | pub struct RsaPrivateKeyBuilder {
  |     rsa: Rsa<Private>,
  | }
  | 
  | 

--[ Match #351 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// Serializes the private key to a DER-encoded PKCS#1 RSAPrivateKey structure.
  |         #[corresponds(i2d_RSAPrivateKey)]
  |         private_key_to_der,
  |         ffi::i2d_RSAPrivateKey
  |     }
  | 
  |     /// Decrypts data using the private key, returning the number of decrypted bytes.
  | 

--[ Match #352 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     to_der! {
  |         /// Serializes the private key to a DER-encoded PKCS#1 RSAPrivateKey structure.
  |         #[corresponds(i2d_RSAPrivateKey)]
  |         private_key_to_der,
  |         ffi::i2d_RSAPrivateKey
  |     }
  | 
  | 

--[ Match #353 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | 
  |     to_der! {
  |         /// Serializes the private key to a DER-encoded PKCS#1 RSAPrivateKey structure.
  |         #[corresponds(i2d_RSAPrivateKey)]
  |         private_key_to_der,
  |         ffi::i2d_RSAPrivateKey
  |     }
  | 

--[ Match #354 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     }
  | 
  |     to_der! {
  |         /// Serializes the private key to a DER-encoded PKCS#1 RSAPrivateKey structure.
  |         #[corresponds(i2d_RSAPrivateKey)]
  |         private_key_to_der,
  |         ffi::i2d_RSAPrivateKey
  | 

--[ Match #355 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// The output will have a header of `-----BEGIN RSA PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_RSAPrivateKey)]
  |         private_key_to_pem_passphrase,
  |         ffi::PEM_write_bio_RSAPrivateKey
  |     }
  | 
  |     to_der! {
  | 

--[ Match #356 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         ///
  |         /// The output will have a header of `-----BEGIN RSA PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_RSAPrivateKey)]
  |         private_key_to_pem_passphrase,
  |         ffi::PEM_write_bio_RSAPrivateKey
  |     }
  | 
  | 

--[ Match #357 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// Serializes the private key to a PEM-encoded encrypted PKCS#1 RSAPrivateKey structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN RSA PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_RSAPrivateKey)]
  |         private_key_to_pem_passphrase,
  |         ffi::PEM_write_bio_RSAPrivateKey
  |     }
  | 

--[ Match #358 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// The output will have a header of `-----BEGIN RSA PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_RSAPrivateKey)]
  |         private_key_to_pem,
  |         /// Serializes the private key to a PEM-encoded encrypted PKCS#1 RSAPrivateKey structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN RSA PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_RSAPrivateKey)]
  | 

--[ Match #359 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         ///
  |         /// The output will have a header of `-----BEGIN RSA PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_RSAPrivateKey)]
  |         private_key_to_pem,
  |         /// Serializes the private key to a PEM-encoded encrypted PKCS#1 RSAPrivateKey structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN RSA PRIVATE KEY-----`.
  | 

--[ Match #360 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         /// Serializes the private key to a PEM-encoded PKCS#1 RSAPrivateKey structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN RSA PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_RSAPrivateKey)]
  |         private_key_to_pem,
  |         /// Serializes the private key to a PEM-encoded encrypted PKCS#1 RSAPrivateKey structure.
  |         ///
  | 

--[ Match #361 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |     T: HasPrivate,
  | {
  |     private_key_to_pem! {
  |         /// Serializes the private key to a PEM-encoded PKCS#1 RSAPrivateKey structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN RSA PRIVATE KEY-----`.
  |         #[corresponds(PEM_write_bio_RSAPrivateKey)]
  | 

--[ Match #362 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  | where
  |     T: HasPrivate,
  | {
  |     private_key_to_pem! {
  |         /// Serializes the private key to a PEM-encoded PKCS#1 RSAPrivateKey structure.
  |         ///
  |         /// The output will have a header of `-----BEGIN RSA PRIVATE KEY-----`.
  | 

--[ Match #363 of 666 ]--
   Rule Id: BD000701
       Tag: Security.Backdoor.DataExfiltration.Token
  Severity: Important, Confidence: High
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cms.rs
   Pattern: (npm owner|password|htpasswd|auth_?token|secret_?key|private_?key|authorized_keys?|npmrc|\.ssh|usersecrets?|api_?keys|nuget\.config|\.identityservice)
  |         let cert = X509::from_pem(cert_bytes).expect("failed to load cert.pem");
  | 
  |         let key_bytes = include_bytes!("../test/key.pem");
  |         let key = PKey::private_key_from_pem(key_bytes).expect("failed to load key.pem");
  | 
  |         let root_bytes = include_bytes!("../test/root-ca.pem");
  |         let root = X509::from_pem(root_bytes).expect("failed to load root-ca.pem");
  | 

--[ Match #364 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     let fingerprint = cert.digest(MessageDigest::sha1()).unwrap();
  |     assert_eq!(
  |         hex::encode(fingerprint),
  |         "59172d9313e84459bcff27f967e79e6e9217e584"
  |     );
  | }
  | 
  | 

--[ Match #365 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     let server = Server::builder().build();
  | 
  |     let mut client = server.client().build().builder();
  |     let expected = "59172d9313e84459bcff27f967e79e6e9217e584";
  |     client
  |         .ssl()
  |         .set_verify_callback(SslVerifyMode::PEER, move |_, x509| {
  | 

--[ Match #366 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     let server = Server::builder().build();
  | 
  |     let mut client = server.client();
  |     let expected = "59172d9313e84459bcff27f967e79e6e9217e584";
  |     client
  |         .ctx()
  |         .set_verify_callback(SslVerifyMode::PEER, move |_, x509| {
  | 

--[ Match #367 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let group = EcGroup::from_curve_name(Nid::X9_62_PRIME256V1).unwrap();
  |         let x = Vec::from_hex("30a0424cd21c2944838a2d75c92b37e76ea20d9f00893a3b4eee8a3c0aafec3e")
  |             .unwrap();
  |         let y = Vec::from_hex("e04b65e92456d9888b52b379bdfbd51ee869ef1f0fc65b6659695b6cce081723")
  |             .unwrap();
  | 
  |         let xbn = BigNum::from_slice(&x).unwrap();
  | 

--[ Match #368 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     fn get_affine_coordinates_gfp() {
  |         let group = EcGroup::from_curve_name(Nid::X9_62_PRIME256V1).unwrap();
  |         let x = Vec::from_hex("30a0424cd21c2944838a2d75c92b37e76ea20d9f00893a3b4eee8a3c0aafec3e")
  |             .unwrap();
  |         let y = Vec::from_hex("e04b65e92456d9888b52b379bdfbd51ee869ef1f0fc65b6659695b6cce081723")
  |             .unwrap();
  | 

--[ Match #369 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let group = EcGroup::from_curve_name(Nid::X9_62_PRIME256V1).unwrap();
  |         let x = Vec::from_hex("30a0424cd21c2944838a2d75c92b37e76ea20d9f00893a3b4eee8a3c0aafec3e")
  |             .unwrap();
  |         let y = Vec::from_hex("e04b65e92456d9888b52b379bdfbd51ee869ef1f0fc65b6659695b6cce081723")
  |             .unwrap();
  | 
  |         let xbn = BigNum::from_slice(&x).unwrap();
  | 

--[ Match #370 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     fn get_affine_coordinates() {
  |         let group = EcGroup::from_curve_name(Nid::X9_62_PRIME256V1).unwrap();
  |         let x = Vec::from_hex("30a0424cd21c2944838a2d75c92b37e76ea20d9f00893a3b4eee8a3c0aafec3e")
  |             .unwrap();
  |         let y = Vec::from_hex("e04b65e92456d9888b52b379bdfbd51ee869ef1f0fc65b6659695b6cce081723")
  |             .unwrap();
  | 

--[ Match #371 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let group = EcGroup::from_curve_name(Nid::X9_62_PRIME256V1).unwrap();
  |         let x = Vec::from_hex("30a0424cd21c2944838a2d75c92b37e76ea20d9f00893a3b4eee8a3c0aafec3e")
  |             .unwrap();
  |         let y = Vec::from_hex("e04b65e92456d9888b52b379bdfbd51ee869ef1f0fc65b6659695b6cce081723")
  |             .unwrap();
  | 
  |         let xbn = BigNum::from_slice(&x).unwrap();
  | 

--[ Match #372 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     fn key_from_affine_coordinates() {
  |         let group = EcGroup::from_curve_name(Nid::X9_62_PRIME256V1).unwrap();
  |         let x = Vec::from_hex("30a0424cd21c2944838a2d75c92b37e76ea20d9f00893a3b4eee8a3c0aafec3e")
  |             .unwrap();
  |         let y = Vec::from_hex("e04b65e92456d9888b52b379bdfbd51ee869ef1f0fc65b6659695b6cce081723")
  |             .unwrap();
  | 

--[ Match #373 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |             .unwrap();
  | 
  |         let order = BigNum::from_hex_str(
  |             "FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551",
  |         )
  |         .unwrap();
  |         let cofactor = BigNum::from_hex_str("01").unwrap();
  | 

--[ Match #374 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         )
  |         .unwrap();
  |         let gen_y = BigNum::from_hex_str(
  |             "4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5",
  |         )
  |         .unwrap();
  |         gen_point
  | 

--[ Match #375 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: ["'][a-z0-9]{40,}["']
  | 
  |         let mut gen_point = EcPoint::new(&group).unwrap();
  |         let gen_x = BigNum::from_hex_str(
  |             "6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296",
  |         )
  |         .unwrap();
  |         let gen_y = BigNum::from_hex_str(
  | 

--[ Match #376 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         )
  |         .unwrap();
  |         let b = BigNum::from_hex_str(
  |             "5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B",
  |         )
  |         .unwrap();
  | 
  | 

--[ Match #377 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         )
  |         .unwrap();
  |         let a = BigNum::from_hex_str(
  |             "FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC",
  |         )
  |         .unwrap();
  |         let b = BigNum::from_hex_str(
  | 

--[ Match #378 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         // parameters are from secp256r1
  |         let mut ctx = BigNumContext::new().unwrap();
  |         let p = BigNum::from_hex_str(
  |             "FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF",
  |         )
  |         .unwrap();
  |         let a = BigNum::from_hex_str(
  | 

--[ Match #379 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         )
  |         .unwrap();
  |         let gen_y = BigNum::from_hex_str(
  |             "4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5",
  |         )
  |         .unwrap();
  |         gen_point
  | 

--[ Match #380 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let mut ctx = BigNumContext::new().unwrap();
  |         let mut gen_point = EcPoint::new(&group).unwrap();
  |         let gen_x = BigNum::from_hex_str(
  |             "6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296",
  |         )
  |         .unwrap();
  |         let gen_y = BigNum::from_hex_str(
  | 

--[ Match #381 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         )
  |         .unwrap();
  |         let b = BigNum::from_hex_str(
  |             "5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B",
  |         )
  |         .unwrap();
  |         let mut ctx = BigNumContext::new().unwrap();
  | 

--[ Match #382 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         )
  |         .unwrap();
  |         let a = BigNum::from_hex_str(
  |             "FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC",
  |         )
  |         .unwrap();
  |         let b = BigNum::from_hex_str(
  | 

--[ Match #383 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ec.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn ec_group_from_components() {
  |         // parameters are from secp256r1
  |         let p = BigNum::from_hex_str(
  |             "FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF",
  |         )
  |         .unwrap();
  |         let a = BigNum::from_hex_str(
  | 

--[ Match #384 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\tests.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     );
  |     assert_eq!(
  |         hex::encode(certs[1].digest(MessageDigest::sha1()).unwrap()),
  |         "c0cbdf7cdd03c9773e5468e1f6d2da7d5cbb1875"
  |     );
  | }
  | 
  | 

--[ Match #385 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\tests.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     assert_eq!(certs.len(), 2);
  |     assert_eq!(
  |         hex::encode(certs[0].digest(MessageDigest::sha1()).unwrap()),
  |         "59172d9313e84459bcff27f967e79e6e9217e584"
  |     );
  |     assert_eq!(
  |         hex::encode(certs[1].digest(MessageDigest::sha1()).unwrap()),
  | 

--[ Match #386 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\tests.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     let cert = X509::from_pem(cert).unwrap();
  |     let fingerprint = cert.digest(MessageDigest::sha1()).unwrap();
  | 
  |     let hash_str = "59172d9313e84459bcff27f967e79e6e9217e584";
  |     let hash_vec = Vec::from_hex(hash_str).unwrap();
  | 
  |     assert_eq!(hash_vec, &*fingerprint);
  | 

--[ Match #387 of 666 ]--
   Rule Id: BD000805
       Tag: Security.Backdoor.Obfuscation.LongBinaryStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\tests.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){10,}
  |                 .other("clientAuth")
  |                 .build()
  |                 .unwrap(),
  |             b"0\x22\x06\x03U\x1d%\x04\x1b0\x19\x06\x08+\x06\x01\x05\x05\x07\x03\x01\x06\x03\x887\x01
  |         ),
  |     ] {
  |         assert_eq!(&ext.to_der().unwrap(), expected);
  | 

--[ Match #388 of 666 ]--
   Rule Id: BD000805
       Tag: Security.Backdoor.Obfuscation.LongBinaryStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\tests.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){10,}
  |     let authority_key_id = cert.authority_key_id().unwrap();
  |     assert_eq!(
  |         authority_key_id.as_slice(),
  |         &b"\x6C\xD3\xA5\x03\xAB\x0D\x5F\x2C\xC9\x8D\x8A\x9C\x88\xA7\x88\x77\xB8\x37\xFD\x9A"[..]
  |     );
  | }
  | 
  | 

--[ Match #389 of 666 ]--
   Rule Id: BD000805
       Tag: Security.Backdoor.Obfuscation.LongBinaryStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\tests.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){10,}
  |     let subject_key_id = cert.subject_key_id().unwrap();
  |     assert_eq!(
  |         subject_key_id.as_slice(),
  |         &b"\xB6\x73\x2F\x61\xA5\x4B\xA1\xEF\x48\x2C\x15\xB1\x9F\xF3\xDC\x34\x2F\xBC\xAC\x30"[..]
  |     );
  | }
  | 
  | 

--[ Match #390 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes256_wrap_pad_default_iv() {
  |         let pt = "00112233445566778899aabbccddee";
  |         let ct = "dc3c166a854afd68aea624a4272693554bf2e4fcbae602cd";
  |         let key = "603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4";
  | 
  |         cipher_wrap_test(Cipher::aes_256_wrap_pad(), pt, ct, key, None);
  |     }
  | 

--[ Match #391 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[cfg(ossl110)]
  |     fn test_aes256_wrap_pad_default_iv() {
  |         let pt = "00112233445566778899aabbccddee";
  |         let ct = "dc3c166a854afd68aea624a4272693554bf2e4fcbae602cd";
  |         let key = "603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4";
  | 
  |         cipher_wrap_test(Cipher::aes_256_wrap_pad(), pt, ct, key, None);
  | 

--[ Match #392 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes256_wrap_pad() {
  |         let pt = "00112233445566778899aabbccddee";
  |         let ct = "91594e044ccc06130d60e6c84a996aa4f96a9faff8c5f6e7";
  |         let key = "603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4";
  |         let iv = "00010203";
  | 
  |         cipher_wrap_test(Cipher::aes_256_wrap_pad(), pt, ct, key, Some(iv));
  | 

--[ Match #393 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[cfg(ossl110)]
  |     fn test_aes256_wrap_pad() {
  |         let pt = "00112233445566778899aabbccddee";
  |         let ct = "91594e044ccc06130d60e6c84a996aa4f96a9faff8c5f6e7";
  |         let key = "603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4";
  |         let iv = "00010203";
  | 
  | 

--[ Match #394 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes256_wrap_default_iv() {
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e51";
  |         let ct = "0b24f068b50e52bc6987868411c36e1b03900866ed12af81eb87cef70a8d1911731c1d7abf789d88";
  |         let key = "603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4";
  | 
  |         cipher_wrap_test(Cipher::aes_256_wrap(), pt, ct, key, None);
  |     }
  | 

--[ Match #395 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[cfg(ossl102)]
  |     fn test_aes256_wrap_default_iv() {
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e51";
  |         let ct = "0b24f068b50e52bc6987868411c36e1b03900866ed12af81eb87cef70a8d1911731c1d7abf789d88";
  |         let key = "603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4";
  | 
  |         cipher_wrap_test(Cipher::aes_256_wrap(), pt, ct, key, None);
  | 

--[ Match #396 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     #[cfg(ossl102)]
  |     fn test_aes256_wrap_default_iv() {
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e51";
  |         let ct = "0b24f068b50e52bc6987868411c36e1b03900866ed12af81eb87cef70a8d1911731c1d7abf789d88";
  |         let key = "603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4";
  | 
  | 

--[ Match #397 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes256_wrap() {
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e51";
  |         let ct = "cc05da2a7f56f7dd0c144231f90bce58648fa20a8278f5a6b7d13bba6aa57a33229d4333866b7fd6";
  |         let key = "603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4";
  |         let iv = "0001020304050607";
  | 
  |         cipher_wrap_test(Cipher::aes_256_wrap(), pt, ct, key, Some(iv));
  | 

--[ Match #398 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[cfg(ossl102)]
  |     fn test_aes256_wrap() {
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e51";
  |         let ct = "cc05da2a7f56f7dd0c144231f90bce58648fa20a8278f5a6b7d13bba6aa57a33229d4333866b7fd6";
  |         let key = "603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4";
  |         let iv = "0001020304050607";
  | 
  | 

--[ Match #399 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     #[cfg(ossl102)]
  |     fn test_aes256_wrap() {
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e51";
  |         let ct = "cc05da2a7f56f7dd0c144231f90bce58648fa20a8278f5a6b7d13bba6aa57a33229d4333866b7fd6";
  |         let key = "603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4";
  |         let iv = "0001020304050607";
  | 

--[ Match #400 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes192_wrap_pad_default_iv() {
  |         let pt = "00112233445566778899aabbccddee";
  |         let ct = "b2c37a28cc602753a7c944a4c2555a2df9c98b2eded5312e";
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  | 
  |         cipher_wrap_test(Cipher::aes_192_wrap_pad(), pt, ct, key, None);
  |     }
  | 

--[ Match #401 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[cfg(ossl110)]
  |     fn test_aes192_wrap_pad_default_iv() {
  |         let pt = "00112233445566778899aabbccddee";
  |         let ct = "b2c37a28cc602753a7c944a4c2555a2df9c98b2eded5312e";
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  | 
  |         cipher_wrap_test(Cipher::aes_192_wrap_pad(), pt, ct, key, None);
  | 

--[ Match #402 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes192_wrap_pad() {
  |         let pt = "00112233445566778899aabbccddee";
  |         let ct = "b4f6bb167ef7caf061a74da82b36ad038ca057ab51e98d3a";
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  |         let iv = "00010203";
  | 
  |         cipher_wrap_test(Cipher::aes_192_wrap_pad(), pt, ct, key, Some(iv));
  | 

--[ Match #403 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[cfg(ossl110)]
  |     fn test_aes192_wrap_pad() {
  |         let pt = "00112233445566778899aabbccddee";
  |         let ct = "b4f6bb167ef7caf061a74da82b36ad038ca057ab51e98d3a";
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  |         let iv = "00010203";
  | 
  | 

--[ Match #404 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes192_wrap_default_iv() {
  |         let pt = "9f6dee187d35302116aecbfd059657efd9f7589c4b5e7f5b";
  |         let ct = "c02c2cf11505d3e4851030d5534cbf5a1d7eca7ba8839adbf239756daf1b43e6";
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  | 
  |         cipher_wrap_test(Cipher::aes_192_wrap(), pt, ct, key, None);
  |     }
  | 

--[ Match #405 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[cfg(ossl102)]
  |     fn test_aes192_wrap_default_iv() {
  |         let pt = "9f6dee187d35302116aecbfd059657efd9f7589c4b5e7f5b";
  |         let ct = "c02c2cf11505d3e4851030d5534cbf5a1d7eca7ba8839adbf239756daf1b43e6";
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  | 
  |         cipher_wrap_test(Cipher::aes_192_wrap(), pt, ct, key, None);
  | 

--[ Match #406 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     #[cfg(ossl102)]
  |     fn test_aes192_wrap_default_iv() {
  |         let pt = "9f6dee187d35302116aecbfd059657efd9f7589c4b5e7f5b";
  |         let ct = "c02c2cf11505d3e4851030d5534cbf5a1d7eca7ba8839adbf239756daf1b43e6";
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  | 
  | 

--[ Match #407 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes192_wrap() {
  |         let pt = "9f6dee187d35302116aecbfd059657efd9f7589c4b5e7f5b";
  |         let ct = "83b89142dfeeb4871e078bfb81134d33e23fedc19b03a1cf689973d3831b6813";
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  |         let iv = "0001020304050607";
  | 
  |         cipher_wrap_test(Cipher::aes_192_wrap(), pt, ct, key, Some(iv));
  | 

--[ Match #408 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[cfg(ossl102)]
  |     fn test_aes192_wrap() {
  |         let pt = "9f6dee187d35302116aecbfd059657efd9f7589c4b5e7f5b";
  |         let ct = "83b89142dfeeb4871e078bfb81134d33e23fedc19b03a1cf689973d3831b6813";
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  |         let iv = "0001020304050607";
  | 
  | 

--[ Match #409 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     #[cfg(ossl102)]
  |     fn test_aes192_wrap() {
  |         let pt = "9f6dee187d35302116aecbfd059657efd9f7589c4b5e7f5b";
  |         let ct = "83b89142dfeeb4871e078bfb81134d33e23fedc19b03a1cf689973d3831b6813";
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  |         let iv = "0001020304050607";
  | 

--[ Match #410 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[cfg(ossl110)]
  |     fn test_aes128_wrap_pad_default_iv() {
  |         let pt = "00112233445566778899aabbccddee";
  |         let ct = "3a501085fb8cf66f4186b7df851914d471ed823411598add";
  |         let key = "2b7e151628aed2a6abf7158809cf4f3c";
  | 
  |         cipher_wrap_test(Cipher::aes_128_wrap_pad(), pt, ct, key, None);
  | 

--[ Match #411 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[cfg(ossl110)]
  |     fn test_aes128_wrap_pad() {
  |         let pt = "00112233445566778899aabbccddee";
  |         let ct = "f13998f5ab32ef82a1bdbcbe585e1d837385b529572a1e1b";
  |         let key = "2b7e151628aed2a6abf7158809cf4f3c";
  |         let iv = "00010203";
  | 
  | 

--[ Match #412 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[cfg(ossl102)]
  |     fn test_aes128_wrap_default_iv() {
  |         let pt = "00112233445566778899aabbccddeeff";
  |         let ct = "38f1215f0212526f8a70b51955b9fbdc9fe3041d9832306e";
  |         let key = "2b7e151628aed2a6abf7158809cf4f3c";
  | 
  |         cipher_wrap_test(Cipher::aes_128_wrap(), pt, ct, key, None);
  | 

--[ Match #413 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[cfg(ossl102)]
  |     fn test_aes128_wrap() {
  |         let pt = "00112233445566778899aabbccddeeff";
  |         let ct = "7940ff694448b5bb5139c959a4896832e55d69aa04daa27e";
  |         let key = "2b7e151628aed2a6abf7158809cf4f3c";
  |         let iv = "0001020304050607";
  | 
  | 

--[ Match #414 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let iv = hex::decode("000102030405060708090a0b0c0d0e0f").unwrap();
  |         let pt = hex::decode("6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e51")
  |             .unwrap();
  |         let ct = hex::decode("7649abac8119b246cee98e9b12e9197d5086cb9b507219ee95db113a917678b2")
  |             .unwrap();
  | 
  |         let mut ctx = CipherCtx::new().unwrap();
  | 

--[ Match #415 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         // from https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38a.pdf
  |         let key = hex::decode("2b7e151628aed2a6abf7158809cf4f3c").unwrap();
  |         let iv = hex::decode("000102030405060708090a0b0c0d0e0f").unwrap();
  |         let pt = hex::decode("6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e51")
  |             .unwrap();
  |         let ct = hex::decode("7649abac8119b246cee98e9b12e9197d5086cb9b507219ee95db113a917678b2")
  |             .unwrap();
  | 

--[ Match #416 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let _provider = crate::provider::Provider::try_load(None, "legacy", true).unwrap();
  | 
  |         let pt = "5363686f6b6f6c6164656e6b756368656e0a";
  |         let ct = "0263a9cd498cf0edb0ef72a3231761d00ce601f7d08ad19ad74f0815f2c77f7e";
  |         let key = "41414141414141414141414141414141";
  |         let iv = "41414141414141414141414141414141";
  | 
  | 

--[ Match #417 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let _provider = crate::provider::Provider::try_load(None, "legacy", true).unwrap();
  | 
  |         let pt = "5363686f6b6f6c6164656e6b756368656e0a";
  |         let ct = "c2edf0fb2eb11bf7b2f39417a8528896d34b24b6fd79e5923b116dfcd2aba5a4";
  |         let key = "41414141414141414141414141414141";
  |         let iv = "41414141414141414141414141414141";
  | 
  | 

--[ Match #418 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     #[cfg(any(ossl110, libressl360))]
  |     fn test_chacha20_poly1305() {
  |         let key = "808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9f";
  |         let iv = "070000004041424344454647";
  |         let aad = "50515253c0c1c2c3c4c5c6c7";
  |         let pt =
  | 

--[ Match #419 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     #[cfg(any(ossl110, libressl310))]
  |     fn test_chacha20() {
  |         let key = "0000000000000000000000000000000000000000000000000000000000000000";
  |         let iv = "00000000000000000000000000000000";
  |         let pt =
  |             "000000000000000000000000000000000000000000000000000000000000000000000000000000000\
  | 

--[ Match #420 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let nonce = "dde2a362ce81b2b6913abc3095";
  |         let aad = "404f5df97ece7431987bc098cce994fc3c063b519ffa47b0365226a0015ef695";
  | 
  |         let ct = "353022db9c568bd7183a13c40b1ba30fcc768c54264aa2cd";
  |         let tag = "0000a053c9244d3217a7ad05";
  | 
  |         let out = decrypt_aead(
  | 

--[ Match #421 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes256_ccm_verify_fail() {
  |         let key = "7f4af6765cad1d511db07e33aaafd57646ec279db629048aa6770af24849aa0d";
  |         let nonce = "dde2a362ce81b2b6913abc3095";
  |         let aad = "404f5df97ece7431987bc098cce994fc3c063b519ffa47b0365226a0015ef695";
  | 
  |         let ct = "353022db9c568bd7183a13c40b1ba30fcc768c54264aa2cd";
  |         let tag = "0000a053c9244d3217a7ad05";
  | 

--[ Match #422 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     #[cfg(not(boringssl))]
  |     fn test_aes256_ccm_verify_fail() {
  |         let key = "7f4af6765cad1d511db07e33aaafd57646ec279db629048aa6770af24849aa0d";
  |         let nonce = "dde2a362ce81b2b6913abc3095";
  |         let aad = "404f5df97ece7431987bc098cce994fc3c063b519ffa47b0365226a0015ef695";
  | 
  | 

--[ Match #423 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let aad = "404f5df97ece7431987bc098cce994fc3c063b519ffa47b0365226a0015ef695";
  | 
  |         let pt = "7ebef26bf4ecf6f0ebb2eb860edbf900f27b75b4a6340fdb";
  |         let ct = "353022db9c568bd7183a13c40b1ba30fcc768c54264aa2cd";
  |         let tag = "2927a053c9244d3217a7ad05";
  | 
  |         let mut actual_tag = [0; 12];
  | 

--[ Match #424 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let nonce = "dde2a362ce81b2b6913abc3095";
  |         let aad = "404f5df97ece7431987bc098cce994fc3c063b519ffa47b0365226a0015ef695";
  | 
  |         let pt = "7ebef26bf4ecf6f0ebb2eb860edbf900f27b75b4a6340fdb";
  |         let ct = "353022db9c568bd7183a13c40b1ba30fcc768c54264aa2cd";
  |         let tag = "2927a053c9244d3217a7ad05";
  | 
  | 

--[ Match #425 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes256_ccm() {
  |         let key = "7f4af6765cad1d511db07e33aaafd57646ec279db629048aa6770af24849aa0d";
  |         let nonce = "dde2a362ce81b2b6913abc3095";
  |         let aad = "404f5df97ece7431987bc098cce994fc3c063b519ffa47b0365226a0015ef695";
  | 
  |         let pt = "7ebef26bf4ecf6f0ebb2eb860edbf900f27b75b4a6340fdb";
  |         let ct = "353022db9c568bd7183a13c40b1ba30fcc768c54264aa2cd";
  | 

--[ Match #426 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     #[cfg(not(boringssl))]
  |     fn test_aes256_ccm() {
  |         let key = "7f4af6765cad1d511db07e33aaafd57646ec279db629048aa6770af24849aa0d";
  |         let nonce = "dde2a362ce81b2b6913abc3095";
  |         let aad = "404f5df97ece7431987bc098cce994fc3c063b519ffa47b0365226a0015ef695";
  | 
  | 

--[ Match #427 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let nonce = "44f705d52acf27b7f17196aa9b";
  |         let aad = "2c16724296ff85e079627be3053ea95adf35722c21886baba343bd6c79b5cb57";
  | 
  |         let ct = "b4dd74e7a0cc51aea45dfb401a41d5822c96901a83247ea0";
  |         let tag = "00005f5aa6e31302a9cc2b36";
  | 
  |         let out = decrypt_aead(
  | 

--[ Match #428 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes128_ccm_verify_fail() {
  |         let key = "3ee186594f110fb788a8bf8aa8be5d4a";
  |         let nonce = "44f705d52acf27b7f17196aa9b";
  |         let aad = "2c16724296ff85e079627be3053ea95adf35722c21886baba343bd6c79b5cb57";
  | 
  |         let ct = "b4dd74e7a0cc51aea45dfb401a41d5822c96901a83247ea0";
  |         let tag = "00005f5aa6e31302a9cc2b36";
  | 

--[ Match #429 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let aad = "2c16724296ff85e079627be3053ea95adf35722c21886baba343bd6c79b5cb57";
  | 
  |         let pt = "d71864877f2578db092daba2d6a1f9f4698a9c356c7830a1";
  |         let ct = "b4dd74e7a0cc51aea45dfb401a41d5822c96901a83247ea0";
  |         let tag = "d6965f5aa6e31302a9cc2b36";
  | 
  |         let mut actual_tag = [0; 12];
  | 

--[ Match #430 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let nonce = "44f705d52acf27b7f17196aa9b";
  |         let aad = "2c16724296ff85e079627be3053ea95adf35722c21886baba343bd6c79b5cb57";
  | 
  |         let pt = "d71864877f2578db092daba2d6a1f9f4698a9c356c7830a1";
  |         let ct = "b4dd74e7a0cc51aea45dfb401a41d5822c96901a83247ea0";
  |         let tag = "d6965f5aa6e31302a9cc2b36";
  | 
  | 

--[ Match #431 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes128_ccm() {
  |         let key = "3ee186594f110fb788a8bf8aa8be5d4a";
  |         let nonce = "44f705d52acf27b7f17196aa9b";
  |         let aad = "2c16724296ff85e079627be3053ea95adf35722c21886baba343bd6c79b5cb57";
  | 
  |         let pt = "d71864877f2578db092daba2d6a1f9f4698a9c356c7830a1";
  |         let ct = "b4dd74e7a0cc51aea45dfb401a41d5822c96901a83247ea0";
  | 

--[ Match #432 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  | 8a4046ef7e556c7132";
  |         let key = "7cb66337f3d3c0fe7cb66337f3d3c0fe7cb66337f3d3c0fe";
  |         let iv = "0001020304050607";
  | 
  |         cipher_test(super::Cipher::des_ede3_cfb64(), pt, ct, key, iv);
  |     }
  | 
  |     #[test]
  |     fn test_aes128_gcm() {
  |         let key = "23dc8d23d95b6fd1251741a64f7d4f41";
  |         let iv = "f416f48ad44d9efa1179e167";
  |         let pt = "6cb9b71dd0ccd42cdf87e8e396fc581fd8e0d700e360f590593b748e105390de";
  |         let aad = "45074844c97d515c65bbe37c210a5a4b08c21c588efe5c5f73c4d9c17d34dacddc0bb6a8a53f7bf47
  |         let ct = "8ad20486778e87387efb3f2574e509951c0626816722018129e578b2787969d3";
  |         let tag = "91e1bc09";
  | 
  |         // this tag is smaller than you'd normally want, but I pulled this test from the part of
  | 

--[ Match #433 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let key = "23dc8d23d95b6fd1251741a64f7d4f41";
  |         let iv = "f416f48ad44d9efa1179e167";
  |         let pt = "6cb9b71dd0ccd42cdf87e8e396fc581fd8e0d700e360f590593b748e105390de";
  |         let aad = "45074844c97d515c65bbe37c210a5a4b08c21c588efe5c5f73c4d9c17d34dacddc0bb6a8a53f7bf47
  |         let ct = "8ad20486778e87387efb3f2574e509951c0626816722018129e578b2787969d3";
  |         let tag = "91e1bc09";
  | 
  | 

--[ Match #434 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes128_gcm() {
  |         let key = "23dc8d23d95b6fd1251741a64f7d4f41";
  |         let iv = "f416f48ad44d9efa1179e167";
  |         let pt = "6cb9b71dd0ccd42cdf87e8e396fc581fd8e0d700e360f590593b748e105390de";
  |         let aad = "45074844c97d515c65bbe37c210a5a4b08c21c588efe5c5f73c4d9c17d34dacddc0bb6a8a53f7bf47
  |         let ct = "8ad20486778e87387efb3f2574e509951c0626816722018129e578b2787969d3";
  |         let tag = "91e1bc09";
  | 
  |         // this tag is smaller than you'd normally want, but I pulled this test from the part of
  |         // the NIST test vectors that cover 4 byte tags.
  |         let mut actual_tag = [0; 4];
  |         let out = encrypt_aead(
  |             Cipher::aes_128_gcm(),
  |             &Vec::from_hex(key).unwrap(),

--[ Match #435 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_des_ede3_cfb64() {
  |         let pt = "2b1773784b5889dc788477367daa98ad";
  |         let ct = "6f2867cfefda048a4046ef7e556c7132";
  |         let key = "7cb66337f3d3c0fe7cb66337f3d3c0fe7cb66337f3d3c0fe";
  |         let iv = "0001020304050607";
  | 
  |         cipher_test(super::Cipher::des_ede3_cfb64(), pt, ct, key, iv);
  | 

--[ Match #436 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_des_ede3_cbc() {
  |         let pt = "54686973206973206120746573742e";
  |         let ct = "6f2867cfefda048a4046ef7e556c7132";
  |         let key = "7cb66337f3d3c0fe7cb66337f3d3c0fe7cb66337f3d3c0fe";
  |         let iv = "0001020304050607";
  | 
  |         cipher_test(super::Cipher::des_ede3_cbc(), pt, ct, key, iv);
  | 

--[ Match #437 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_des_ede3() {
  |         let pt = "9994f4c69d40ae4f34ff403b5cf39d4c8207ea5d3e19a5fd";
  |         let ct = "9e5c4297d60582f81071ac8ab7d0698d4c79de8b94c519858207ea5d3e19a5fd";
  |         let key = "010203040506070801020304050607080102030405060708";
  |         let iv = "5cc118306dc702e4";
  | 
  |         cipher_test(super::Cipher::des_ede3(), pt, ct, key, iv);
  | 

--[ Match #438 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     fn test_des_ede3() {
  |         let pt = "9994f4c69d40ae4f34ff403b5cf39d4c8207ea5d3e19a5fd";
  |         let ct = "9e5c4297d60582f81071ac8ab7d0698d4c79de8b94c519858207ea5d3e19a5fd";
  |         let key = "010203040506070801020304050607080102030405060708";
  |         let iv = "5cc118306dc702e4";
  | 
  | 

--[ Match #439 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  | 
  |     #[test]
  |     fn test_des_ede3() {
  |         let pt = "9994f4c69d40ae4f34ff403b5cf39d4c8207ea5d3e19a5fd";
  |         let ct = "9e5c4297d60582f81071ac8ab7d0698d4c79de8b94c519858207ea5d3e19a5fd";
  |         let key = "010203040506070801020304050607080102030405060708";
  |         let iv = "5cc118306dc702e4";
  | 

--[ Match #440 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let _provider = crate::provider::Provider::try_load(None, "legacy", true).unwrap();
  | 
  |         let pt = "37363534333231204E6F77206973207468652074696D6520666F722000";
  |         let ct = "E73214A2822139CA62B343CC5B65587310DD908D0C241B2263C2CF80DA";
  |         let key = "0123456789ABCDEFF0E1D2C3B4A59687";
  |         let iv = "FEDCBA9876543210";
  | 
  | 

--[ Match #441 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         #[cfg(ossl300)]
  |         let _provider = crate::provider::Provider::try_load(None, "legacy", true).unwrap();
  | 
  |         let pt = "37363534333231204E6F77206973207468652074696D6520666F722000";
  |         let ct = "E73214A2822139CA62B343CC5B65587310DD908D0C241B2263C2CF80DA";
  |         let key = "0123456789ABCDEFF0E1D2C3B4A59687";
  |         let iv = "FEDCBA9876543210";
  | 

--[ Match #442 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let _provider = crate::provider::Provider::try_load(None, "legacy", true).unwrap();
  | 
  |         let pt = "37363534333231204E6F77206973207468652074696D6520666F722000";
  |         let ct = "E73214A2822139CAF26ECF6D2EB9E76E3DA3DE04D1517200519D57A6C3";
  |         let key = "0123456789ABCDEFF0E1D2C3B4A59687";
  |         let iv = "FEDCBA9876543210";
  | 
  | 

--[ Match #443 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         #[cfg(ossl300)]
  |         let _provider = crate::provider::Provider::try_load(None, "legacy", true).unwrap();
  | 
  |         let pt = "37363534333231204E6F77206973207468652074696D6520666F722000";
  |         let ct = "E73214A2822139CAF26ECF6D2EB9E76E3DA3DE04D1517200519D57A6C3";
  |         let key = "0123456789ABCDEFF0E1D2C3B4A59687";
  |         let iv = "FEDCBA9876543210";
  | 

--[ Match #444 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         // https://www.schneier.com/code/vectors.txt
  | 
  |         let pt = "37363534333231204E6F77206973207468652074696D6520666F722000000000";
  |         let ct = "6B77B4D63006DEE605B156E27403979358DEB9E7154616D959F1652BD5FF92CC";
  |         let key = "0123456789ABCDEFF0E1D2C3B4A59687";
  |         let iv = "FEDCBA9876543210";
  | 
  | 

--[ Match #445 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  | 
  |         // https://www.schneier.com/code/vectors.txt
  | 
  |         let pt = "37363534333231204E6F77206973207468652074696D6520666F722000000000";
  |         let ct = "6B77B4D63006DEE605B156E27403979358DEB9E7154616D959F1652BD5FF92CC";
  |         let key = "0123456789ABCDEFF0E1D2C3B4A59687";
  |         let iv = "FEDCBA9876543210";
  | 

--[ Match #446 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  | 
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e5130c81c46a35ce411e5
  |         let ct = "dc7e84bfda79164b7ecd8486985d38604febdc6740d20b3ac88f6ad82a4fb08d71ab47a086e86eedf3
  |         let key = "603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4";
  |         let iv = "000102030405060708090a0b0c0d0e0f";
  | 
  |         cipher_test(super::Cipher::aes_256_ofb(), pt, ct, key, iv);
  | 

--[ Match #447 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         // Lifted from http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf
  | 
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e5130c81c46a35ce411e5
  |         let ct = "dc7e84bfda79164b7ecd8486985d38604febdc6740d20b3ac88f6ad82a4fb08d71ab47a086e86eedf3
  |         let key = "603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4";
  |         let iv = "000102030405060708090a0b0c0d0e0f";
  | 
  | 

--[ Match #448 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes256_ofb() {
  |         // Lifted from http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf
  | 
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e5130c81c46a35ce411e5
  |         let ct = "dc7e84bfda79164b7ecd8486985d38604febdc6740d20b3ac88f6ad82a4fb08d71ab47a086e86eedf3
  |         let key = "603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4";
  |         let iv = "000102030405060708090a0b0c0d0e0f";
  | 

--[ Match #449 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes256_cfb8() {
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d";
  |         let ct = "dc1f1a8520a64db55fcc8ac554844e889700";
  |         let key = "603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4";
  |         let iv = "000102030405060708090a0b0c0d0e0f";
  | 
  |         cipher_test(super::Cipher::aes_256_cfb8(), pt, ct, key, iv);
  | 

--[ Match #450 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes256_cfb128() {
  |         let pt = "6bc1bee22e409f96e93d7e117393172a";
  |         let ct = "dc7e84bfda79164b7ecd8486985d3860";
  |         let key = "603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4";
  |         let iv = "000102030405060708090a0b0c0d0e0f";
  | 
  |         cipher_test(super::Cipher::aes_256_cfb128(), pt, ct, key, iv);
  | 

--[ Match #451 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes256_cfb1() {
  |         let pt = "6bc1";
  |         let ct = "9029";
  |         let key = "603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4";
  |         let iv = "000102030405060708090a0b0c0d0e0f";
  | 
  |         cipher_test(super::Cipher::aes_256_cfb1(), pt, ct, key, iv);
  | 

--[ Match #452 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  | 
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e5130c81c46a35ce411e5
  |         let ct = "cdc80d6fddf18cab34c25909c99a4174fcc28b8d4c63837c09e81700c11004018d9a9aeac0f6596f55
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  |         let iv = "000102030405060708090a0b0c0d0e0f";
  | 
  |         cipher_test(super::Cipher::aes_192_ofb(), pt, ct, key, iv);
  | 

--[ Match #453 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         // Lifted from http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf
  | 
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e5130c81c46a35ce411e5
  |         let ct = "cdc80d6fddf18cab34c25909c99a4174fcc28b8d4c63837c09e81700c11004018d9a9aeac0f6596f55
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  |         let iv = "000102030405060708090a0b0c0d0e0f";
  | 
  | 

--[ Match #454 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes192_ofb() {
  |         // Lifted from http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf
  | 
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e5130c81c46a35ce411e5
  |         let ct = "cdc80d6fddf18cab34c25909c99a4174fcc28b8d4c63837c09e81700c11004018d9a9aeac0f6596f55
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  |         let iv = "000102030405060708090a0b0c0d0e0f";
  | 

--[ Match #455 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  | 
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d";
  |         let ct = "cda2521ef0a905ca44cd057cbf0d47a0678a";
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  |         let iv = "000102030405060708090a0b0c0d0e0f";
  | 
  |         cipher_test(super::Cipher::aes_192_cfb8(), pt, ct, key, iv);
  | 

--[ Match #456 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  | 
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e5130c81c46a35ce411e5
  |         let ct = "cdc80d6fddf18cab34c25909c99a417467ce7f7f81173621961a2b70171d3d7a2e1e8a1dd59b88b1c8
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  |         let iv = "000102030405060708090a0b0c0d0e0f";
  | 
  |         cipher_test(super::Cipher::aes_192_cfb128(), pt, ct, key, iv);
  | 

--[ Match #457 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         // Lifted from http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf
  | 
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e5130c81c46a35ce411e5
  |         let ct = "cdc80d6fddf18cab34c25909c99a417467ce7f7f81173621961a2b70171d3d7a2e1e8a1dd59b88b1c8
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  |         let iv = "000102030405060708090a0b0c0d0e0f";
  | 
  | 

--[ Match #458 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes192_cfb128() {
  |         // Lifted from http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf
  | 
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e5130c81c46a35ce411e5
  |         let ct = "cdc80d6fddf18cab34c25909c99a417467ce7f7f81173621961a2b70171d3d7a2e1e8a1dd59b88b1c8
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  |         let iv = "000102030405060708090a0b0c0d0e0f";
  | 

--[ Match #459 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  | 
  |         let pt = "6bc1";
  |         let ct = "9359";
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  |         let iv = "000102030405060708090a0b0c0d0e0f";
  | 
  |         cipher_test(super::Cipher::aes_192_cfb1(), pt, ct, key, iv);
  | 

--[ Match #460 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  | 
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e5130c81c46a35ce411e5
  |         let ct = "1abc932417521ca24f2b0459fe7e6e0b090339ec0aa6faefd5ccc2c6f4ce8e941e36b26bd1ebc670d1
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  |         let iv = "f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff";
  | 
  |         cipher_test(super::Cipher::aes_192_ctr(), pt, ct, key, iv);
  | 

--[ Match #461 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         // Lifted from http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf
  | 
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e5130c81c46a35ce411e5
  |         let ct = "1abc932417521ca24f2b0459fe7e6e0b090339ec0aa6faefd5ccc2c6f4ce8e941e36b26bd1ebc670d1
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  |         let iv = "f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff";
  | 
  | 

--[ Match #462 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes192_ctr() {
  |         // Lifted from http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf
  | 
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e5130c81c46a35ce411e5
  |         let ct = "1abc932417521ca24f2b0459fe7e6e0b090339ec0aa6faefd5ccc2c6f4ce8e941e36b26bd1ebc670d1
  |         let key = "8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b";
  |         let iv = "f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff";
  | 

--[ Match #463 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         // Lifted from http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf
  | 
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e5130c81c46a35ce411e5
  |         let ct = "3b3fd92eb72dad20333449f8e83cfb4a7789508d16918f03f53c52dac54ed8259740051e9c5fecf643
  |         let key = "2b7e151628aed2a6abf7158809cf4f3c";
  |         let iv = "000102030405060708090a0b0c0d0e0f";
  | 
  | 

--[ Match #464 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_aes128_ofb() {
  |         // Lifted from http://csrc.nist.gov/publications/nistpubs/800-38a/sp800-38a.pdf
  | 
  |         let pt = "6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e5130c81c46a35ce411e5
  |         let ct = "3b3fd92eb72dad20333449f8e83cfb4a7789508d16918f03f53c52dac54ed8259740051e9c5fecf643
  |         let key = "2b7e151628aed2a6abf7158809cf4f3c";
  |         let iv = "000102030405060708090a0b0c0d0e0f";
  | 

--[ Match #465 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let _provider = crate::provider::Provider::try_load(None, "legacy", true).unwrap();
  | 
  |         let pt = "0000000000000000000000000000000000000000000000000000000000000000000000000000";
  |         let ct = "A68686B04D686AA107BD8D4CAB191A3EEC0A6294BC78B60F65C25CB47BD7BB3A48EFC4D26BE4";
  |         let key = "97CD440324DA5FD1F7955C1C13B6B466";
  |         let iv = "";
  | 
  | 

--[ Match #466 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         #[cfg(ossl300)]
  |         let _provider = crate::provider::Provider::try_load(None, "legacy", true).unwrap();
  | 
  |         let pt = "0000000000000000000000000000000000000000000000000000000000000000000000000000";
  |         let ct = "A68686B04D686AA107BD8D4CAB191A3EEC0A6294BC78B60F65C25CB47BD7BB3A48EFC4D26BE4";
  |         let key = "97CD440324DA5FD1F7955C1C13B6B466";
  |         let iv = "";
  | 

--[ Match #467 of 666 ]--
   Rule Id: BD000805
       Tag: Security.Backdoor.Obfuscation.LongBinaryStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\symm.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){10,}
  | //!
  | //! assert_eq!(
  | //!     b"\xB4\xB9\xE7\x30\xD6\xD6\xF7\xDE\x77\x3F\x1C\xFF\xB3\x3E\x44\x5A\x91\xD7\x27\x62\x87\x4D\
  | //!       \xFB\x3C\x5E\xC4\x59\x72\x4A\xF4\x7C\xA1",
  | //!     &ciphertext[..]);
  | //! ```
  | //!
  | 

--[ Match #468 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkcs12.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         assert_eq!(chain.len(), 1);
  |         assert_eq!(
  |             hex::encode(chain[0].digest(MessageDigest::sha1()).unwrap()),
  |             "c0cbdf7cdd03c9773e5468e1f6d2da7d5cbb1875"
  |         );
  |     }
  | 
  | 

--[ Match #469 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkcs12.rs
   Pattern: ["'][a-z0-9]{40,}["']
  | 
  |         assert_eq!(
  |             hex::encode(parsed.cert.unwrap().digest(MessageDigest::sha1()).unwrap()),
  |             "59172d9313e84459bcff27f967e79e6e9217e584"
  |         );
  | 
  |         let chain = parsed.ca.unwrap();
  | 

--[ Match #470 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  | 
  |         assert_eq!(
  |             &out[..],
  |             hex::decode("077709362c2e32df0ddc3f0dc47bba6390b6c73bb50f9c3122ec844ad7c2b3e5")
  |                 .unwrap()
  |         );
  |     }
  | 

--[ Match #471 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         ctx.derive_init().unwrap();
  |         ctx.set_hkdf_mode(HkdfMode::EXTRACT_ONLY).unwrap();
  |         ctx.set_hkdf_md(Md::sha256()).unwrap();
  |         ctx.set_hkdf_key(&hex::decode("0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b").unwrap())
  |             .unwrap();
  |         ctx.set_hkdf_salt(&hex::decode("000102030405060708090a0b0c").unwrap())
  |             .unwrap();
  | 

--[ Match #472 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  | 
  |         assert_eq!(
  |             &out[..],
  |             hex::decode("3cb25f25faacd57a90434f64d0362f2a2d2d0a90cf1a5a4c5db02d56ecc4c5bf34007208d5b
  |                 .unwrap()
  |         );
  |     }
  | 

--[ Match #473 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         ctx.set_hkdf_mode(HkdfMode::EXPAND_ONLY).unwrap();
  |         ctx.set_hkdf_md(Md::sha256()).unwrap();
  |         ctx.set_hkdf_key(
  |             &hex::decode("077709362c2e32df0ddc3f0dc47bba6390b6c73bb50f9c3122ec844ad7c2b3e5")
  |                 .unwrap(),
  |         )
  |         .unwrap();
  | 

--[ Match #474 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  | 
  |         assert_eq!(
  |             &out[..],
  |             hex::decode("3cb25f25faacd57a90434f64d0362f2a2d2d0a90cf1a5a4c5db02d56ecc4c5bf34007208d5b
  |                 .unwrap()
  |         );
  |     }
  | 

--[ Match #475 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\pkey_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let mut ctx = PkeyCtx::new_id(Id::HKDF).unwrap();
  |         ctx.derive_init().unwrap();
  |         ctx.set_hkdf_md(Md::sha256()).unwrap();
  |         ctx.set_hkdf_key(&hex::decode("0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b").unwrap())
  |             .unwrap();
  |         ctx.set_hkdf_salt(&hex::decode("000102030405060708090a0b0c").unwrap())
  |             .unwrap();
  | 

--[ Match #476 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\dh.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |              B6184B523D1DB246C32F63078490F00EF8D647D148D47954515E2327CFEF98C582664B4C0F6CC41659",
  |         ).unwrap();
  |         let generator = BigNum::from_hex_str(
  |             "8CF83642A709A097B447997640129DA299B1A47D1EB3750BA308B0FE64F5FBD3",
  |         )
  |         .unwrap();
  |         let dh = Dh::from_params(
  | 

--[ Match #477 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\md_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |             hex::decode("185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969")
  |                 .unwrap();
  |         let world_expected =
  |             hex::decode("78ae647dc5544d227130a0682a51e30bc7777fbb6d8a8f17007463a3ecd1d524")
  |                 .unwrap();
  |         // Calculate SHA-256 digest of "Hello"
  |         let mut ctx = MdCtx::new().unwrap();
  | 

--[ Match #478 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\md_ctx.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[cfg(ossl111)]
  |     fn verify_md_ctx_reset() {
  |         let hello_expected =
  |             hex::decode("185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969")
  |                 .unwrap();
  |         let world_expected =
  |             hex::decode("78ae647dc5544d227130a0682a51e30bc7777fbb6d8a8f17007463a3ecd1d524")
  | 

--[ Match #479 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |                 b"Test Using Larger Than Block-Size Key \
  |               and Larger Than One Block-Size Data"
  |                     .to_vec(),
  |                 Vec::from_hex("e8e99d0f45237d786d6bbaa7965c7808bbff1a91").unwrap(),
  |             ),
  |         ];
  | 
  | 

--[ Match #480 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |             (
  |                 iter::repeat(0xaa_u8).take(80).collect(),
  |                 b"Test Using Larger Than Block-Size Key - Hash Key First".to_vec(),
  |                 Vec::from_hex("aa4ae5e15272d00e95705637ce8a3b55ed402112").unwrap(),
  |             ),
  |             (
  |                 iter::repeat(0xaa_u8).take(80).collect(),
  | 

--[ Match #481 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |             (
  |                 iter::repeat(0x0c_u8).take(20).collect(),
  |                 b"Test With Truncation".to_vec(),
  |                 Vec::from_hex("4c1a03424b55e07fe7f27be1d58bb9324a9a5a04").unwrap(),
  |             ),
  |             (
  |                 iter::repeat(0xaa_u8).take(80).collect(),
  | 

--[ Match #482 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |             (
  |                 Vec::from_hex("0102030405060708090a0b0c0d0e0f10111213141516171819").unwrap(),
  |                 iter::repeat(0xcd_u8).take(50).collect(),
  |                 Vec::from_hex("4c9007f4026250c6bc8414f9bf50c86c2d7235da").unwrap(),
  |             ),
  |             (
  |                 iter::repeat(0x0c_u8).take(20).collect(),
  | 

--[ Match #483 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |                 Vec::from_hex("125d7342b9ac11cd91a39af48aa17b4f63f175d3").unwrap(),
  |             ),
  |             (
  |                 Vec::from_hex("0102030405060708090a0b0c0d0e0f10111213141516171819").unwrap(),
  |                 iter::repeat(0xcd_u8).take(50).collect(),
  |                 Vec::from_hex("4c9007f4026250c6bc8414f9bf50c86c2d7235da").unwrap(),
  |             ),
  | 

--[ Match #484 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |             (
  |                 iter::repeat(0xaa_u8).take(20).collect(),
  |                 iter::repeat(0xdd_u8).take(50).collect(),
  |                 Vec::from_hex("125d7342b9ac11cd91a39af48aa17b4f63f175d3").unwrap(),
  |             ),
  |             (
  |                 Vec::from_hex("0102030405060708090a0b0c0d0e0f10111213141516171819").unwrap(),
  | 

--[ Match #485 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |             (
  |                 b"Jefe".to_vec(),
  |                 b"what do ya want for nothing?".to_vec(),
  |                 Vec::from_hex("effcdf6ae5eb2fa2d27416d5f184df9c259a7c79").unwrap(),
  |             ),
  |             (
  |                 iter::repeat(0xaa_u8).take(20).collect(),
  | 

--[ Match #486 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |             (
  |                 iter::repeat(0x0b_u8).take(20).collect(),
  |                 b"Hi There".to_vec(),
  |                 Vec::from_hex("b617318655057264e28bc0b6fb378c8ef146be00").unwrap(),
  |             ),
  |             (
  |                 b"Jefe".to_vec(),
  | 

--[ Match #487 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sign.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |                 Vec::from_hex("56be34521d144c88dbb8c733f0e8b3f6").unwrap(),
  |             ),
  |             (
  |                 Vec::from_hex("0102030405060708090a0b0c0d0e0f10111213141516171819").unwrap(),
  |                 iter::repeat(0xcd_u8).take(50).collect(),
  |                 Vec::from_hex("697eaf0aca3a3aea3a75164746ffaa79").unwrap(),
  |             ),
  | 

--[ Match #488 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\aes.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let raw_key = Vec::from_hex("000102030405060708090A0B0C0D0E0F").unwrap();
  |         let key_data = Vec::from_hex("00112233445566778899AABBCCDDEEFF").unwrap();
  |         let expected_ciphertext =
  |             Vec::from_hex("1FA68B0A8112B447AEF34BD8FB5A7B829D3E862371D2CFE5").unwrap();
  | 
  |         let enc_key = AesKey::new_encrypt(&raw_key).unwrap();
  |         let mut wrapped = [0; 24];
  | 

--[ Match #489 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\aes.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         let raw_key = "000102030405060708090A0B0C0D0E0F";
  |         let raw_iv = "000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F";
  |         let raw_pt = "0000000000000000000000000000000000000000000000000000000000000000";
  |         let raw_ct = "1A8519A6557BE652E9DA8E43DA4EF4453CF456B4CA488AA383C79C98B34797CB";
  | 
  |         let key = AesKey::new_encrypt(&Vec::from_hex(raw_key).unwrap()).unwrap();
  |         let mut iv = Vec::from_hex(raw_iv).unwrap();
  | 

--[ Match #490 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\aes.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn ige_vector_1() {
  |         let raw_key = "000102030405060708090A0B0C0D0E0F";
  |         let raw_iv = "000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F";
  |         let raw_pt = "0000000000000000000000000000000000000000000000000000000000000000";
  |         let raw_ct = "1A8519A6557BE652E9DA8E43DA4EF4453CF456B4CA488AA383C79C98B34797CB";
  | 
  |         let key = AesKey::new_encrypt(&Vec::from_hex(raw_key).unwrap()).unwrap();
  | 

--[ Match #491 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\aes.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[cfg(not(osslconf = "OPENSSL_NO_DEPRECATED_3_0"))]
  |     fn ige_vector_1() {
  |         let raw_key = "000102030405060708090A0B0C0D0E0F";
  |         let raw_iv = "000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F";
  |         let raw_pt = "0000000000000000000000000000000000000000000000000000000000000000";
  |         let raw_ct = "1A8519A6557BE652E9DA8E43DA4EF4453CF456B4CA488AA383C79C98B34797CB";
  | 
  | 

--[ Match #492 of 666 ]--
   Rule Id: BD000805
       Tag: Security.Backdoor.Obfuscation.LongBinaryStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\aes.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){10,}
  |  let key = AesKey::new_encrypt(key).unwrap();
  |  let mut output = [0u8; 16];
  |  aes_ige(plaintext, &mut output, &key, &mut iv, Mode::Encrypt);
  |  assert_eq!(output, *b"\xa6\xad\x97\x4d\x5c\xea\x1d\x36\xd2\xf3\x67\x98\x09\x07\xed\x32");
  | ```"#
  | )]
  | 
  | 

--[ Match #493 of 666 ]--
   Rule Id: BD000805
       Tag: Security.Backdoor.Obfuscation.LongBinaryStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\aes.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){10,}
  | let key = b"\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F";
  | let plaintext = b"\x12\x34\x56\x78\x90\x12\x34\x56\x12\x34\x56\x78\x90\x12\x34\x56";
  | let mut iv = *b"\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F\
  |                 \x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F";
  | 
  |  let key = AesKey::new_encrypt(key).unwrap();
  |  let mut output = [0u8; 16];
  | 

--[ Match #494 of 666 ]--
   Rule Id: BD000805
       Tag: Security.Backdoor.Obfuscation.LongBinaryStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\aes.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){10,}
  | 
  | let key = b"\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F";
  | let plaintext = b"\x12\x34\x56\x78\x90\x12\x34\x56\x12\x34\x56\x78\x90\x12\x34\x56";
  | let mut iv = *b"\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F\
  |                 \x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F";
  | 
  |  let key = AesKey::new_encrypt(key).unwrap();
  | 

--[ Match #495 of 666 ]--
   Rule Id: BD000805
       Tag: Security.Backdoor.Obfuscation.LongBinaryStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\aes.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){10,}
  | use openssl::symm::Mode;
  | 
  | let key = b"\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F";
  | let plaintext = b"\x12\x34\x56\x78\x90\x12\x34\x56\x12\x34\x56\x78\x90\x12\x34\x56";
  | let mut iv = *b"\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F\
  |                 \x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F";
  | 
  | 

--[ Match #496 of 666 ]--
   Rule Id: BD000805
       Tag: Security.Backdoor.Obfuscation.LongBinaryStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\aes.rs
   Pattern: (\\x[a-f0-9][a-f0-9]){10,}
  | use openssl::aes::{AesKey, aes_ige};
  | use openssl::symm::Mode;
  | 
  | let key = b"\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F";
  | let plaintext = b"\x12\x34\x56\x78\x90\x12\x34\x56\x12\x34\x56\x78\x90\x12\x34\x56";
  | let mut iv = *b"\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F\
  |                 \x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F";
  | 

--[ Match #497 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\hash.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_sm3() {
  |         let tests = [(
  |             "616263",
  |             "66c7f0f462eeedd9d1f2d46bdc10e4e24167c4875cf2f7a2297da02b8f4ba8e0",
  |         )];
  | 
  |         for test in tests.iter() {
  | 

--[ Match #498 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\hash.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |         #[cfg(ossl300)]
  |         let _provider = crate::provider::Provider::try_load(None, "legacy", true).unwrap();
  | 
  |         let tests = [("616263", "8eb208f7e05d987a9b044a8e98c6b087f15a0bfc")];
  | 
  |         for test in tests.iter() {
  |             hash_test(MessageDigest::ripemd160(), test);
  | 

--[ Match #499 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\hash.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_shake_256() {
  |         let tests = [(
  |             "416c6c20796f75722062617365206172652062656c6f6e6720746f207573",
  |             "4e2dfdaa75d1e049d0eaeffe28e76b17cea47b650fb8826fe48b94664326a697",
  |         )];
  | 
  |         for test in tests.iter() {
  | 

--[ Match #500 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\hash.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     fn test_shake_256() {
  |         let tests = [(
  |             "416c6c20796f75722062617365206172652062656c6f6e6720746f207573",
  |             "4e2dfdaa75d1e049d0eaeffe28e76b17cea47b650fb8826fe48b94664326a697",
  |         )];
  | 
  | 

--[ Match #501 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\hash.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     fn test_shake_128() {
  |         let tests = [(
  |             "416c6c20796f75722062617365206172652062656c6f6e6720746f207573",
  |             "49d0697ff508111d8b84f15e46daf135",
  |         )];
  | 
  | 

--[ Match #502 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\hash.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[cfg(any(ossl111, libressl380))]
  |     #[test]
  |     fn test_sha3_512() {
  |         let tests = [("416c6c20796f75722062617365206172652062656c6f6e6720746f207573",
  |             "c072288ef728cd53a029c47687960b9225893532f42b923156e37020bdc1eda753aafbf30af859d4f4c3a1\
  |             807caee3a79f8eb02dcd61589fbbdf5f40c8787a72"
  |         )];
  | 

--[ Match #503 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\hash.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[cfg(any(ossl111, libressl380))]
  |     #[test]
  |     fn test_sha3_384() {
  |         let tests = [("416c6c20796f75722062617365206172652062656c6f6e6720746f207573",
  |             "966ee786ab3482dd811bf7c8fa8db79aa1f52f6c3c369942ef14240ebd857c6ff626ec35d9e131ff64d328\
  |             ef2008ff16"
  |         )];
  | 

--[ Match #504 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\hash.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_sha3_256() {
  |         let tests = [(
  |             "416c6c20796f75722062617365206172652062656c6f6e6720746f207573",
  |             "b38e38f08bc1c0091ed4b5f060fe13e86aa4179578513ad11a6e3abba0062f61",
  |         )];
  | 
  |         for test in tests.iter() {
  | 

--[ Match #505 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\hash.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     fn test_sha3_256() {
  |         let tests = [(
  |             "416c6c20796f75722062617365206172652062656c6f6e6720746f207573",
  |             "b38e38f08bc1c0091ed4b5f060fe13e86aa4179578513ad11a6e3abba0062f61",
  |         )];
  | 
  | 

--[ Match #506 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\hash.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_sha3_224() {
  |         let tests = [(
  |             "416c6c20796f75722062617365206172652062656c6f6e6720746f207573",
  |             "1de092dd9fbcbbf450f26264f4778abd48af851f2832924554c56913",
  |         )];
  | 
  |         for test in tests.iter() {
  | 

--[ Match #507 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\hash.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     fn test_sha3_224() {
  |         let tests = [(
  |             "416c6c20796f75722062617365206172652062656c6f6e6720746f207573",
  |             "1de092dd9fbcbbf450f26264f4778abd48af851f2832924554c56913",
  |         )];
  | 
  | 

--[ Match #508 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\hash.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     fn test_sha512() {
  |         let tests = [(
  |             "737465766566696e647365766572797468696e67",
  |             "ba61d1f1af0f2dd80729f6cc900f19c0966bd38ba5c75e4471ef11b771dfe7551afab7fcbd300fdc4418f2\
  |             b07a028fcd99e7b6446a566f2d9bcd7c604a1ea801",
  |         )];
  | 

--[ Match #509 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\hash.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     fn test_sha256() {
  |         let tests = [(
  |             "616263",
  |             "ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad",
  |         )];
  | 
  |         for test in tests.iter() {
  | 

--[ Match #510 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\hash.rs
   Pattern: ["'][a-z0-9]{40,}["']
  | 
  |     #[test]
  |     fn test_sha1() {
  |         let tests = [("616263", "a9993e364706816aba3e25717850c26c9cd0d89d")];
  | 
  |         for test in tests.iter() {
  |             hash_test(MessageDigest::sha1(), test);
  | 

--[ Match #511 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "winapi-x86_64-pc-windows-gnu"
  | version = "0.4.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f"
  | 

--[ Match #512 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "winapi-i686-pc-windows-gnu"
  | version = "0.4.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6"
  | 
  | [[package]]
  | name = "winapi-x86_64-pc-windows-gnu"
  | 

--[ Match #513 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "winapi"
  | version = "0.3.4"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "04e3bd221fcbe8a271359c04f21a76db7d0c6028862d1bb5512d85e1e2eb5bb3"
  | dependencies = [
  |  "winapi-i686-pc-windows-gnu",
  |  "winapi-x86_64-pc-windows-gnu",
  | 

--[ Match #514 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "which"
  | version = "4.2.2"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "ea187a8ef279bc014ec368c27a920da2024d2a711109bfbe3440585d5cf27ad9"
  | dependencies = [
  |  "either",
  |  "lazy_static",
  | 

--[ Match #515 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "version_check"
  | version = "0.9.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "45d3d553fd9413fffe7147a20171d640eda0ad4c070acd7d0c885a21bcd2e8b7"
  | 
  | [[package]]
  | name = "which"
  | 

--[ Match #516 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "vcpkg"
  | version = "0.2.8"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "3fc439f2794e98976c88a2a2dafce96b930fe8010b0a256b3c2199a773933168"
  | 
  | [[package]]
  | name = "version_check"
  | 

--[ Match #517 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "unicode-ident"
  | version = "1.0.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "d22af068fba1eb5edcb4aea19d382b2a3deb4c8f9d475c589b6ada9e0fd493ee"
  | 
  | [[package]]
  | name = "vcpkg"
  | 

--[ Match #518 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "syn"
  | version = "2.0.16"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "a6f671d4b5ffdb8eadec19c0ae67fe2639df8684bd7bc4b83d986b8db549cf01"
  | dependencies = [
  |  "proc-macro2",
  |  "quote",
  | 

--[ Match #519 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "syn"
  | version = "1.0.109"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237"
  | dependencies = [
  |  "proc-macro2",
  |  "quote",
  | 

--[ Match #520 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "shlex"
  | version = "1.0.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "42a568c8f2cd051a4d283bd6eb0343ac214c1b0f1ac19f93e1175b2dee38c73d"
  | 
  | [[package]]
  | name = "syn"
  | 

--[ Match #521 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "rustc-hash"
  | version = "1.0.1"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "7540fc8b0c49f096ee9c961cda096467dce8084bec6bdca2fc83895fd9b28cb8"
  | dependencies = [
  |  "byteorder",
  | ]
  | 

--[ Match #522 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "regex-syntax"
  | version = "0.6.24"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "00efb87459ba4f6fb2169d20f68565555688e1250ee6825cdf6254f8b48fafb2"
  | 
  | [[package]]
  | name = "rustc-hash"
  | 

--[ Match #523 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "regex"
  | version = "1.5.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "a250501c60d8ee37c3c8cd93d95344a4653ce4999136cc9b3eb4c98770a4aea3"
  | dependencies = [
  |  "regex-syntax",
  | ]
  | 

--[ Match #524 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "quote"
  | version = "1.0.26"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "4424af4bf778aae2051a77b60283332f386554255d722233d09fbfc7e30da2fc"
  | dependencies = [
  |  "proc-macro2",
  | ]
  | 

--[ Match #525 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "proc-macro2"
  | version = "1.0.55"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "1d0dd4be24fcdcfeaa12a432d588dc59bbad6cad3510c67e74a2b6b2fc950564"
  | dependencies = [
  |  "unicode-ident",
  | ]
  | 

--[ Match #526 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "pkg-config"
  | version = "0.3.9"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "3a8b4c6b8165cd1a1cd4b9b120978131389f64bdaf456435caa41e630edba903"
  | 
  | [[package]]
  | name = "proc-macro2"
  | 

--[ Match #527 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "peeking_take_while"
  | version = "0.1.2"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "19b17cddbe7ec3f8bc800887bab5e717348c95ea2ca0b1bf0837fb964dc67099"
  | 
  | [[package]]
  | name = "pkg-config"
  | 

--[ Match #528 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "openssl-sys"
  | version = "0.9.96"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "3812c071ba60da8b5677cc12bcb1d42989a65553772897a7e0355545a819838f"
  | dependencies = [
  |  "bindgen",
  |  "bssl-sys",
  | 

--[ Match #529 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "openssl-src"
  | version = "300.1.2+3.1.1"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "94773a6131a4d91f737a31debb0b3258964a47d923ef539c8be1d496dfb5145d"
  | dependencies = [
  |  "cc",
  | ]
  | 

--[ Match #530 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "openssl-macros"
  | version = "0.1.1"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c"
  | dependencies = [
  |  "proc-macro2",
  |  "quote",
  | 

--[ Match #531 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "once_cell"
  | version = "1.5.2"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "13bd41f508810a131401606d54ac32a467c97172d74ba7662562ebba5ad07fa0"
  | 
  | [[package]]
  | name = "openssl"
  | 

--[ Match #532 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "nom"
  | version = "7.0.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "7ffd9d26838a953b4af82cbeb9f1592c6798916983959be223a7124e992742c1"
  | dependencies = [
  |  "memchr",
  |  "minimal-lexical",
  | 

--[ Match #533 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "minimal-lexical"
  | version = "0.1.2"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "6595bb28ed34f43c3fe088e48f6cfb2e033cab45f25a5384d5fdf564fbc8c4b2"
  | 
  | [[package]]
  | name = "nom"
  | 

--[ Match #534 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "memchr"
  | version = "2.0.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "e01e64d9017d18e7fc09d8e4fe0e28ff6931019e979fb8019319db7ca827f8a6"
  | dependencies = [
  |  "libc",
  | ]
  | 

--[ Match #535 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "log"
  | version = "0.4.14"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "51b9bbe6c47d51fc3e1a9b945965946b4c44142ab8792c50835a980d362c2710"
  | dependencies = [
  |  "cfg-if",
  | ]
  | 

--[ Match #536 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "libloading"
  | version = "0.6.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "2c979a19ffb457f0273965c333053f3d586bf759bf7b683fbebc37f9a9ebedc4"
  | dependencies = [
  |  "winapi",
  | ]
  | 

--[ Match #537 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "libc"
  | version = "0.2.65"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "1a31a0627fdf1f6a39ec0dd577e101440b7db22672c0901fe00a9a6fbb5c24e8"
  | 
  | [[package]]
  | name = "libloading"
  | 

--[ Match #538 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "lazycell"
  | version = "1.0.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "d33a48d0365c96081958cc663eef834975cb1e8d8bea3378513fc72bdbf11e50"
  | 
  | [[package]]
  | name = "libc"
  | 

--[ Match #539 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "lazy_static"
  | version = "1.0.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "c8f31047daa365f19be14b47c29df4f7c3b581832407daabe6ae77397619237d"
  | 
  | [[package]]
  | name = "lazycell"
  | 

--[ Match #540 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "hex"
  | version = "0.3.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "b66c2649564633dd569707d91459ac1d2deefd9fa2a1def6fffc55b4bfee0b1f"
  | 
  | [[package]]
  | name = "lazy_static"
  | 

--[ Match #541 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "glob"
  | version = "0.3.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "9b919933a397b79c37e33b77bb2aa3dc8eb6e165ad809e58ff75bc7db2e34574"
  | 
  | [[package]]
  | name = "hex"
  | 

--[ Match #542 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "foreign-types-shared"
  | version = "0.1.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "baa1839fc3c5487b5e129ea4f774e3fd84e6c4607127315521bc014a722ebc9e"
  | 
  | [[package]]
  | name = "glob"
  | 

--[ Match #543 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "foreign-types"
  | version = "0.3.1"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "a21b40436003b2a1e22483c5ed6c3d25e755b6b3120f601cc22aa57e25dc9065"
  | dependencies = [
  |  "foreign-types-shared",
  | ]
  | 

--[ Match #544 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "either"
  | version = "1.6.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "cd56b59865bce947ac5958779cfa508f6c3b9497cc762b7e24a12d11ccde2c4f"
  | 
  | [[package]]
  | name = "foreign-types"
  | 

--[ Match #545 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "clang-sys"
  | version = "1.0.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "9da1484c6a890e374ca5086062d4847e0a2c1e5eba9afa5d48c09e8eb39b2519"
  | dependencies = [
  |  "glob",
  |  "libc",
  | 

--[ Match #546 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "cfg-if"
  | version = "1.0.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd"
  | 
  | [[package]]
  | name = "clang-sys"
  | 

--[ Match #547 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "cexpr"
  | version = "0.6.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "6fac387a98bb7c37292057cffc56d62ecb629900026402633ae9160df93a8766"
  | dependencies = [
  |  "nom",
  | ]
  | 

--[ Match #548 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "cc"
  | version = "1.0.79"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "50d30906286121d95be3d479533b458f87493b30a4b5f79a607db8f5d11aa91f"
  | 
  | [[package]]
  | name = "cexpr"
  | 

--[ Match #549 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "byteorder"
  | version = "1.2.1"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "652805b7e73fada9d85e9a6682a4abd490cb52d96aeecc12e33a0de34dfd0d23"
  | 
  | [[package]]
  | name = "cc"
  | 

--[ Match #550 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "bssl-sys"
  | version = "0.1.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "312d12393c060384f2e6ed14c7b4be37b3dd90249857485613c1a91b9a1abb5c"
  | 
  | [[package]]
  | name = "byteorder"
  | 

--[ Match #551 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "bitflags"
  | version = "2.2.1"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "24a6904aef64d73cf10ab17ebace7befb918b82164785cb89907993be7f83813"
  | 
  | [[package]]
  | name = "bssl-sys"
  | 

--[ Match #552 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "bitflags"
  | version = "1.2.1"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "cf1de2fe8c75bc145a2f577add951f8134889b4795d47466a54a5c846d691693"
  | 
  | [[package]]
  | name = "bitflags"
  | 

--[ Match #553 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\Cargo.lock
   Pattern: ["'][a-z0-9]{40,}["']
  | name = "bindgen"
  | version = "0.64.0"
  | source = "registry+https://github.com/rust-lang/crates.io-index"
  | checksum = "c4243e6031260db77ede97ad86c27e501d646a27ab57b59a574f725d98ab1fb4"
  | dependencies = [
  |  "bitflags 1.2.1",
  |  "cexpr",
  | 

--[ Match #554 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sha.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     #[cfg(not(osslconf = "OPENSSL_NO_DEPRECATED_3_0"))]
  |     fn struct_256() {
  |         let expected = "ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad";
  | 
  |         let mut hasher = Sha256::new();
  |         hasher.update(b"a");
  | 

--[ Match #555 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sha.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     fn standalone_256() {
  |         let data = b"abc";
  |         let expected = "ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad";
  | 
  |         assert_eq!(hex::encode(sha256(data)), expected);
  |     }
  | 

--[ Match #556 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sha.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     #[cfg(not(osslconf = "OPENSSL_NO_DEPRECATED_3_0"))]
  |     fn struct_224() {
  |         let expected = "23097d223405d8228642a477bda255b32aadbce4bda0b3f7e36c9da7";
  | 
  |         let mut hasher = Sha224::new();
  |         hasher.update(b"a");
  | 

--[ Match #557 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sha.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     fn standalone_224() {
  |         let data = b"abc";
  |         let expected = "23097d223405d8228642a477bda255b32aadbce4bda0b3f7e36c9da7";
  | 
  |         assert_eq!(hex::encode(sha224(data)), expected);
  |     }
  | 

--[ Match #558 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sha.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     #[cfg(not(osslconf = "OPENSSL_NO_DEPRECATED_3_0"))]
  |     fn cloning_allows_incremental_hashing() {
  |         let expected = "a9993e364706816aba3e25717850c26c9cd0d89d";
  | 
  |         let mut hasher = Sha1::new();
  |         hasher.update(b"a");
  | 

--[ Match #559 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sha.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     #[cfg(not(osslconf = "OPENSSL_NO_DEPRECATED_3_0"))]
  |     fn struct_1() {
  |         let expected = "a9993e364706816aba3e25717850c26c9cd0d89d";
  | 
  |         let mut hasher = Sha1::new();
  |         hasher.update(b"a");
  | 

--[ Match #560 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\sha.rs
   Pattern: ["'][a-z0-9]{40,}["']
  |     #[test]
  |     fn standalone_1() {
  |         let data = b"abc";
  |         let expected = "a9993e364706816aba3e25717850c26c9cd0d89d";
  | 
  |         assert_eq!(hex::encode(sha1(data)), expected);
  |     }
  | 

--[ Match #561 of 666 ]--
   Rule Id: BD000804
       Tag: Security.Backdoor.Obfuscation.LongStrings
  Severity: Moderate, Confidence: Medium
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\.cargo_vcs_info.json
   Pattern: ["'][a-z0-9]{40,}["']
  | {
  |   "git": {
  |     "sha1": "8f4b97ae06f5975e02052b5a4d4f63496a1ec760"
  |   },
  |   "path_in_vcs": "openssl"
  | }

--[ Match #562 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: .hostname
  |     assert!(connector
  |         .configure()
  |         .unwrap()
  |         .verify_hostname(false)
  |         .connect("fizzbuzz.com", s)
  |         .is_err());
  | }
  | 

--[ Match #563 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: .hostname
  | }
  | 
  | #[test]
  | fn connector_no_hostname_still_verifies() {
  |     let mut server = Server::builder();
  |     server.should_error();
  |     let server = server.build();
  | 

--[ Match #564 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: .hostname
  |         .build()
  |         .configure()
  |         .unwrap()
  |         .verify_hostname(false)
  |         .connect("bogus.com", s)
  |         .unwrap();
  |     s.read_exact(&mut [0]).unwrap();
  | 

--[ Match #565 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: .hostname
  | }
  | 
  | #[test]
  | fn connector_invalid_no_hostname_verification() {
  |     let server = Server::builder().build();
  | 
  |     let mut connector = SslConnector::builder(SslMethod::tls()).unwrap();
  | 

--[ Match #566 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: .hostname
  | }
  | 
  | #[test]
  | fn connector_invalid_hostname() {
  |     let mut server = Server::builder();
  |     server.should_error();
  |     let server = server.build();
  | 

--[ Match #567 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: .hostname
  | }
  | 
  | #[test]
  | fn connector_valid_hostname() {
  |     let server = Server::builder().build();
  | 
  |     let mut connector = SslConnector::builder(SslMethod::tls()).unwrap();
  | 

--[ Match #568 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: .hostname
  | 
  | #[test]
  | #[cfg(ossl102)]
  | fn verify_invalid_hostname() {
  |     let mut server = Server::builder();
  |     server.should_error();
  |     let server = server.build();
  | 

--[ Match #569 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: .hostname
  | 
  | #[test]
  | #[cfg(ossl102)]
  | fn verify_valid_hostname() {
  |     let server = Server::builder().build();
  | 
  |     let mut client = server.client();
  | 

--[ Match #570 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\test\mod.rs
   Pattern: .hostname
  |         Err(_) => return,
  |     };
  |     let mut ssl = Ssl::new(&ctx).unwrap();
  |     ssl.set_hostname("google.com").unwrap();
  |     let mut socket = ssl.connect(s).unwrap();
  | 
  |     socket.write_all(b"GET / HTTP/1.0\r\n\r\n").unwrap();
  | 

--[ Match #571 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\verify.rs
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  |     pub fn set_ip(&mut self, ip: IpAddr) -> Result<(), ErrorStack> {
  |         unsafe {
  |             let mut buf = [0; 16];
  |             let len = match ip {
  |                 IpAddr::V4(addr) => {
  |                     buf[..4].copy_from_slice(&addr.octets());
  |                     4
  | 

--[ Match #572 of 666 ]--
   Rule Id: BD000700
       Tag: Security.Backdoor.DataExfiltration
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\tests.rs
   Pattern: \.(request|post|get)\(
  |     let dp_gns = dp_nm.fullname().unwrap();
  |     let dp_gn = dp_gns.get(0).unwrap();
  |     assert_eq!(dp_gn.uri().unwrap(), "http://example.com/crl2.pem");
  |     assert!(dps.get(2).is_none())
  | }
  | 
  | #[test]
  | 

--[ Match #573 of 666 ]--
   Rule Id: BD000700
       Tag: Security.Backdoor.DataExfiltration
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\tests.rs
   Pattern: \.(request|post|get)\(
  |     let dp = dps.get(1).unwrap();
  |     let dp_nm = dp.distpoint().unwrap();
  |     let dp_gns = dp_nm.fullname().unwrap();
  |     let dp_gn = dp_gns.get(0).unwrap();
  |     assert_eq!(dp_gn.uri().unwrap(), "http://example.com/crl2.pem");
  |     assert!(dps.get(2).is_none())
  | }
  | 

--[ Match #574 of 666 ]--
   Rule Id: BD000700
       Tag: Security.Backdoor.DataExfiltration
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\tests.rs
   Pattern: \.(request|post|get)\(
  |     let dp_gn = dp_gns.get(0).unwrap();
  |     assert_eq!(dp_gn.uri().unwrap(), "http://example.com/crl.pem");
  | 
  |     let dp = dps.get(1).unwrap();
  |     let dp_nm = dp.distpoint().unwrap();
  |     let dp_gns = dp_nm.fullname().unwrap();
  |     let dp_gn = dp_gns.get(0).unwrap();
  | 

--[ Match #575 of 666 ]--
   Rule Id: BD000700
       Tag: Security.Backdoor.DataExfiltration
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\tests.rs
   Pattern: \.(request|post|get)\(
  |     let dp = dps.get(0).unwrap();
  |     let dp_nm = dp.distpoint().unwrap();
  |     let dp_gns = dp_nm.fullname().unwrap();
  |     let dp_gn = dp_gns.get(0).unwrap();
  |     assert_eq!(dp_gn.uri().unwrap(), "http://example.com/crl.pem");
  | 
  |     let dp = dps.get(1).unwrap();
  | 

--[ Match #576 of 666 ]--
   Rule Id: BD000700
       Tag: Security.Backdoor.DataExfiltration
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\tests.rs
   Pattern: \.(request|post|get)\(
  |     let cert = X509::from_pem(cert).unwrap();
  | 
  |     let dps = cert.crl_distribution_points().unwrap();
  |     let dp = dps.get(0).unwrap();
  |     let dp_nm = dp.distpoint().unwrap();
  |     let dp_gns = dp_nm.fullname().unwrap();
  |     let dp_gn = dp_gns.get(0).unwrap();
  | 

--[ Match #577 of 666 ]--
   Rule Id: BD000600
       Tag: Security.Backdoor.LOLBAS.Windows
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: \s(advpack\.dll|appvlp|at|atbroker|bash|bginfo|bitsadmin|cdb|certutil|cl_invocation\.ps1|cl_mutexverifiers\.ps1|cmd|cmdkey|cmstp|comsvcs\.dll|control|csc|cscript|csi|devtoolslauncher|dfsvc|diskshadow|dnscmd|dnx|dotnet|dxcap|esentutl|eventvwr|excel|expand|extexport|extrac32|findstr|forfiles|ftp|gfxdownloadwrapper|gpscript|hh|ie4uinit|ieadvpack\.dll|ieaframe\.dll|ic|infdefaultinstall|installutil|jsc|makecab|manage-bde\.wsf|mavinject|mftrace|microsoft\.workflow\.compiler|mmc|msbuild|msconfig|msdeploy|msdt|mshta|mshtml\.dll|msc|msxsl|netsh|odbcconf|pcalua|pcwrun|pcwutl\.dll|pester\.bat|powerpnt|presentationhost|pubprn\.vbs|rcsi|reg|regasm|regedit|register-cimprovider|regsvcs|regsvr32|rpcping|rundll32|runonce|runscripthelper|sc|schtasks|scriptrunner|setupapi\.dll|shdocvw\.dll|shell32\.dll|slmgr\.vbs|sqldumper|sqlps|sqltoolsps|squirrel|syncappvpublishingserver|syncappvpublishingserver\.vbs|syssetup\.dll|te|tracker|tttracer|update|url\.dll|verclsid|vsjitdebugger|wab|winrm\.vbs|winword|wmic|wscript|wsl|wsreset|xwizard|zipfldr\.dll)\s
  |     }
  | 
  |     #[test]
  |     #[should_panic(expected = "Output buffer size should be at least 17 bytes.")]
  |     fn full_block_updates_3des() {
  |         output_buffer_too_small(Cipher::des_ede3_cbc());
  |     }
  | 

--[ Match #578 of 666 ]--
   Rule Id: BD000600
       Tag: Security.Backdoor.LOLBAS.Windows
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: \s(advpack\.dll|appvlp|at|atbroker|bash|bginfo|bitsadmin|cdb|certutil|cl_invocation\.ps1|cl_mutexverifiers\.ps1|cmd|cmdkey|cmstp|comsvcs\.dll|control|csc|cscript|csi|devtoolslauncher|dfsvc|diskshadow|dnscmd|dnx|dotnet|dxcap|esentutl|eventvwr|excel|expand|extexport|extrac32|findstr|forfiles|ftp|gfxdownloadwrapper|gpscript|hh|ie4uinit|ieadvpack\.dll|ieaframe\.dll|ic|infdefaultinstall|installutil|jsc|makecab|manage-bde\.wsf|mavinject|mftrace|microsoft\.workflow\.compiler|mmc|msbuild|msconfig|msdeploy|msdt|mshta|mshtml\.dll|msc|msxsl|netsh|odbcconf|pcalua|pcwrun|pcwutl\.dll|pester\.bat|powerpnt|presentationhost|pubprn\.vbs|rcsi|reg|regasm|regedit|register-cimprovider|regsvcs|regsvr32|rpcping|rundll32|runonce|runscripthelper|sc|schtasks|scriptrunner|setupapi\.dll|shdocvw\.dll|shell32\.dll|slmgr\.vbs|sqldumper|sqlps|sqltoolsps|squirrel|syncappvpublishingserver|syncappvpublishingserver\.vbs|syssetup\.dll|te|tracker|tttracer|update|url\.dll|verclsid|vsjitdebugger|wab|winrm\.vbs|winword|wmic|wscript|wsl|wsreset|xwizard|zipfldr\.dll)\s
  |     }
  | 
  |     #[test]
  |     #[should_panic(expected = "Output buffer size should be at least 33 bytes.")]
  |     fn full_block_updates_aes_256() {
  |         output_buffer_too_small(Cipher::aes_256_cbc());
  |     }
  | 

--[ Match #579 of 666 ]--
   Rule Id: BD000600
       Tag: Security.Backdoor.LOLBAS.Windows
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: \s(advpack\.dll|appvlp|at|atbroker|bash|bginfo|bitsadmin|cdb|certutil|cl_invocation\.ps1|cl_mutexverifiers\.ps1|cmd|cmdkey|cmstp|comsvcs\.dll|control|csc|cscript|csi|devtoolslauncher|dfsvc|diskshadow|dnscmd|dnx|dotnet|dxcap|esentutl|eventvwr|excel|expand|extexport|extrac32|findstr|forfiles|ftp|gfxdownloadwrapper|gpscript|hh|ie4uinit|ieadvpack\.dll|ieaframe\.dll|ic|infdefaultinstall|installutil|jsc|makecab|manage-bde\.wsf|mavinject|mftrace|microsoft\.workflow\.compiler|mmc|msbuild|msconfig|msdeploy|msdt|mshta|mshtml\.dll|msc|msxsl|netsh|odbcconf|pcalua|pcwrun|pcwutl\.dll|pester\.bat|powerpnt|presentationhost|pubprn\.vbs|rcsi|reg|regasm|regedit|register-cimprovider|regsvcs|regsvr32|rpcping|rundll32|runonce|runscripthelper|sc|schtasks|scriptrunner|setupapi\.dll|shdocvw\.dll|shell32\.dll|slmgr\.vbs|sqldumper|sqlps|sqltoolsps|squirrel|syncappvpublishingserver|syncappvpublishingserver\.vbs|syssetup\.dll|te|tracker|tttracer|update|url\.dll|verclsid|vsjitdebugger|wab|winrm\.vbs|winword|wmic|wscript|wsl|wsreset|xwizard|zipfldr\.dll)\s
  |     }
  | 
  |     #[test]
  |     #[should_panic(expected = "Output buffer size should be at least 33 bytes.")]
  |     fn full_block_updates_aes_128() {
  |         output_buffer_too_small(Cipher::aes_128_cbc());
  |     }
  | 

--[ Match #580 of 666 ]--
   Rule Id: BD000600
       Tag: Security.Backdoor.LOLBAS.Windows
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: \s(advpack\.dll|appvlp|at|atbroker|bash|bginfo|bitsadmin|cdb|certutil|cl_invocation\.ps1|cl_mutexverifiers\.ps1|cmd|cmdkey|cmstp|comsvcs\.dll|control|csc|cscript|csi|devtoolslauncher|dfsvc|diskshadow|dnscmd|dnx|dotnet|dxcap|esentutl|eventvwr|excel|expand|extexport|extrac32|findstr|forfiles|ftp|gfxdownloadwrapper|gpscript|hh|ie4uinit|ieadvpack\.dll|ieaframe\.dll|ic|infdefaultinstall|installutil|jsc|makecab|manage-bde\.wsf|mavinject|mftrace|microsoft\.workflow\.compiler|mmc|msbuild|msconfig|msdeploy|msdt|mshta|mshtml\.dll|msc|msxsl|netsh|odbcconf|pcalua|pcwrun|pcwutl\.dll|pester\.bat|powerpnt|presentationhost|pubprn\.vbs|rcsi|reg|regasm|regedit|register-cimprovider|regsvcs|regsvr32|rpcping|rundll32|runonce|runscripthelper|sc|schtasks|scriptrunner|setupapi\.dll|shdocvw\.dll|shell32\.dll|slmgr\.vbs|sqldumper|sqlps|sqltoolsps|squirrel|syncappvpublishingserver|syncappvpublishingserver\.vbs|syssetup\.dll|te|tracker|tttracer|update|url\.dll|verclsid|vsjitdebugger|wab|winrm\.vbs|winword|wmic|wscript|wsl|wsreset|xwizard|zipfldr\.dll)\s
  |         if block_size != 1 {
  |             assert!(
  |                 data.len() >= inlen + block_size,
  |                 "Output buffer size must be at least {} bytes.",
  |                 inlen + block_size
  |             );
  |         }
  | 

--[ Match #581 of 666 ]--
   Rule Id: BD000600
       Tag: Security.Backdoor.LOLBAS.Windows
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\cipher_ctx.rs
   Pattern: \s(advpack\.dll|appvlp|at|atbroker|bash|bginfo|bitsadmin|cdb|certutil|cl_invocation\.ps1|cl_mutexverifiers\.ps1|cmd|cmdkey|cmstp|comsvcs\.dll|control|csc|cscript|csi|devtoolslauncher|dfsvc|diskshadow|dnscmd|dnx|dotnet|dxcap|esentutl|eventvwr|excel|expand|extexport|extrac32|findstr|forfiles|ftp|gfxdownloadwrapper|gpscript|hh|ie4uinit|ieadvpack\.dll|ieaframe\.dll|ic|infdefaultinstall|installutil|jsc|makecab|manage-bde\.wsf|mavinject|mftrace|microsoft\.workflow\.compiler|mmc|msbuild|msconfig|msdeploy|msdt|mshta|mshtml\.dll|msc|msxsl|netsh|odbcconf|pcalua|pcwrun|pcwutl\.dll|pester\.bat|powerpnt|presentationhost|pubprn\.vbs|rcsi|reg|regasm|regedit|register-cimprovider|regsvcs|regsvr32|rpcping|rundll32|runonce|runscripthelper|sc|schtasks|scriptrunner|setupapi\.dll|shdocvw\.dll|shell32\.dll|slmgr\.vbs|sqldumper|sqlps|sqltoolsps|squirrel|syncappvpublishingserver|syncappvpublishingserver\.vbs|syssetup\.dll|te|tracker|tttracer|update|url\.dll|verclsid|vsjitdebugger|wab|winrm\.vbs|winword|wmic|wscript|wsl|wsreset|xwizard|zipfldr\.dll)\s
  |             let min_output_size = input.len() + block_size;
  |             assert!(
  |                 output.len() >= min_output_size,
  |                 "Output buffer size should be at least {} bytes.",
  |                 min_output_size
  |             );
  |         }
  | 

--[ Match #582 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\x509\mod.rs
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  |     }
  | 
  |     pub(crate) fn new_ip(ip: IpAddr) -> Result<GeneralName, ErrorStack> {
  |         match ip {
  |             IpAddr::V4(addr) => unsafe {
  |                 GeneralName::new(ffi::GEN_IPADD, Asn1Type::OCTET_STRING, &addr.octets())
  |             },
  | 

--[ Match #583 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: .hostname
  |     /// It has no effect for a server-side connection.
  |     #[corresponds(SSL_set_tlsext_host_name)]
  |     pub fn set_hostname(&mut self, hostname: &str) -> Result<(), ErrorStack> {
  |         let cstr = CString::new(hostname).unwrap();
  |         unsafe {
  |             cvt(ffi::SSL_set_tlsext_host_name(self.as_ptr(), cstr.as_ptr() as *mut _) as c_int)
  |                 .map(|_| ())
  | 

--[ Match #584 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: .hostname
  |     ///
  |     /// It has no effect for a server-side connection.
  |     #[corresponds(SSL_set_tlsext_host_name)]
  |     pub fn set_hostname(&mut self, hostname: &str) -> Result<(), ErrorStack> {
  |         let cstr = CString::new(hostname).unwrap();
  |         unsafe {
  |             cvt(ffi::SSL_set_tlsext_host_name(self.as_ptr(), cstr.as_ptr() as *mut _) as c_int)
  | 

--[ Match #585 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: .hostname
  |     ///
  |     /// It has no effect for a server-side connection.
  |     #[corresponds(SSL_set_tlsext_host_name)]
  |     pub fn set_hostname(&mut self, hostname: &str) -> Result<(), ErrorStack> {
  |         let cstr = CString::new(hostname).unwrap();
  |         unsafe {
  |             cvt(ffi::SSL_set_tlsext_host_name(self.as_ptr(), cstr.as_ptr() as *mut _) as c_int)
  | 

--[ Match #586 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  |     /// Requires OpenSSL 1.0.1 or 1.0.2.
  |     #[corresponds(SSL_set_tmp_ecdh_callback)]
  |     #[cfg(all(ossl101, not(ossl110)))]
  |     #[deprecated(note = "this function leaks memory and does not exist on newer OpenSSL versions")]
  |     pub fn set_tmp_ecdh_callback<F>(&mut self, callback: F)
  |     where
  |         F: Fn(&mut SslRef, bool, u32) -> Result<EcKey<Params>, ErrorStack> + 'static + Sync + Send,
  | 

--[ Match #587 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\mod.rs
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  |     /// Requires OpenSSL 1.0.1 or 1.0.2.
  |     #[corresponds(SSL_CTX_set_tmp_ecdh_callback)]
  |     #[cfg(all(ossl101, not(ossl110)))]
  |     #[deprecated(note = "this function leaks memory and does not exist on newer OpenSSL versions")]
  |     pub fn set_tmp_ecdh_callback<F>(&mut self, callback: F)
  |     where
  |         F: Fn(&mut SslRef, bool, u32) -> Result<EcKey<Params>, ErrorStack> + 'static + Sync + Send,
  | 

--[ Match #588 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\asn1.rs
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  |         unsafe {
  |             let s = CString::new(s).unwrap();
  | 
  |             let time = Asn1Time::new()?;
  |             cvt(ffi::ASN1_TIME_set_string_X509(time.as_ptr(), s.as_ptr()))?;
  | 
  |             Ok(time)
  | 

--[ Match #589 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\asn1.rs
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  |         unsafe {
  |             let s = CString::new(s).unwrap();
  | 
  |             let time = Asn1Time::new()?;
  |             cvt(ffi::ASN1_TIME_set_string(time.as_ptr(), s.as_ptr()))?;
  | 
  |             Ok(time)
  | 

--[ Match #590 of 666 ]--
   Rule Id: BD000700
       Tag: Security.Backdoor.DataExfiltration
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\stack.rs
   Pattern: \.(request|post|get)\(
  |     type Output = T::Ref;
  | 
  |     fn index(&self, index: usize) -> &T::Ref {
  |         self.get(index).unwrap()
  |     }
  | }
  | 
  | 

--[ Match #591 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: .hostname
  |     has been removed in favor of new methods which provide more control. The
  |     `ConnectConfiguration::use_server_name_indication` method controls the use of Server Name
  |     Indication (SNI), and the `ConnectConfiguration::verify_hostname` method controls the use of
  |     hostname verification. These can be controlled independently, and if both are disabled, the
  |     domain argument to `ConnectConfiguration::connect` is ignored.
  | * Shared secret derivation is now handled by the new `derive::Deriver` type rather than
  |     `pkey::PKeyContext`, which has been removed.
  | 

--[ Match #592 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: .hostname
  | * `SslConnector::danger_connect_without_providing_domain_for_certificate_verification_and_server_nam
  |     has been removed in favor of new methods which provide more control. The
  |     `ConnectConfiguration::use_server_name_indication` method controls the use of Server Name
  |     Indication (SNI), and the `ConnectConfiguration::verify_hostname` method controls the use of
  |     hostname verification. These can be controlled independently, and if both are disabled, the
  |     domain argument to `ConnectConfiguration::connect` is ignored.
  | * Shared secret derivation is now handled by the new `derive::Deriver` type rather than
  | 

--[ Match #593 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: .hostname
  | ### Added
  | 
  | * Added `ConnectConfiguration::set_use_server_name_indication` and
  |     `ConnectConfiguration::set_verify_hostname` for use in contexts where you don't have ownership
  |     of the `ConnectConfiguration`.
  | 
  | ## [v0.10.1] - 2018-01-10
  | 

--[ Match #594 of 666 ]--
   Rule Id: BD000600
       Tag: Security.Backdoor.LOLBAS.Windows
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(advpack\.dll|appvlp|at|atbroker|bash|bginfo|bitsadmin|cdb|certutil|cl_invocation\.ps1|cl_mutexverifiers\.ps1|cmd|cmdkey|cmstp|comsvcs\.dll|control|csc|cscript|csi|devtoolslauncher|dfsvc|diskshadow|dnscmd|dnx|dotnet|dxcap|esentutl|eventvwr|excel|expand|extexport|extrac32|findstr|forfiles|ftp|gfxdownloadwrapper|gpscript|hh|ie4uinit|ieadvpack\.dll|ieaframe\.dll|ic|infdefaultinstall|installutil|jsc|makecab|manage-bde\.wsf|mavinject|mftrace|microsoft\.workflow\.compiler|mmc|msbuild|msconfig|msdeploy|msdt|mshta|mshtml\.dll|msc|msxsl|netsh|odbcconf|pcalua|pcwrun|pcwutl\.dll|pester\.bat|powerpnt|presentationhost|pubprn\.vbs|rcsi|reg|regasm|regedit|register-cimprovider|regsvcs|regsvr32|rpcping|rundll32|runonce|runscripthelper|sc|schtasks|scriptrunner|setupapi\.dll|shdocvw\.dll|shell32\.dll|slmgr\.vbs|sqldumper|sqlps|sqltoolsps|squirrel|syncappvpublishingserver|syncappvpublishingserver\.vbs|syssetup\.dll|te|tracker|tttracer|update|url\.dll|verclsid|vsjitdebugger|wab|winrm\.vbs|winword|wmic|wscript|wsl|wsreset|xwizard|zipfldr\.dll)\s
  | 
  | ## Older
  | 
  | Look at the [release tags] for information about older releases.
  | 
  | [Unreleased]: https://github.com/sfackler/rust-openssl/compare/openssl-v0.10.60...master
  | [v0.10.60]: https://github.com/sfackler/rust-openssl/compare/openssl-v0.10.59...openssl-v0.10.60
  | 

--[ Match #595 of 666 ]--
   Rule Id: BD000600
       Tag: Security.Backdoor.LOLBAS.Windows
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(advpack\.dll|appvlp|at|atbroker|bash|bginfo|bitsadmin|cdb|certutil|cl_invocation\.ps1|cl_mutexverifiers\.ps1|cmd|cmdkey|cmstp|comsvcs\.dll|control|csc|cscript|csi|devtoolslauncher|dfsvc|diskshadow|dnscmd|dnx|dotnet|dxcap|esentutl|eventvwr|excel|expand|extexport|extrac32|findstr|forfiles|ftp|gfxdownloadwrapper|gpscript|hh|ie4uinit|ieadvpack\.dll|ieaframe\.dll|ic|infdefaultinstall|installutil|jsc|makecab|manage-bde\.wsf|mavinject|mftrace|microsoft\.workflow\.compiler|mmc|msbuild|msconfig|msdeploy|msdt|mshta|mshtml\.dll|msc|msxsl|netsh|odbcconf|pcalua|pcwrun|pcwutl\.dll|pester\.bat|powerpnt|presentationhost|pubprn\.vbs|rcsi|reg|regasm|regedit|register-cimprovider|regsvcs|regsvr32|rpcping|rundll32|runonce|runscripthelper|sc|schtasks|scriptrunner|setupapi\.dll|shdocvw\.dll|shell32\.dll|slmgr\.vbs|sqldumper|sqlps|sqltoolsps|squirrel|syncappvpublishingserver|syncappvpublishingserver\.vbs|syssetup\.dll|te|tracker|tttracer|update|url\.dll|verclsid|vsjitdebugger|wab|winrm\.vbs|winword|wmic|wscript|wsl|wsreset|xwizard|zipfldr\.dll)\s
  | 
  |     The `pkey` module contains new tag types named `Params`, `Public`, and `Private`, and the
  |     `Dh`, `Dsa`, `EcKey`, `Rsa`, and `PKey` have a type parameter set to one of those values. This
  |     allows the `Signer` constructor to indicate that it requires a private key at compile time for
  |     example. Previously, `Signer` would simply segfault if provided a key without private
  |     components.
  | * ALPN support has been changed to more directly model OpenSSL's own APIs. Instead of a single
  | 

--[ Match #596 of 666 ]--
   Rule Id: BD000600
       Tag: Security.Backdoor.LOLBAS.Windows
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(advpack\.dll|appvlp|at|atbroker|bash|bginfo|bitsadmin|cdb|certutil|cl_invocation\.ps1|cl_mutexverifiers\.ps1|cmd|cmdkey|cmstp|comsvcs\.dll|control|csc|cscript|csi|devtoolslauncher|dfsvc|diskshadow|dnscmd|dnx|dotnet|dxcap|esentutl|eventvwr|excel|expand|extexport|extrac32|findstr|forfiles|ftp|gfxdownloadwrapper|gpscript|hh|ie4uinit|ieadvpack\.dll|ieaframe\.dll|ic|infdefaultinstall|installutil|jsc|makecab|manage-bde\.wsf|mavinject|mftrace|microsoft\.workflow\.compiler|mmc|msbuild|msconfig|msdeploy|msdt|mshta|mshtml\.dll|msc|msxsl|netsh|odbcconf|pcalua|pcwrun|pcwutl\.dll|pester\.bat|powerpnt|presentationhost|pubprn\.vbs|rcsi|reg|regasm|regedit|register-cimprovider|regsvcs|regsvr32|rpcping|rundll32|runonce|runscripthelper|sc|schtasks|scriptrunner|setupapi\.dll|shdocvw\.dll|shell32\.dll|slmgr\.vbs|sqldumper|sqlps|sqltoolsps|squirrel|syncappvpublishingserver|syncappvpublishingserver\.vbs|syssetup\.dll|te|tracker|tttracer|update|url\.dll|verclsid|vsjitdebugger|wab|winrm\.vbs|winword|wmic|wscript|wsl|wsreset|xwizard|zipfldr\.dll)\s
  | ### Added
  | 
  | * Added `X509Req::public_key` and `X509Req::extensions`.
  | * Added `RsaPrivateKeyBuilder` to allow control over initialization of optional components of an RSA
  |     private key.
  | * Added DER encode/decode support to `SslSession`.
  | * openssl-sys now provides the `DEP_OPENSSL_VERSION_NUMBER` and
  | 

--[ Match #597 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | 
  |     The `pkey` module contains new tag types named `Params`, `Public`, and `Private`, and the
  |     `Dh`, `Dsa`, `EcKey`, `Rsa`, and `PKey` have a type parameter set to one of those values. This
  |     allows the `Signer` constructor to indicate that it requires a private key at compile time for
  |     example. Previously, `Signer` would simply segfault if provided a key without private
  |     components.
  | * ALPN support has been changed to more directly model OpenSSL's own APIs. Instead of a single
  | 

--[ Match #598 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | 
  | ### Compatibility
  | 
  | * openssl 0.10 still uses openssl-sys 0.9, so openssl 0.9 and 0.10 can coexist without issue.
  | 
  | ### Added
  | 
  | 

--[ Match #599 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | 
  | ### Compatibility
  | 
  | * openssl 0.10 still uses openssl-sys 0.9, so openssl 0.9 and 0.10 can coexist without issue.
  | 
  | ### Added
  | 
  | 

--[ Match #600 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | 
  | ### Added
  | 
  | * OpenSSL is now automatically detected on FreeBSD systems.
  | * Added `GeneralName` accessors for `rfc822Name` and `uri` variants.
  | * Added DES-EDE3 support.
  | 
  | 

--[ Match #601 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | 
  | ### Added
  | 
  | * Added OpenSSL 1.1.1 support.
  | * Added `Rsa::public_key_from_pem_pkcs1`.
  | * Added `SslOptions::NO_TLSV1_3`. (OpenSSL 1.1.1 only)
  | * Added `SslVersion`.
  | 

--[ Match #602 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | ### Changed
  | 
  | * The Cargo features previously used to gate access to version-specific OpenSSL APIs have been
  |     removed. Those APIs will be available automatically when building against an appropriate OpenSSL
  |     version.
  | * Fixed `PKey::private_key_from_der` to return a `PKey<Private>` rather than a `PKey<Public>`. This
  |     is technically a breaking change but the function was pretty useless previously.
  | 

--[ Match #603 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | 
  | ### Changed
  | 
  | * The Cargo features previously used to gate access to version-specific OpenSSL APIs have been
  |     removed. Those APIs will be available automatically when building against an appropriate OpenSSL
  |     version.
  | * Fixed `PKey::private_key_from_der` to return a `PKey<Private>` rather than a `PKey<Public>`. This
  | 

--[ Match #604 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | * Added DER encode/decode support to `SslSession`.
  | * openssl-sys now provides the `DEP_OPENSSL_VERSION_NUMBER` and
  |     `DEP_OPENSSL_LIBRESSL_VERSION_NUMBER` environment variables to downstream build scripts which
  |     contains the hex-encoded version number of the OpenSSL or LibreSSL distribution being built
  |     against. The other variables are deprecated.
  | 
  | ## [v0.10.6] - 2018-03-05
  | 

--[ Match #605 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | 
  | ### Fixed
  | 
  | * `openssl-sys` will now detect Homebrew-installed OpenSSL when installed to a non-default
  |     directory.
  | * The `X509_V_ERR_INVALID_CALL`, `X509_V_ERR_STORE_LOOKUP`, and
  |     `X509_V_ERR_PROXY_SUBJECT_NAME_VIOLATION` constants in `openssl-sys` are now only present when
  | 

--[ Match #606 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | 
  | ### Changed
  | 
  | * The OpenSSL version used with the `vendored` feature has been upgraded from 1.1.0 to 1.1.1.
  | 
  | ## [v0.10.13] - 2018-10-14
  | 
  | 

--[ Match #607 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | 
  | ### Added
  | 
  | * The openssl-sys build script now logs the values of environment variables.
  | * Added `ERR_PACK` to openssl-sys.
  | * The `ERR_*` functions in openssl-sys are const functions when building against newer Rust versions
  | * Implemented `Clone` for `Dsa`.
  | 

--[ Match #608 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | 
  | ### Fixed
  | 
  | * Worked around an OpenSSL 1.0.x bug triggered by code calling `SSL_set_app_data`.
  | 
  | ### Added
  | 
  | 

--[ Match #609 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | 
  | ### Fixed
  | 
  | * Fixed a memory leak in `EcdsaSig::from_private_components` when using OpenSSL 1.0.x.
  | 
  | ### Added
  | 
  | 

--[ Match #610 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | 
  | ### Added
  | 
  | * Added support for OpenSSL 3.x.x.
  | * Added `SslStream::peek`.
  | 
  | ## [v0.10.34] - 2021-04-28
  | 

--[ Match #611 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | 
  | ### Fixed
  | 
  | * Fixed linkage against OpenSSL distributions built with `no-chacha`.
  | 
  | ### Added
  | 
  | 

--[ Match #612 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | 
  | ### Fixed
  | 
  | * Fixed a use-after-free in `Error::function` and `Error::file` with OpenSSL 3.x.
  | 
  | ### Added
  | 
  | 

--[ Match #613 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | ### Fixed
  | 
  | * Fixed a potential null-pointer deref when parsing a PKCS#12 archive with no identity.
  | * Fixed builds against OpenSSL built with `no-cast`.
  | * Fixed debug formatting of `GeneralName`.
  | 
  | ### Deprecated
  | 

--[ Match #614 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | Fixed
  | 
  | * `SslConnector` no longer sets the SNI extension when connecting to an IP address.
  | 
  | ### Added
  | 
  | * Implemented `Ord`, `PartialOrd`, `Eq`, and `PartialEq` for `Asn1Integer` and `Asn1IntegerRef`.
  | * Added `X509Ref::crl_distribution_points`, and `DistPoint`.
  | 
  | ## [v0.10.48] - 2023-03-23
  | 
  | ### Fixed
  | 
  | * Fixed injection vulnerabilities where OpenSSL's configuration mini-language could be used via `x50
  |   * As part of fixing this `SubjectAlternativeName::dir_name` and `SubjectAlternativeName::other_nam
  | * Fixed several NULL pointer dereferences in OpenSSL that could be triggered via `x509::X509Extensio
  | * Fixed a data-race with `x509::X509Name` that are created with `x509::X509NameBuilder` and then use
  | * Fixed LibreSSL version checking. More functions should now be correctly available on LibreSSL.
  | 
  | 

--[ Match #615 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | 
  | ### Fixed
  | 
  | * `SslConnector` no longer sets the SNI extension when connecting to an IP address.
  | 
  | ### Added
  | 
  | 

--[ Match #616 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | ### Fixed
  | 
  | * Fixed compilation with the latest version of BoringSSL.
  | * Fixed compilation when OpenSSL is compiled with `OPENSSL_NO_OCB`.
  | * Fixed a segfault in `X509VerifyParamRef::set_host` when called with an empty string.
  | 
  | ### Added
  | 

--[ Match #617 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\CHANGELOG.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | 
  | ### Changed
  | 
  | * Fixed the availability of `Id::RSA_PSS` on OpenSSL
  | 
  | ## [v0.10.58] - 2023-11-01
  | 
  | 

--[ Match #618 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                 let pattern_after_wildcard = &pattern[wildcard_end..];
  |                 let hostname_after_wildcard = &hostname[hostname_label_end..];
  | 
  |                 Some(pattern_after_wildcard.eq_ignore_ascii_case(hostname_after_wildcard))
  |             }
  | 
  |             fn matches_ip(expected: &IpAddr, actual: &[u8]) -> bool {
  | 

--[ Match #619 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                 };
  | 
  |                 let pattern_after_wildcard = &pattern[wildcard_end..];
  |                 let hostname_after_wildcard = &hostname[hostname_label_end..];
  | 
  |                 Some(pattern_after_wildcard.eq_ignore_ascii_case(hostname_after_wildcard))
  |             }
  | 

--[ Match #620 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                 };
  | 
  |                 let pattern_after_wildcard = &pattern[wildcard_end..];
  |                 let hostname_after_wildcard = &hostname[hostname_label_end..];
  | 
  |                 Some(pattern_after_wildcard.eq_ignore_ascii_case(hostname_after_wildcard))
  |             }
  | 

--[ Match #621 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                 };
  | 
  |                 let pattern_after_wildcard = &pattern[wildcard_end..];
  |                 let hostname_after_wildcard = &hostname[hostname_label_end..];
  | 
  |                 Some(pattern_after_wildcard.eq_ignore_ascii_case(hostname_after_wildcard))
  |             }
  | 

--[ Match #622 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                     return None;
  |                 }
  | 
  |                 let hostname_label_end = match hostname.find('.') {
  |                     Some(l) => l,
  |                     None => return None,
  |                 };
  | 

--[ Match #623 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                     return None;
  |                 }
  | 
  |                 let hostname_label_end = match hostname.find('.') {
  |                     Some(l) => l,
  |                     None => return None,
  |                 };
  | 

--[ Match #624 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                 matches_wildcard(pattern, hostname).unwrap_or_else(|| pattern.eq_ignore_ascii_case(h
  |             }
  | 
  |             fn matches_wildcard(pattern: &str, hostname: &str) -> Option<bool> {
  |                 let wildcard_location = match pattern.find('*') {
  |                     Some(l) => l,
  |                     None => return None,
  | 

--[ Match #625 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                     hostname = &hostname[..hostname.len() - 1];
  |                 }
  | 
  |                 matches_wildcard(pattern, hostname).unwrap_or_else(|| pattern.eq_ignore_ascii_case(h
  |             }
  | 
  |             fn matches_wildcard(pattern: &str, hostname: &str) -> Option<bool> {
  | 

--[ Match #626 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                     hostname = &hostname[..hostname.len() - 1];
  |                 }
  | 
  |                 matches_wildcard(pattern, hostname).unwrap_or_else(|| pattern.eq_ignore_ascii_case(h
  |             }
  | 
  |             fn matches_wildcard(pattern: &str, hostname: &str) -> Option<bool> {
  | 

--[ Match #627 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                     pattern = &pattern[..pattern.len() - 1];
  |                 }
  |                 if hostname.ends_with('.') {
  |                     hostname = &hostname[..hostname.len() - 1];
  |                 }
  | 
  |                 matches_wildcard(pattern, hostname).unwrap_or_else(|| pattern.eq_ignore_ascii_case(h
  | 

--[ Match #628 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                     pattern = &pattern[..pattern.len() - 1];
  |                 }
  |                 if hostname.ends_with('.') {
  |                     hostname = &hostname[..hostname.len() - 1];
  |                 }
  | 
  |                 matches_wildcard(pattern, hostname).unwrap_or_else(|| pattern.eq_ignore_ascii_case(h
  | 

--[ Match #629 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                     pattern = &pattern[..pattern.len() - 1];
  |                 }
  |                 if hostname.ends_with('.') {
  |                     hostname = &hostname[..hostname.len() - 1];
  |                 }
  | 
  |                 matches_wildcard(pattern, hostname).unwrap_or_else(|| pattern.eq_ignore_ascii_case(h
  | 

--[ Match #630 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                 if pattern.ends_with('.') {
  |                     pattern = &pattern[..pattern.len() - 1];
  |                 }
  |                 if hostname.ends_with('.') {
  |                     hostname = &hostname[..hostname.len() - 1];
  |                 }
  | 
  | 

--[ Match #631 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                 }
  |             }
  | 
  |             fn matches_dns(mut pattern: &str, mut hostname: &str) -> bool {
  |                 // first strip trailing . off of pattern and hostname to normalize
  |                 if pattern.ends_with('.') {
  |                     pattern = &pattern[..pattern.len() - 1];
  | 

--[ Match #632 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                 ok
  |             }
  | 
  |             fn verify_hostname(domain: &str, cert: &X509Ref) -> bool {
  |                 match cert.subject_alt_names() {
  |                     Some(names) => verify_subject_alt_names(domain, names),
  |                     None => verify_subject_name(domain, &cert.subject_name()),
  | 

--[ Match #633 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                         .and_then(|idx| x509_ctx.ex_data(idx))
  |                         .and_then(|ssl| ssl.ex_data(*hostname_idx)),
  |                 ) {
  |                     (Some(x509), Some(domain)) => verify_hostname(domain, &x509),
  |                     _ => true,
  |                 };
  | 
  | 

--[ Match #634 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                     X509StoreContext::ssl_idx()
  |                         .ok()
  |                         .and_then(|idx| x509_ctx.ex_data(idx))
  |                         .and_then(|ssl| ssl.ex_data(*hostname_idx)),
  |                 ) {
  |                     (Some(x509), Some(domain)) => verify_hostname(domain, &x509),
  |                     _ => true,
  | 

--[ Match #635 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                 }
  | 
  |                 let hostname_idx =
  |                     try_get_hostname_idx().expect("failed to initialize hostname index");
  |                 let ok = match (
  |                     x509_ctx.current_cert(),
  |                     X509StoreContext::ssl_idx()
  | 

--[ Match #636 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                 }
  | 
  |                 let hostname_idx =
  |                     try_get_hostname_idx().expect("failed to initialize hostname index");
  |                 let ok = match (
  |                     x509_ctx.current_cert(),
  |                     X509StoreContext::ssl_idx()
  | 

--[ Match #637 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                     return preverify_ok;
  |                 }
  | 
  |                 let hostname_idx =
  |                     try_get_hostname_idx().expect("failed to initialize hostname index");
  |                 let ok = match (
  |                     x509_ctx.current_cert(),
  | 

--[ Match #638 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  | 
  |             static HOSTNAME_IDX: OnceCell<Index<Ssl, String>> = OnceCell::new();
  | 
  |             pub fn try_get_hostname_idx() -> Result<&'static Index<Ssl, String>, ErrorStack> {
  |                 HOSTNAME_IDX.get_or_try_init(Ssl::new_ex_index)
  |             }
  | 
  | 

--[ Match #639 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |         fn setup_verify_hostname(ssl: &mut Ssl, domain: &str) -> Result<(), ErrorStack> {
  |             let domain = domain.to_string();
  |             let hostname_idx = verify::try_get_hostname_idx()?;
  |             ssl.set_ex_data(*hostname_idx, domain);
  |             Ok(())
  |         }
  | 
  | 

--[ Match #640 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  | 
  |         fn setup_verify_hostname(ssl: &mut Ssl, domain: &str) -> Result<(), ErrorStack> {
  |             let domain = domain.to_string();
  |             let hostname_idx = verify::try_get_hostname_idx()?;
  |             ssl.set_ex_data(*hostname_idx, domain);
  |             Ok(())
  |         }
  | 

--[ Match #641 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  | 
  |         fn setup_verify_hostname(ssl: &mut Ssl, domain: &str) -> Result<(), ErrorStack> {
  |             let domain = domain.to_string();
  |             let hostname_idx = verify::try_get_hostname_idx()?;
  |             ssl.set_ex_data(*hostname_idx, domain);
  |             Ok(())
  |         }
  | 

--[ Match #642 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |             ctx.set_verify_callback(SslVerifyMode::PEER, verify::verify_callback);
  |         }
  | 
  |         fn setup_verify_hostname(ssl: &mut Ssl, domain: &str) -> Result<(), ErrorStack> {
  |             let domain = domain.to_string();
  |             let hostname_idx = verify::try_get_hostname_idx()?;
  |             ssl.set_ex_data(*hostname_idx, domain);
  | 

--[ Match #643 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |             ctx.set_verify(SslVerifyMode::PEER);
  |         }
  | 
  |         fn setup_verify_hostname(ssl: &mut SslRef, domain: &str) -> Result<(), ErrorStack> {
  |             use crate::x509::verify::X509CheckFlags;
  | 
  |             let param = ssl.param_mut();
  | 

--[ Match #644 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |         }
  | 
  |         if self.verify_hostname {
  |             setup_verify_hostname(&mut self.ssl, domain)?;
  |         }
  | 
  |         Ok(self.ssl)
  | 

--[ Match #645 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |             self.ssl.set_hostname(domain)?;
  |         }
  | 
  |         if self.verify_hostname {
  |             setup_verify_hostname(&mut self.ssl, domain)?;
  |         }
  | 
  | 

--[ Match #646 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |     /// The domain is used for SNI (if it is not an IP address) and hostname verification if enabled
  |     pub fn into_ssl(mut self, domain: &str) -> Result<Ssl, ErrorStack> {
  |         if self.sni && domain.parse::<IpAddr>().is_err() {
  |             self.ssl.set_hostname(domain)?;
  |         }
  | 
  |         if self.verify_hostname {
  | 

--[ Match #647 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |     /// used, *any* valid certificate for *any* site will be trusted for use from any other. This
  |     /// introduces a significant vulnerability to man-in-the-middle attacks.
  |     pub fn set_verify_hostname(&mut self, verify_hostname: bool) {
  |         self.verify_hostname = verify_hostname;
  |     }
  | 
  |     /// Returns an `Ssl` configured to connect to the provided domain.
  | 

--[ Match #648 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |     /// used, *any* valid certificate for *any* site will be trusted for use from any other. This
  |     /// introduces a significant vulnerability to man-in-the-middle attacks.
  |     pub fn set_verify_hostname(&mut self, verify_hostname: bool) {
  |         self.verify_hostname = verify_hostname;
  |     }
  | 
  |     /// Returns an `Ssl` configured to connect to the provided domain.
  | 

--[ Match #649 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |     /// You should think very carefully before you use this method. If hostname verification is not
  |     /// used, *any* valid certificate for *any* site will be trusted for use from any other. This
  |     /// introduces a significant vulnerability to man-in-the-middle attacks.
  |     pub fn set_verify_hostname(&mut self, verify_hostname: bool) {
  |         self.verify_hostname = verify_hostname;
  |     }
  | 
  | 

--[ Match #650 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |     /// You should think very carefully before you use this method. If hostname verification is not
  |     /// used, *any* valid certificate for *any* site will be trusted for use from any other. This
  |     /// introduces a significant vulnerability to man-in-the-middle attacks.
  |     pub fn set_verify_hostname(&mut self, verify_hostname: bool) {
  |         self.verify_hostname = verify_hostname;
  |     }
  | 
  | 

--[ Match #651 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  | 
  |     /// A builder-style version of `set_verify_hostname`.
  |     pub fn verify_hostname(mut self, verify_hostname: bool) -> ConnectConfiguration {
  |         self.set_verify_hostname(verify_hostname);
  |         self
  |     }
  | 
  | 

--[ Match #652 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  | 
  |     /// A builder-style version of `set_verify_hostname`.
  |     pub fn verify_hostname(mut self, verify_hostname: bool) -> ConnectConfiguration {
  |         self.set_verify_hostname(verify_hostname);
  |         self
  |     }
  | 
  | 

--[ Match #653 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |     }
  | 
  |     /// A builder-style version of `set_verify_hostname`.
  |     pub fn verify_hostname(mut self, verify_hostname: bool) -> ConnectConfiguration {
  |         self.set_verify_hostname(verify_hostname);
  |         self
  |     }
  | 

--[ Match #654 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |     }
  | 
  |     /// A builder-style version of `set_verify_hostname`.
  |     pub fn verify_hostname(mut self, verify_hostname: bool) -> ConnectConfiguration {
  |         self.set_verify_hostname(verify_hostname);
  |         self
  |     }
  | 

--[ Match #655 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  | pub struct ConnectConfiguration {
  |     ssl: Ssl,
  |     sni: bool,
  |     verify_hostname: bool,
  | }
  | 
  | impl ConnectConfiguration {
  | 

--[ Match #656 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |         Ssl::new(&self.0).map(|ssl| ConnectConfiguration {
  |             ssl,
  |             sni: true,
  |             verify_hostname: true,
  |         })
  |     }
  | 
  | 

--[ Match #657 of 666 ]--
   Rule Id: BD000704
       Tag: Security.Backdoor.DataExfiltration.Hostname
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: .hostname
  |                     pattern = &pattern[..pattern.len() - 1];
  |                 }
  |                 if hostname.ends_with('.') {
  |                     hostname = &hostname[..hostname.len() - 1];
  |                 }
  | 
  |                 matches_wildcard(pattern, hostname).unwrap_or_else(|| pattern.eq_ignore_ascii_case(h
  | 

--[ Match #658 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  |                 let ip = domain.parse();
  | 
  |                 for name in &names {
  |                     match ip {
  |                         Ok(ip) => {
  |                             if let Some(actual) = name.ipaddress() {
  |                                 if matches_ip(&ip, actual) {
  | 

--[ Match #659 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\connector.rs
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  |             }
  | 
  |             fn verify_subject_alt_names(domain: &str, names: Stack<GeneralName>) -> bool {
  |                 let ip = domain.parse();
  | 
  |                 for name in &names {
  |                     match ip {
  | 

--[ Match #660 of 666 ]--
   Rule Id: BD000700
       Tag: Security.Backdoor.DataExfiltration
  Severity: Important, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\bio.rs
   Pattern: \.(request|post|get)\(
  |     });
  | 
  |     unsafe {
  |         let bio = cvt_p(BIO_new(method.0.get()))?;
  |         BIO_set_data(bio, Box::into_raw(state) as *mut _);
  |         BIO_set_init(bio, 1);
  | 
  | 

--[ Match #661 of 666 ]--
   Rule Id: BD000600
       Tag: Security.Backdoor.LOLBAS.Windows
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\bio.rs
   Pattern: \s(advpack\.dll|appvlp|at|atbroker|bash|bginfo|bitsadmin|cdb|certutil|cl_invocation\.ps1|cl_mutexverifiers\.ps1|cmd|cmdkey|cmstp|comsvcs\.dll|control|csc|cscript|csi|devtoolslauncher|dfsvc|diskshadow|dnscmd|dnx|dotnet|dxcap|esentutl|eventvwr|excel|expand|extexport|extrac32|findstr|forfiles|ftp|gfxdownloadwrapper|gpscript|hh|ie4uinit|ieadvpack\.dll|ieaframe\.dll|ic|infdefaultinstall|installutil|jsc|makecab|manage-bde\.wsf|mavinject|mftrace|microsoft\.workflow\.compiler|mmc|msbuild|msconfig|msdeploy|msdt|mshta|mshtml\.dll|msc|msxsl|netsh|odbcconf|pcalua|pcwrun|pcwutl\.dll|pester\.bat|powerpnt|presentationhost|pubprn\.vbs|rcsi|reg|regasm|regedit|register-cimprovider|regsvcs|regsvr32|rpcping|rundll32|runonce|runscripthelper|sc|schtasks|scriptrunner|setupapi\.dll|shdocvw\.dll|shell32\.dll|slmgr\.vbs|sqldumper|sqlps|sqltoolsps|squirrel|syncappvpublishingserver|syncappvpublishingserver\.vbs|syssetup\.dll|te|tracker|tttracer|update|url\.dll|verclsid|vsjitdebugger|wab|winrm\.vbs|winword|wmic|wscript|wsl|wsreset|xwizard|zipfldr\.dll)\s
  |                 0
  |             }
  |         }
  |     } else if cmd == BIO_CTRL_DGRAM_QUERY_MTU {
  |         state.dtls_mtu_size
  |     } else {
  |         0
  | 

--[ Match #662 of 666 ]--
   Rule Id: BD000600
       Tag: Security.Backdoor.LOLBAS.Windows
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\ssl\bio.rs
   Pattern: \s(advpack\.dll|appvlp|at|atbroker|bash|bginfo|bitsadmin|cdb|certutil|cl_invocation\.ps1|cl_mutexverifiers\.ps1|cmd|cmdkey|cmstp|comsvcs\.dll|control|csc|cscript|csi|devtoolslauncher|dfsvc|diskshadow|dnscmd|dnx|dotnet|dxcap|esentutl|eventvwr|excel|expand|extexport|extrac32|findstr|forfiles|ftp|gfxdownloadwrapper|gpscript|hh|ie4uinit|ieadvpack\.dll|ieaframe\.dll|ic|infdefaultinstall|installutil|jsc|makecab|manage-bde\.wsf|mavinject|mftrace|microsoft\.workflow\.compiler|mmc|msbuild|msconfig|msdeploy|msdt|mshta|mshtml\.dll|msc|msxsl|netsh|odbcconf|pcalua|pcwrun|pcwutl\.dll|pester\.bat|powerpnt|presentationhost|pubprn\.vbs|rcsi|reg|regasm|regedit|register-cimprovider|regsvcs|regsvr32|rpcping|rundll32|runonce|runscripthelper|sc|schtasks|scriptrunner|setupapi\.dll|shdocvw\.dll|shell32\.dll|slmgr\.vbs|sqldumper|sqlps|sqltoolsps|squirrel|syncappvpublishingserver|syncappvpublishingserver\.vbs|syssetup\.dll|te|tracker|tttracer|update|url\.dll|verclsid|vsjitdebugger|wab|winrm\.vbs|winword|wmic|wscript|wsl|wsreset|xwizard|zipfldr\.dll)\s
  | ) -> c_long {
  |     let state = state::<S>(bio);
  | 
  |     if cmd == BIO_CTRL_FLUSH {
  |         match catch_unwind(AssertUnwindSafe(|| state.stream.flush())) {
  |             Ok(Ok(())) => 1,
  |             Ok(Err(err)) => {
  | 

--[ Match #663 of 666 ]--
   Rule Id: BD000600
       Tag: Security.Backdoor.LOLBAS.Windows
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\README.md
   Pattern: \s(advpack\.dll|appvlp|at|atbroker|bash|bginfo|bitsadmin|cdb|certutil|cl_invocation\.ps1|cl_mutexverifiers\.ps1|cmd|cmdkey|cmstp|comsvcs\.dll|control|csc|cscript|csi|devtoolslauncher|dfsvc|diskshadow|dnscmd|dnx|dotnet|dxcap|esentutl|eventvwr|excel|expand|extexport|extrac32|findstr|forfiles|ftp|gfxdownloadwrapper|gpscript|hh|ie4uinit|ieadvpack\.dll|ieaframe\.dll|ic|infdefaultinstall|installutil|jsc|makecab|manage-bde\.wsf|mavinject|mftrace|microsoft\.workflow\.compiler|mmc|msbuild|msconfig|msdeploy|msdt|mshta|mshtml\.dll|msc|msxsl|netsh|odbcconf|pcalua|pcwrun|pcwutl\.dll|pester\.bat|powerpnt|presentationhost|pubprn\.vbs|rcsi|reg|regasm|regedit|register-cimprovider|regsvcs|regsvr32|rpcping|rundll32|runonce|runscripthelper|sc|schtasks|scriptrunner|setupapi\.dll|shdocvw\.dll|shell32\.dll|slmgr\.vbs|sqldumper|sqlps|sqltoolsps|squirrel|syncappvpublishingserver|syncappvpublishingserver\.vbs|syssetup\.dll|te|tracker|tttracer|update|url\.dll|verclsid|vsjitdebugger|wab|winrm\.vbs|winword|wmic|wscript|wsl|wsreset|xwizard|zipfldr\.dll)\s
  | 
  | The current supported release of `openssl` is 0.10 and `openssl-sys` is 0.9.
  | 
  | New major versions will be published at most once per year. After a new
  | release, the previous major version will be partially supported with bug
  | fixes for 3 months, after which support will be dropped entirely.
  | 
  | 

--[ Match #664 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\README.md
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | # rust-openssl
  | 
  | [![crates.io](https://img.shields.io/crates/v/openssl.svg)](https://crates.io/crates/openssl)
  | 
  | OpenSSL bindings for the Rust programming language.
  | 
  | [Documentation](https://docs.rs/openssl).
  | 

--[ Match #665 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  | 
  |         let mut emesg = vec![0; k0.size() as usize];
  |         k0.public_encrypt(&msg, &mut emesg, Padding::PKCS1).unwrap();
  |         let mut dmesg = vec![0; k1.size() as usize];
  |         let len = k1
  |             .private_decrypt(&emesg, &mut dmesg, Padding::PKCS1)
  |             .unwrap();
  | 

--[ Match #666 of 666 ]--
   Rule Id: BD000610
       Tag: Security.Backdoor.LOLBAS.Linux
  Severity: Moderate, Confidence: Low
  Filename: \cargo-pkg-cargo-openssl@0.10\openssl-0.10.60\src\rsa.rs
   Pattern: \s(apt|apt\-get|aria2c|arp|ash|awk|base64|bash|bpftrace|busybox|cat|chmod|chown|cp|cpan|cpulimit|crontab|csh|curl|cut|dash|dd|diff|dmesg|dmsetup|dnf|docker|dpkg|easy_install|ed|emacs|env|expand|expect|facter|find|finger|flock|fmt|ftp|gawk|gdb|gimp|git|grep|head|iftop|ionice|ip|irb|jjs|journalctl|jrunscript|ksh|ld\.so|ldconfig|logsave|ltrace|lua|mail|mawk|mount|mtr|mv|mysql|nano|nawk|nc|nice|nl|nmap|node|od|openssl|perl|pg|php|pic|pico|pip|puppet|readelf|red|rlogin|rlwrap|rpm|rpmquery|rsync|ruby|run\-mailcap|run\-parts|rvim|scp|screen|script|sed|service|setarch|sftp|shuf|smbclient|socat|sort|sqlite3|ssh|start\-stop\-daemon|stdbuf|strace|systemctl|tail|tar|taskset|tclsh|tcpdump|tee|telnet|tftp|time|timeout|tmux|top|ul|unexpand|uniq|unshare|vi|vim|watch|wget|whois|wish|xargs|xxd|yum|zsh|zypper)\s
  |         let mut emesg = vec![0; k0.size() as usize];
  |         k0.private_encrypt(&msg, &mut emesg, Padding::PKCS1)
  |             .unwrap();
  |         let mut dmesg = vec![0; k1.size() as usize];
  |         let len = k1
  |             .public_decrypt(&emesg, &mut dmesg, Padding::PKCS1)
  |             .unwrap();
  | 

666 matches found.
